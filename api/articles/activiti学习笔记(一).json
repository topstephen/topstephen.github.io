{"title":"Activiti 学习笔记（一）","uid":"41fd5f0c4276a28984db38b1e679ed38","slug":"activiti学习笔记(一)","date":"2019-11-22T15:58:00.000Z","updated":"2021-04-27T12:58:48.000Z","comments":true,"path":"api/articles/activiti学习笔记(一).json","keywords":"Stephen web3","cover":"https://user-gold-cdn.xitu.io/2020/1/3/16f6a66bd2b08c65?w=1920&h=1080&f=jpeg&s=979284","content":"<link rel=\"stylesheet\" href=\"/owl.css\"><link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><h1 id=\"一、-Activiti流程引擎简介\"><a href=\"#一、-Activiti流程引擎简介\" class=\"headerlink\" title=\"一、 Activiti流程引擎简介\"></a>一、 Activiti流程引擎简介</h1><ul>\n<li>此项目于2010年Tom Bayen（jBPM创始人）离开jBoss后加入Alfresco公司之后的又一力作；第一版在2010年5月发布，当时仅支持最简单的流程处理，后来版本发布频率固定为每两个月一版。 值得一提的是参与项目开发的除了Tom Bayen和十几位核心开发人员之外还有其他公司的成员的参与，例如：SpringSource、MuleSoft、Salves、Signavio、FuseSource、NextLevel等公司。  </li>\n<li>Activiti是一个针对企业用户、开发人员、系统管理员轻量级工作流业务管理平台。其核心是使用Java开发的快速、稳定BPMN 2.0流程引擎。Activiti 是在 Apache V2 许可下发布的。Activiti可以运行在任何类型的Java程序中，例如服务器、集群、云服务。它可以完美地与Spring集成。计基于简约思想的设计使Activiti非常的轻量级。 它有着活跃的社区，而且越来越多的企业都选择Activiti作为自己的流程引擎或者嵌入到自己的系统平台中（例如ESB）。</li>\n</ul>\n<h1 id=\"二、-Activiti-数据库支持\"><a href=\"#二、-Activiti-数据库支持\" class=\"headerlink\" title=\"二、 Activiti 数据库支持\"></a>二、 Activiti 数据库支持</h1><p>Activiti的后台是有数据库的支持，所有的表都以ACT_开头。 第二部分是表示表的用途的两个字母标识。 用途也和服务的API对应。 </p>\n<ul>\n<li>ACT_RE_*: ‘RE’表示repository。 这个前缀的表包含了流程定义和流程静态资源 （图片，规则，等等）。 </li>\n<li>ACT_RU_*: ‘RU’表示runtime。 这些运行时的表，包含流程实例，任务，变量，异步任务，等运行中的数据。 Activiti只在流程实例执行过程中保存这些数据， 在流程结束时就会删除这些记录。 这样运行时表可以一直很小速度很快。 </li>\n<li>ACT_ID_*: ‘ID’表示identity。 这些表包含身份信息，比如用户，组等等。 </li>\n<li>ACT_HI_*: ‘HI’表示history。 这些表包含历史数据，比如历史流程实例， 变量，任务等等。 </li>\n<li>ACT_GE_*: 通用数据， 用于不同场景下，如存放资源文件</li>\n</ul>\n<h1 id=\"三、-Activiti-如何使用\"><a href=\"#三、-Activiti-如何使用\" class=\"headerlink\" title=\"三、 Activiti 如何使用\"></a>三、 Activiti 如何使用</h1><h2 id=\"1-部署Activiti\"><a href=\"#1-部署Activiti\" class=\"headerlink\" title=\"1. 部署Activiti\"></a>1. 部署Activiti</h2><p>Activiti 是一个工作流引擎（其实就是一堆jar包 API），业务系统使用 activiti 来对系统的业务流<br>程进行自动化管理，为了方便业务系统访问(操作)activiti 的接口或功能，通常将 activiti 环境与业务<br>系统的环境集成在一起。</p>\n<h2 id=\"2-流程定义\"><a href=\"#2-流程定义\" class=\"headerlink\" title=\"2. 流程定义\"></a>2. 流程定义</h2><p>使用 activiti 流程建模工具(activity-designer)定义业务流程(.bpmn 文件) 。<br>.bpmn 文件就是业务流程定义文件，通过 xml 定义业务流程。<br>如果使用其它公司开发的工作作引擎一般都提供了可视化的建模工具(Process Designer)用于生<br>成流程定义文件，建模工具操作直观，一般都支持图形化拖拽方式、多窗口的用户界面、丰富的过<br>程图形元素、过程元素拷贝、粘贴、删除等功能。</p>\n<img src=\"https://user-gold-cdn.xitu.io/2020/1/3/16f6a627bb6d2e87?w=1222&h=601&f=png&s=441693\"/>\n\n<h2 id=\"3-流程定义部署\"><a href=\"#3-流程定义部署\" class=\"headerlink\" title=\"3. 流程定义部署\"></a>3. 流程定义部署</h2><p>向 activiti 部署业务流程定义（.bpmn 文件）。<br>使用 activiti 提供的 api 向 activiti 中部署.bpmn 文件（一般情况还需要一块儿部署业务流程的图<br>片.png）</p>\n<h2 id=\"4-启动一个流程实例-ProcessInstance\"><a href=\"#4-启动一个流程实例-ProcessInstance\" class=\"headerlink\" title=\"4. 启动一个流程实例(ProcessInstance)\"></a>4. 启动一个流程实例(ProcessInstance)</h2><p>启动一个流程实例表示开始一次业务流程的运行，比如员工请假流程部署完成，如果张三要请<br>假就可以启动一个流程实例，如果李四要请假也启动一个流程实例，两个流程的执行互相不影<br>响，就好比定义一个 java 类，实例化两个对象一样，部署的流程就好比 java 类，启动一个流程<br>实例就好比 new 一个 java 对象。</p>\n<h2 id=\"5-用户查询代办任务-Task\"><a href=\"#5-用户查询代办任务-Task\" class=\"headerlink\" title=\"5. 用户查询代办任务(Task)\"></a>5. 用户查询代办任务(Task)</h2><p>因为现在系统的业务流程已经交给 activiti 管理，通过 activiti 就可以查询当前流程执行到哪了，<br>当前用户需要办理什么任务了，这些 activiti帮我们管理了，而不像上边需要我们在 sql语句中的where<br>条件中指定当前查询的状态值是多少。</p>\n<h2 id=\"6-用户办理任务\"><a href=\"#6-用户办理任务\" class=\"headerlink\" title=\"6. 用户办理任务\"></a>6. 用户办理任务</h2><p>用户查询待办任务后，就可以办理某个任务，如果这个任务办理完成还需要其它用户办理，比如采<br>购单创建后由部门经理审核，这个过程也是由 activiti 帮我们完成了，不需要我们在代码中硬编码指<br>定下一个任务办理人了。</p>\n<h2 id=\"7-流程结束\"><a href=\"#7-流程结束\" class=\"headerlink\" title=\"7. 流程结束\"></a>7. 流程结束</h2><p>当任务办理完成没有下一个任务&#x2F;结点了，这个流程实例就完成了。</p>\n<h1 id=\"四、-Activiti-服务架构图\"><a href=\"#四、-Activiti-服务架构图\" class=\"headerlink\" title=\"四、 Activiti 服务架构图\"></a>四、 Activiti 服务架构图</h1><img src=\"https://i.loli.net/2020/01/03/nEOgGw43lIafYrV.png\"/>\n\n<p>在新版本中， IdentityService，FormService 两个 Serivce 都已经删除了。</p>\n<h2 id=\"1-activiti-cfg-xml\"><a href=\"#1-activiti-cfg-xml\" class=\"headerlink\" title=\"1. activiti.cfg.xml\"></a>1. activiti.cfg.xml</h2><p>activiti 的引擎配置文件，包括：ProcessEngineConfiguration 的定义、数据源定义、事务管理器等，<br>此文件其实就是一个 spring 配置文件，下面是一个基本的配置只配置了 ProcessEngineConfiguration<br>和数据源：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;\n&lt;beans xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&quot;\n       xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;\n       xmlns:context&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context&quot;\n       xmlns:tx&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;tx&quot;\n       xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&#x2F;spring-beans.xsd\n\t\t\t\t\t\thttp:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;contex http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context&#x2F;spring-context.xsd\n\t\t\t\t\t\thttp:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;tx http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;tx&#x2F;spring-tx.xsd&quot;&gt;\n\n    &lt;!--数据源配置dbcp--&gt;\n    &lt;bean id&#x3D;&quot;dataSource&quot; class&#x3D;&quot;org.apache.commons.dbcp.BasicDataSource&quot;&gt;\n        &lt;property name&#x3D;&quot;driverClassName&quot; value&#x3D;&quot;com.mysql.jdbc.Driver&quot; &#x2F;&gt;\n        &lt;property name&#x3D;&quot;url&quot; value&#x3D;&quot;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;activiti&quot; &#x2F;&gt;\n        &lt;property name&#x3D;&quot;username&quot; value&#x3D;&quot;root&quot; &#x2F;&gt;\n        &lt;property name&#x3D;&quot;password&quot; value&#x3D;&quot;root&quot; &#x2F;&gt;\n    &lt;&#x2F;bean&gt;\n    &lt;!--activiti单独运行的ProcessEngine配置对象(processEngineConfiguration),使用单独启动方式\n        默认情况下：bean的id&#x3D;processEngineConfiguration\n    --&gt;\n    &lt;bean id&#x3D;&quot;processEngineConfiguration&quot; class&#x3D;&quot;org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration&quot;&gt;\n    &lt;!--代表数据源--&gt;\n    &lt;property name&#x3D;&quot;dataSource&quot; ref&#x3D;&quot;dataSource&quot;&gt;&lt;&#x2F;property&gt;\n    &lt;!--代表是否生成表结构--&gt;\n    &lt;property name&#x3D;&quot;databaseSchemaUpdate&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;\n    &lt;&#x2F;bean&gt;\n&lt;&#x2F;beans&gt;</code></pre>\n\n<h2 id=\"2-ProcessEngineConfiguration\"><a href=\"#2-ProcessEngineConfiguration\" class=\"headerlink\" title=\"2. ProcessEngineConfiguration\"></a>2. ProcessEngineConfiguration</h2><p>流程引擎的配置类，通过 ProcessEngineConfiguration 可以创建工作流引擎 ProceccEngine，常用的两种方法如下：</p>\n<h3 id=\"StandaloneProcessEngineConfiguration\"><a href=\"#StandaloneProcessEngineConfiguration\" class=\"headerlink\" title=\"StandaloneProcessEngineConfiguration\"></a>StandaloneProcessEngineConfiguration</h3><p>通过org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration<br>Activiti 可以单独运行，使用它创建的 ProcessEngine，Activiti 会自己处理事务。</p>\n<p>配置文件方式：<br>通常在 activiti.cfg.xml 配置文件中定义一个 id 为 processEngineConfiguration 的 bean，这里<br>会使用 spring 的依赖注入来构建引擎。</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;bean id&#x3D;&quot;processEngineConfiguration&quot;\nclass&#x3D;&quot;org.activiti.engine.impl.cfg.StandaloneProcessEngineConfig\nuration&quot;&gt;\n&lt;!-- 数据源 --&gt; &lt;property name&#x3D;&quot;dataSource&quot; ref&#x3D;&quot;dataSource&quot; &#x2F;&gt;\n&lt;!-- 数据库策略 --&gt; &lt;property name&#x3D;&quot;databaseSchemaUpdate&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;\n&lt;&#x2F;bean&gt;</code></pre>\n\n<h3 id=\"SpringProcessEngineConfiguration\"><a href=\"#SpringProcessEngineConfiguration\" class=\"headerlink\" title=\"SpringProcessEngineConfiguration\"></a>SpringProcessEngineConfiguration</h3><p>通过 org.activiti.spring.SpringProcessEngineConfiguration 与 Spring 整合。<br>创建 spring 与 activiti 的整合配置文件：<br>activity-spring.cfg.xml（名称不固定）</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;beans xmlns&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&quot;\nxmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;\nxmlns:mvc&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;mvc&quot;\nxmlns:context&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context&quot;\nxmlns:aop&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;aop&quot;\nxmlns:tx&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;tx&quot;\nxsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans \nhttp:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;beans&#x2F;spring-beans-3.1.xsd \nhttp:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;mvc \nhttp:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;mvc&#x2F;spring-mvc-3.1.xsd \nhttp:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context \nhttp:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;context&#x2F;spring-context-3.1.xsd \nhttp:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;aop \nhttp:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;aop&#x2F;spring-aop-3.1.xsd \nhttp:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;tx \nhttp:&#x2F;&#x2F;www.springframework.org&#x2F;schema&#x2F;tx&#x2F;spring-tx-3.1.xsd &quot;&gt;\n&lt;!-- 工作流引擎配置bean --&gt; &lt;bean id&#x3D;&quot;processEngineConfiguration&quot;\nclass&#x3D;&quot;org.activiti.spring.SpringProcessEngineConfiguration&quot;&gt;\n&lt;!-- 数据源 --&gt; &lt;property name&#x3D;&quot;dataSource&quot; ref&#x3D;&quot;dataSource&quot; &#x2F;&gt;\n&lt;!-- 使用spring事务管理器 --&gt; &lt;property name&#x3D;&quot;transactionManager&quot; ref&#x3D;&quot;transactionManager&quot; &#x2F;&gt;\n&lt;!-- 数据库策略 --&gt; &lt;property name&#x3D;&quot;databaseSchemaUpdate&quot; value&#x3D;&quot;drop-create&quot; &#x2F;&gt;\n&lt;!-- activiti的定时任务关闭 --&gt; &lt;property name&#x3D;&quot;jobExecutorActivate&quot; value&#x3D;&quot;false&quot; &#x2F;&gt;\n&lt;&#x2F;bean&gt;\n&lt;!-- 流程引擎 --&gt; &lt;bean id&#x3D;&quot;processEngine&quot;\nclass&#x3D;&quot;org.activiti.spring.ProcessEngineFactoryBean&quot;&gt;\n\n&lt;property name&#x3D;&quot;processEngineConfiguration&quot;\nref&#x3D;&quot;processEngineConfiguration&quot; &#x2F;&gt;\n&lt;&#x2F;bean&gt;\n&lt;!-- 资源服务service --&gt; &lt;bean id&#x3D;&quot;repositoryService&quot; factory-bean&#x3D;&quot;processEngine&quot;\nfactory-method&#x3D;&quot;getRepositoryService&quot; &#x2F;&gt;\n&lt;!-- 流程运行service --&gt; &lt;bean id&#x3D;&quot;runtimeService&quot; factory-bean&#x3D;&quot;processEngine&quot;\nfactory-method&#x3D;&quot;getRuntimeService&quot; &#x2F;&gt;\n&lt;!-- 任务管理service --&gt; &lt;bean id&#x3D;&quot;taskService&quot; factory-bean&#x3D;&quot;processEngine&quot;\nfactory-method&#x3D;&quot;getTaskService&quot; &#x2F;&gt;\n&lt;!-- 历史管理service --&gt; &lt;bean id&#x3D;&quot;historyService&quot; factory-bean&#x3D;&quot;processEngine&quot;\nfactory-method&#x3D;&quot;getHistoryService&quot; &#x2F;&gt;\n&lt;!-- 用户管理service --&gt; &lt;bean id&#x3D;&quot;identityService&quot; factory-bean&#x3D;&quot;processEngine&quot;\nfactory-method&#x3D;&quot;getIdentityService&quot; &#x2F;&gt;\n&lt;!-- 引擎管理service --&gt; &lt;bean id&#x3D;&quot;managementService&quot; factory-bean&#x3D;&quot;processEngine&quot;\nfactory-method&#x3D;&quot;getManagementService&quot; &#x2F;&gt;\n&lt;!-- 数据源 --&gt; &lt;bean id&#x3D;&quot;dataSource&quot; class&#x3D;&quot;org.apache.commons.dbcp.BasicDataSource&quot;&gt; &lt;property name&#x3D;&quot;driverClassName&quot; value&#x3D;&quot;com.mysql.jdbc.Driver&quot; &#x2F;&gt;\n&lt;property name&#x3D;&quot;url&quot; value&#x3D;&quot;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;activiti&quot; &#x2F;&gt;\n&lt;property name&#x3D;&quot;username&quot; value&#x3D;&quot;root&quot; &#x2F;&gt;\n&lt;property name&#x3D;&quot;password&quot; value&#x3D;&quot;mysql&quot; &#x2F;&gt;\n&lt;property name&#x3D;&quot;maxActive&quot; value&#x3D;&quot;3&quot; &#x2F;&gt;\n&lt;property name&#x3D;&quot;maxIdle&quot; value&#x3D;&quot;1&quot; &#x2F;&gt;\n&lt;&#x2F;bean&gt;\n&lt;!-- 事务管理器 --&gt; &lt;bean id&#x3D;&quot;transactionManager&quot;\nclass&#x3D;&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt; &lt;property name&#x3D;&quot;dataSource&quot; ref&#x3D;&quot;dataSource&quot; &#x2F;&gt;\n&lt;&#x2F;bean&gt;\n&lt;!-- 通知 --&gt; &lt;tx:advice id&#x3D;&quot;txAdvice&quot; transaction-manager&#x3D;&quot;transactionManager&quot;&gt; &lt;tx:attributes&gt;\n&lt;!-- 传播行为 --&gt; &lt;tx:method name&#x3D;&quot;save*&quot; propagation&#x3D;&quot;REQUIRED&quot; &#x2F;&gt;\n\n&lt;tx:method name&#x3D;&quot;insert*&quot; propagation&#x3D;&quot;REQUIRED&quot; &#x2F;&gt;\n&lt;tx:method name&#x3D;&quot;delete*&quot; propagation&#x3D;&quot;REQUIRED&quot; &#x2F;&gt;\n&lt;tx:method name&#x3D;&quot;update*&quot; propagation&#x3D;&quot;REQUIRED&quot; &#x2F;&gt;\n&lt;tx:method name&#x3D;&quot;find*&quot; propagation&#x3D;&quot;SUPPORTS&quot; read-only&#x3D;&quot;true&quot; &#x2F;&gt;\n&lt;tx:method name&#x3D;&quot;get*&quot; propagation&#x3D;&quot;SUPPORTS&quot; read-only&#x3D;&quot;true&quot; &#x2F;&gt;\n&lt;&#x2F;tx:attributes&gt;\n&lt;&#x2F;tx:advice&gt;\n&lt;!-- 切面，根据具体项目修改切点配置 --&gt; &lt;aop:config proxy-target-class&#x3D;&quot;true&quot;&gt; &lt;aop:advisor advice-ref&#x3D;&quot;txAdvice&quot;\npointcut&#x3D;&quot;execution(* com.itheima.ihrm.service.impl.*.*(..))&quot; &#x2F;&gt;\n&lt;&#x2F;aop:config&gt;\n&lt;&#x2F;beans&gt;\n</code></pre>\n\n<h2 id=\"3-ProcessEngine\"><a href=\"#3-ProcessEngine\" class=\"headerlink\" title=\"3. ProcessEngine\"></a>3. ProcessEngine</h2><p>工作流引擎，相当于一个门面接口，通过 ProcessEngineConfiguration 创建 processEngine，通过ProcessEngine 创建各个 service 接口。</p>\n<h3 id=\"一般创建方式\"><a href=\"#一般创建方式\" class=\"headerlink\" title=\"一般创建方式\"></a>一般创建方式</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;1.创建ProcessEngineConfiguration对象  第一个参数:配置文件名称  第二个参数是processEngineConfiguration的bean的id\n\nProcessEngineConfiguration configuration &#x3D; ProcessEngineConfiguration\n        .createProcessEngineConfigurationFromResource(&quot;activiti.cfg.xml&quot;,&quot;processEngineConfiguration&quot;);\n                \n&#x2F;&#x2F;2.创建ProcesEngine对象\n                \nProcessEngine processEngine &#x3D; configuration.buildProcessEngine();\n\n&#x2F;&#x2F;3.输出processEngine对象\n\nSystem.out.println(processEngine)</code></pre>\n<h3 id=\"简单创建方式\"><a href=\"#简单创建方式\" class=\"headerlink\" title=\"简单创建方式\"></a>简单创建方式</h3><p>将 activiti.cfg.xml 文件名及路径固定，且 activiti.cfg.xml 文件中有 processEngineConfiguration 的配置，可以使用如下代码创建 processEngine</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;条件：1.activiti配置文件名称：activiti.cfg.xml   2.bean的id&#x3D;&quot;processEngineConfiguration&quot;\n       ProcessEngine processEngine &#x3D; ProcessEngines.getDefaultProcessEngine();</code></pre>\n<h2 id=\"4-Service\"><a href=\"#4-Service\" class=\"headerlink\" title=\"4. Service\"></a>4. Service</h2><h3 id=\"Service-创建方式\"><a href=\"#Service-创建方式\" class=\"headerlink\" title=\"Service 创建方式\"></a>Service 创建方式</h3><p> 通过 ProcessEngine 创建 Service，Service 是工作流引擎提供用于进行工作流部署、执行、管理的服务接口。<br>方式如下：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">RuntimeService runtimeService &#x3D; processEngine.getRuntimeService();\nRepositoryService repositoryService &#x3D; processEngine.getRepositoryService();\nTaskService taskService &#x3D; processEngine.getTaskService();\n......</code></pre>\n<h3 id=\"Service-总览\"><a href=\"#Service-总览\" class=\"headerlink\" title=\"Service 总览\"></a>Service 总览</h3><table>\n<thead>\n<tr>\n<th>服务</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>RepositoryService</td>\n<td>activiti 的资源管理类</td>\n</tr>\n<tr>\n<td>RuntimeService</td>\n<td>activiti 的流程运行管理类</td>\n</tr>\n<tr>\n<td>TaskService</td>\n<td>activiti 的任务管理类</td>\n</tr>\n<tr>\n<td>HistoryService</td>\n<td>activiti 的历史管理类</td>\n</tr>\n<tr>\n<td>ManagerService</td>\n<td>activiti 的引擎管理类</td>\n</tr>\n</tbody></table>\n<h3 id=\"RepositoryService\"><a href=\"#RepositoryService\" class=\"headerlink\" title=\"RepositoryService\"></a>RepositoryService</h3><ul>\n<li>是 activiti 的资源管理类，提供了管理和控制流程发布包和流程定义的操作。使用工作流建模工具设计的业务流程图需要使用此 service 将流程定义文件的内容部署到数据库。<br> <strong>除了部署流程定义以外还可以：</strong></li>\n<li>查询引擎中的发布包和流程定义。</li>\n<li>暂停或激活发布包，对应全部和特定流程定义。 暂停意味着它们不能再执行任何操作了，激活是对应的反向操作。</li>\n<li>获得多种资源，像是包含在发布包里的文件， 或引擎自动生成的流程图。</li>\n<li>获得流程定义的 pojo 版本， 可以用来通过 java 解析流程，而不必通过 xml。</li>\n</ul>\n<h3 id=\"RuntimeService\"><a href=\"#RuntimeService\" class=\"headerlink\" title=\"RuntimeService\"></a>RuntimeService</h3><p>它是 activiti 的流程运行管理类。可以从这个服务类中获取很多关于流程执行相关的信息</p>\n<h3 id=\"TaskService\"><a href=\"#TaskService\" class=\"headerlink\" title=\"TaskService\"></a>TaskService</h3><p>是 activiti 的任务管理类。可以从这个类中获取任务的信息。</p>\n<h3 id=\"HistoryService\"><a href=\"#HistoryService\" class=\"headerlink\" title=\"HistoryService\"></a>HistoryService</h3><p>是 activiti 的历史管理类，可以查询历史信息，执行流程时，引擎会保存很多数据（根据配置），比如流程实例启动时间，任务的参与者， 完成任务的时间，每个流程实例的执行路径，等等。 这个服务主要通过查询功能来获得这些数据。</p>\n<h3 id=\"ManagementService\"><a href=\"#ManagementService\" class=\"headerlink\" title=\"ManagementService\"></a>ManagementService</h3><p>是 activiti 的引擎管理类，提供了对 Activiti 流程引擎的管理和维护功能，这些功能不在工作流驱动的应用程序中使用，主要用于 Activiti 系统的日常维护。</p>\n<p>Article link： <a href=\"https://tqgoblin.site/post/activiti%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0(%E4%B8%80)/\">https://tqgoblin.site/post/activiti学习笔记(一)/</a> <div align=left> Author：<a href=\"https://www.tqgoblin.site\"> Stephen </a> </div></p>\n","text":"一、 Activiti流程引擎简介 此项目于2010年Tom Bayen（jBPM创始人）离开jBoss后加入Alfresco公司之后的又一力作；第一版在201...","permalink":"/post/activiti学习笔记(一)","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"Activiti","slug":"Activiti","count":2,"path":"api/categories/Activiti.json"}],"tags":[{"name":"Activiti","slug":"Activiti","count":2,"path":"api/tags/Activiti.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81-Activiti%E6%B5%81%E7%A8%8B%E5%BC%95%E6%93%8E%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">一、 Activiti流程引擎简介</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81-Activiti-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%94%AF%E6%8C%81\"><span class=\"toc-text\">二、 Activiti 数据库支持</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81-Activiti-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">三、 Activiti 如何使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E9%83%A8%E7%BD%B2Activiti\"><span class=\"toc-text\">1. 部署Activiti</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E6%B5%81%E7%A8%8B%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">2. 流程定义</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E6%B5%81%E7%A8%8B%E5%AE%9A%E4%B9%89%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">3. 流程定义部署</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E5%90%AF%E5%8A%A8%E4%B8%80%E4%B8%AA%E6%B5%81%E7%A8%8B%E5%AE%9E%E4%BE%8B-ProcessInstance\"><span class=\"toc-text\">4. 启动一个流程实例(ProcessInstance)</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E7%94%A8%E6%88%B7%E6%9F%A5%E8%AF%A2%E4%BB%A3%E5%8A%9E%E4%BB%BB%E5%8A%A1-Task\"><span class=\"toc-text\">5. 用户查询代办任务(Task)</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-%E7%94%A8%E6%88%B7%E5%8A%9E%E7%90%86%E4%BB%BB%E5%8A%A1\"><span class=\"toc-text\">6. 用户办理任务</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-%E6%B5%81%E7%A8%8B%E7%BB%93%E6%9D%9F\"><span class=\"toc-text\">7. 流程结束</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81-Activiti-%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E5%9B%BE\"><span class=\"toc-text\">四、 Activiti 服务架构图</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-activiti-cfg-xml\"><span class=\"toc-text\">1. activiti.cfg.xml</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-ProcessEngineConfiguration\"><span class=\"toc-text\">2. ProcessEngineConfiguration</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#StandaloneProcessEngineConfiguration\"><span class=\"toc-text\">StandaloneProcessEngineConfiguration</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#SpringProcessEngineConfiguration\"><span class=\"toc-text\">SpringProcessEngineConfiguration</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-ProcessEngine\"><span class=\"toc-text\">3. ProcessEngine</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E8%88%AC%E5%88%9B%E5%BB%BA%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">一般创建方式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%80%E5%8D%95%E5%88%9B%E5%BB%BA%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">简单创建方式</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-Service\"><span class=\"toc-text\">4. Service</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Service-%E5%88%9B%E5%BB%BA%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">Service 创建方式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Service-%E6%80%BB%E8%A7%88\"><span class=\"toc-text\">Service 总览</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#RepositoryService\"><span class=\"toc-text\">RepositoryService</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#RuntimeService\"><span class=\"toc-text\">RuntimeService</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#TaskService\"><span class=\"toc-text\">TaskService</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#HistoryService\"><span class=\"toc-text\">HistoryService</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ManagementService\"><span class=\"toc-text\">ManagementService</span></a></li></ol></li></ol></li></ol>","author":{"name":"Stephen","slug":"blog-author","avatar":"../img/logo.png","link":"/","description":"Love and Share","socials":{"github":"http://github.com/topstephen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Activiti 学习笔记（二）","uid":"77d3e41277be521fb04715814e170fee","slug":"activiti学习笔记(二)","date":"2019-11-25T14:48:00.000Z","updated":"2020-01-04T09:18:04.000Z","comments":true,"path":"api/articles/activiti学习笔记(二).json","keywords":"Stephen web3","cover":"http://yanxuan.nosdn.127.net/1c8d68e9dec35793796ea26cf1f6a419.jpg","text":"一、Activiti 入门体验流程定义Palette（画板）在 eclipse 或 idea 中安装 activiti-designer 插件即可使用，画板中包...","permalink":"/post/activiti学习笔记(二)","photos":[],"count_time":{"symbolsCount":"9.7k","symbolsTime":"9 mins."},"categories":[{"name":"Activiti","slug":"Activiti","count":2,"path":"api/categories/Activiti.json"}],"tags":[{"name":"Activiti","slug":"Activiti","count":2,"path":"api/tags/Activiti.json"}],"author":{"name":"Stephen","slug":"blog-author","avatar":"../img/logo.png","link":"/","description":"Love and Share","socials":{"github":"http://github.com/topstephen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"THUCTC 文本分类中jar冲突","uid":"e8faf659d92c2b0deb12ac2619d15d18","slug":"thuctc分类","date":"2019-11-02T07:08:30.000Z","updated":"2019-12-30T04:47:26.000Z","comments":true,"path":"api/articles/thuctc分类.json","keywords":"Stephen web3","cover":"https://stblogs.oss-cn-chengdu.aliyuncs.com/UTOOLS1577175551448.jpg","text":"我将完整的THUCTC的Demo项目作为moudle引入到自己的工程中，Demo在其自己的moudle中可以正常运行，但我将Demo的代码整合到自己的工程中时，...","permalink":"/post/thuctc分类","photos":[],"count_time":{"symbolsCount":289,"symbolsTime":"1 mins."},"categories":[{"name":"踩坑之路","slug":"踩坑之路","count":2,"path":"api/categories/踩坑之路.json"}],"tags":[{"name":"大数据","slug":"大数据","count":1,"path":"api/tags/大数据.json"}],"author":{"name":"Stephen","slug":"blog-author","avatar":"../img/logo.png","link":"/","description":"Love and Share","socials":{"github":"http://github.com/topstephen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}