{"title":"GitLab CI/CD 实现自动构建部署项目","uid":"e42cdbfca7d3b003c339c6ab5827f117","slug":"gitlab-cicd","date":"2019-12-22T02:48:00.000Z","updated":"2020-01-04T09:18:24.000Z","comments":true,"path":"api/articles/gitlab-cicd.json","keywords":"Stephen web3","cover":"https://i.loli.net/2019/12/30/JFR8AZQ2EO9LUp4.jpg","content":"<link rel=\"stylesheet\" href=\"/owl.css\"><link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><h1 id=\"一、环境准备\"><a href=\"#一、环境准备\" class=\"headerlink\" title=\"一、环境准备\"></a>一、环境准备</h1><p>首先需要有一台 GitLab 服务器，然后需要有个项目；这里示例项目以 Spring Boot 项目为例，然后最好有一台专门用来 Build 的机器，实际生产中如果 Build 任务不频繁可适当用一些业务机器进行 Build。</p>\n<ul>\n<li>GitLab IP :10.88.9.21  (version 12.6.0)</li>\n<li>Runner IP :10.88.9.37  (version 12.5.0)</li>\n</ul>\n<h1 id=\"二、GitLab-CI-简介\"><a href=\"#二、GitLab-CI-简介\" class=\"headerlink\" title=\"二、GitLab CI 简介\"></a>二、GitLab CI 简介</h1><p>GitLab CI 是 GitLab 默认集成的 CI 功能，GitLab CI 通过在项目内 .gitlab-ci.yaml 配置文件读取 CI 任务并进行相应处理；GitLab CI 通过其称为 GitLab Runner 的 Agent 端进行 build 操作；Runner 本身可以使用多种方式安装，比如使用 Docker 镜像启动等；Runner 在进行 build 操作时也可以选择多种 build 环境提供者；比如直接在 Runner 所在宿主机 build、通过新创建虚拟机(vmware、virtualbox)进行 build等；同时 Runner 支持 Docker 作为 build 提供者，即每次 build 新启动容器进行 build；GitLab CI 其大致架构如下<br><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/UTOOLS1576566686625.png\" alt=\"UTOOLS1576566686625.png\"></p>\n<h1 id=\"三、GitLab搭建\"><a href=\"#三、GitLab搭建\" class=\"headerlink\" title=\"三、GitLab搭建\"></a>三、GitLab搭建</h1><h2 id=\"安准基础依赖\"><a href=\"#安准基础依赖\" class=\"headerlink\" title=\"安准基础依赖\"></a>安准基础依赖</h2><ul>\n<li>安装基础依赖</li>\n</ul>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">yum</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">install</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-y</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">curl</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">policycoreutils-python</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">openssh-server</span></span></code></pre></div><p>启动ssh服务&amp;设置为开机启动</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">systemctl</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">enable</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">sshd</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">systemctl</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">start</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">sshd</span><span style=\"color: #BABED8\"> </span></span></code></pre></div><ul>\n<li>安装Postfix</li>\n</ul>\n<p>Postfix是一个邮件服务器，GitLab发送邮件需要用到</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 安装postfix</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">yum</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">install</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">-y</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">postfix</span></span></code></pre></div><div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 启动postfix并设置为开机启动</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">systemctl</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">enable</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">postfix</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">systemctl</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">start</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">postfix</span></span></code></pre></div><ul>\n<li>开放ssh以及http服务（80端口)</li>\n</ul>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 开放ssh、http服务</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">firewall-cmd</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--add-service=ssh</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--permanent</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">firewall-cmd</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--add-service=http</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--permanent</span></span></code></pre></div><div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 重载防火墙规则</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">firewall-cmd</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--reload</span></span></code></pre></div><h2 id=\"安装GitLab\"><a href=\"#安装GitLab\" class=\"headerlink\" title=\"安装GitLab\"></a>安装GitLab</h2><p>本次我们部署的是社区版:gitlab-ce，如果要部署商业版可以把关键字替换为：gitlab-ee</p>\n<ul>\n<li>Yum安装GitLab</li>\n</ul>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 新建 /etc/yum.repos.d/gitlab-ce.repo，内容为</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">gitlab-ce</span><span style=\"color: #89DDFF\">]</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">name</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #C3E88D\">Gitlab</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">CE</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">Repository</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">baseurl</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #C3E88D\">https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el</span><span style=\"color: #BABED8\">$releasever</span><span style=\"color: #C3E88D\">/</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">gpgcheck</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">enabled</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 再执行</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">yum</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">makecache</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">yum</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">install</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">gitlab-ce</span></span></code></pre></div><h2 id=\"配置GitLab\"><a href=\"#配置GitLab\" class=\"headerlink\" title=\"配置GitLab\"></a>配置GitLab</h2><p>GitLab默认的配置文件路径是&#x2F;etc&#x2F;gitlab&#x2F;gitlab.rb</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#修改配置文件</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">vim</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">/etc/gitlab/gitlab.rb</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#配置首页地址（大约在第15行）可以用IP代替域名，这里根据自己需求来即可</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">external_url</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">http://gitlab.ecloud.com</span><span style=\"color: #89DDFF\">&#39;</span></span></code></pre></div><h2 id=\"启动并访问GitLab\"><a href=\"#启动并访问GitLab\" class=\"headerlink\" title=\"启动并访问GitLab\"></a>启动并访问GitLab</h2><ul>\n<li>启动GitLab</li>\n</ul>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#重新配置并启动</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">gitlab-ctl</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">reconfigure</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">#完成后将会看到如下输出</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">Running</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">handlers</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">complete</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">Chef</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">Client</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">finished,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">432</span><span style=\"color: #C3E88D\">/613</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">resources</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">updated</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">in</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">03</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">minutes</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">43</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">seconds</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">gitlab</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">Reconfigured!</span></span></code></pre></div><ul>\n<li>访问 GitLab</li>\n</ul>\n<p><code>将设置的域名DNS解析到服务器IP，或者修改本地host将域名指向服务器IP。 访问：http://gitlab.ecloud.com </code></p>\n<ul>\n<li>设置密码</li>\n</ul>\n<p><code>这时候会提示为管理员账号设置密码。管理员账号默认username是root。 设置完成之后即可使用root账号登录，登陆后会进入欢迎界面。</code><br><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/UTOOLS1576569027584.png\" alt=\"UTOOLS1576569027584.png\"></p>\n<h1 id=\"四、GitLab-CI-配置\"><a href=\"#四、GitLab-CI-配置\" class=\"headerlink\" title=\"四、GitLab CI 配置\"></a>四、GitLab CI 配置</h1><h2 id=\"增加-Runner\"><a href=\"#增加-Runner\" class=\"headerlink\" title=\"增加 Runner\"></a>增加 Runner</h2><p><em>GitLab CI 在进行构建时会将任务下发给 Runner，让 Runner 去执行；所以先要添加一个 Runner</em></p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 新建 /etc/yum.repos.d/gitlab-runner.repo，内容为</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">gitlab-runner</span><span style=\"color: #89DDFF\">]</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">name</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #C3E88D\">gitlab-runner</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">baseurl</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #C3E88D\">https://mirrors.tuna.tsinghua.edu.cn/gitlab-runner/yum/el7</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">repo_gpgcheck</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">gpgcheck</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">0</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">enabled</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">1</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">gpgkey</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #C3E88D\">https://packages.gitlab.com/gpg.key</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 再执行</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">yum</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">makecache</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">sudo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">yum</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">install</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">gitlab-runner</span></span></code></pre></div><h2 id=\"gitlab-runner-注册\"><a href=\"#gitlab-runner-注册\" class=\"headerlink\" title=\"gitlab-runner 注册\"></a>gitlab-runner 注册</h2><ul>\n<li><p>首先要先获取gitlab-ci的Token:<br><code>项目主页 -&gt; Sttings -&gt; CI/CD -&gt; Runners Expand </code><br><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/UTOOLS1577171080231.png\" alt=\"UTOOLS1577171080231.png\"></p>\n</li>\n<li><p>登录安装runner的服务器，使用命令注册gitlab-runner:</p>\n</li>\n</ul>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">gitlab-runner</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">register</span></span></code></pre></div><ol>\n<li>输入gitlab的服务URL，这个使用的是<a href=\"http://gitlab.ecloud.com/\">http://gitlab.ecloud.com</a></li>\n<li>输入gitlab-ci的Toekn，获取方式参考上图</li>\n<li>关于集成服务中对于这个runner的描述</li>\n<li>给这个gitlab-runner输入一个标记，这个tag非常重要，在后续的使用过程中需要使用这个tag来指定gitlab-runner</li>\n<li>是否运行在没有tag的build上面。在配置gitlab-ci的时候，会有很多job，每个job可以通过tags属性来选择runner。这里为true表示如果job没有配置tags，也执行</li>\n<li>是否锁定runner到当前项目</li>\n<li>选择执行器，gitlab-runner实现了很多执行器，可用在不同场景中运行构建，详情可见GitLab Runner Executors，这里选用Shell模式</li>\n<li>刷新页面就可以看到新增的一个Runner:</li>\n</ol>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/UTOOLS1577172646072.png\" alt=\"UTOOLS1577172646072.png\"></p>\n<p> 9.这个GitLabRunner就安装好了，下一步就是把项目集成到gitlab-ci中，开始持续集成了。</p>\n<h2 id=\"gitlab-runner-使用\"><a href=\"#gitlab-runner-使用\" class=\"headerlink\" title=\"gitlab-runner 使用\"></a>gitlab-runner 使用</h2><ul>\n<li>创建 CI 配置文件<br><code>一切准备就绪以后，就可以编写 CI 脚本了；GitLab 依靠读取项目根目录下的 .gitlab-ci.yml 文件来执行相应的 CI 操作；以下为测试项目的 .gitlab-ci.yml 配置</code></li>\n</ul>\n<div class=\"language-yaml\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">yaml</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># These are the default stages. You don&#39;t need to explicitly define them. But you could define any stages you need.</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">stages</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">build</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">deploy</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">catLog</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">kill</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">variables</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">MAVEN_CLI_OPTS</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">-s .m2/settings.xml --batch-mode</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">MAVEN_OPTS</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">-Dmaven.repo.local=/export/servers/repository_boot</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">SHELL_NAME</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">ry.sh</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">cache</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">paths</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># - .m2/repository</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">target/</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># This is the name of the job. You can choose it freely.</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">maven_build</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># A job is always executed within a stage. If no stage is set, it defaults to &#39;test&#39;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">stage</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">build</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># Since we require Maven for this job, we can restrict the job to runners with a certain tag. Of course, we need to configure a runner with the tag maven with a maven installation</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">tags</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">dev</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># 使用当前作业的名称和当前分支或标签（仅包括二进制文件目录）创建档案</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">artifacts</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">$CI_JOB_NAME-$CI_COMMIT_REF_NAME</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">expire_in</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">4 week</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">paths</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">target/*.jar</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># Here you can execute arbitrate terminal commands.</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\"># If any of the commands returns a non zero exit code the job fails</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">echo &quot;Building project with maven&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mvn $MAVEN_CLI_OPTS clean</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">mvn $MAVEN_CLI_OPTS install</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">deploy_jdk8</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">stage</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">deploy</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">tags</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">dev</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">echo &quot;Deploy....&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">sh $SHELL_NAME restart</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">when</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">on_success</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">interruptible</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FF9CAC\">true</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">cat_boot_log</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">stage</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">catLog</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">tags</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">dev</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">echo &quot;cat  log....&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">sh $SHELL_NAME cat</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">when</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">on_success</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">kill_progress</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">stage</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">kill</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">tags</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">dev</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">echo &quot;kill progress&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">sh $SHELL_NAME stop</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">when</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">manual</span></span></code></pre></div><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/UTOOLS1577173183588.png\"  />\n\n<p>关于 .gitlab-ci.yml 具体配置更完整的请参考 <strong><a href=\"https://docs.gitlab.com/ee/ci/yaml/\">官方文档</a></strong></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>文中测试项目:  <strong><a href=\"/download/ruoyi-test-dev.zip\">点击下载</a></strong></p></blockquote>\n<p>Article link： <a href=\"https://tqgoblin.site/post/gitlab-cicd/\">https://tqgoblin.site/post/gitlab-cicd/</a> <div align=left> Author：<a href=\"https://www.tqgoblin.site\"> Stephen </a> </div></p>\n","text":"一、环境准备首先需要有一台 GitLab 服务器，然后需要有个项目；这里示例项目以 Spring Boot 项目为例，然后最好有一台专门用来 Build 的机器...","permalink":"/post/gitlab-cicd","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"运维","slug":"运维","count":5,"path":"api/categories/运维.json"}],"tags":[{"name":"GitLab","slug":"GitLab","count":1,"path":"api/tags/GitLab.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87\"><span class=\"toc-text\">一、环境准备</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81GitLab-CI-%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">二、GitLab CI 简介</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81GitLab%E6%90%AD%E5%BB%BA\"><span class=\"toc-text\">三、GitLab搭建</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E5%87%86%E5%9F%BA%E7%A1%80%E4%BE%9D%E8%B5%96\"><span class=\"toc-text\">安准基础依赖</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85GitLab\"><span class=\"toc-text\">安装GitLab</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AEGitLab\"><span class=\"toc-text\">配置GitLab</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%90%AF%E5%8A%A8%E5%B9%B6%E8%AE%BF%E9%97%AEGitLab\"><span class=\"toc-text\">启动并访问GitLab</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81GitLab-CI-%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">四、GitLab CI 配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A2%9E%E5%8A%A0-Runner\"><span class=\"toc-text\">增加 Runner</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#gitlab-runner-%E6%B3%A8%E5%86%8C\"><span class=\"toc-text\">gitlab-runner 注册</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#gitlab-runner-%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">gitlab-runner 使用</span></a></li></ol></li></ol>","author":{"name":"Stephen","slug":"blog-author","avatar":"../img/logo.png","link":"/","description":"Love and Share","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Kafka中怎么保证消息不会丢失和不重复消费？","uid":"80846fe2badad166d0ce9fff99b0e646","slug":"csdn/Kafka中怎么保证消息不会丢失和不重复消费？","date":"2022-10-09T02:53:10.000Z","updated":"2025-02-17T01:58:21.605Z","comments":true,"path":"api/articles/csdn/Kafka中怎么保证消息不会丢失和不重复消费？.json","keywords":"Stephen web3","cover":[],"text":" 从两个方面分析：消息推送和消息消费。也就是生产者和消费者两方面。首先我们需要知道topic的概念。 Topic ： 话题，可以理解为一个队列， 生产者和消费者...","permalink":"/post/csdn/Kafka中怎么保证消息不会丢失和不重复消费？","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"kafka","slug":"kafka","count":4,"path":"api/categories/kafka.json"}],"tags":[{"name":"kafka","slug":"kafka","count":1,"path":"api/tags/kafka.json"}],"author":{"name":"Stephen","slug":"blog-author","avatar":"../img/logo.png","link":"/","description":"Love and Share","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Activiti 学习笔记（二）","uid":"77d3e41277be521fb04715814e170fee","slug":"activiti学习笔记(二)","date":"2019-11-25T14:48:00.000Z","updated":"2025-02-17T01:20:22.964Z","comments":true,"path":"api/articles/activiti学习笔记(二).json","keywords":"Stephen web3","cover":"../img/1c8d68e9dec35793796ea26cf1f6a419.jpg","text":"一、Activiti 入门体验流程定义Palette（画板）在 eclipse 或 idea 中安装 activiti-designer 插件即可使用，画板中包...","permalink":"/post/activiti学习笔记(二)","photos":[],"count_time":{"symbolsCount":"9k","symbolsTime":"8 mins."},"categories":[{"name":"Java","slug":"Java","count":7,"path":"api/categories/Java.json"}],"tags":[{"name":"Activiti","slug":"Activiti","count":2,"path":"api/tags/Activiti.json"}],"author":{"name":"Stephen","slug":"blog-author","avatar":"../img/logo.png","link":"/","description":"Love and Share","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}