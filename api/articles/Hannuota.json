{"title":"Hannuota","uid":"ef5a4863e88e0b505e528fa60d638cfe","slug":"Hannuota","date":"2018-04-10T02:09:00.000Z","updated":"2019-12-30T04:56:08.000Z","comments":true,"path":"api/articles/Hannuota.json","keywords":"Stephen web3","cover":"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/bimg/248904-106.jpg","content":"<link rel=\"stylesheet\" href=\"/owl.css\"><link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><h4 id=\"Java-实现-汉诺塔解法\"><a href=\"#Java-实现-汉诺塔解法\" class=\"headerlink\" title=\"Java 实现 汉诺塔解法\"></a>Java 实现 汉诺塔解法</h4><p><code>汉诺塔：汉诺塔问题是源于印度一个古老传说的益智玩具。大梵天创造世界的时候做了三根金刚石柱子，在一根柱子上从下往上按照大小顺序摞着64片黄金圆盘。大梵天命令婆罗门把圆盘从下面开始按大小顺序重新摆放在另一根柱子上。并且规定，在小圆盘上不能放大圆盘，在三根柱子之间一次只能移动一个圆盘。</code></p>\n<div align=center>  <img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/suanfa/timg.jpeg\" width = \"70%\" height = \"70%\"  >  </div> \n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public class Solution &#123;\n    public static void main(String[] args) &#123;\n        int n &#x3D; 3;\n        char from &#x3D; &#39;A&#39;;\n        char in &#x3D; &#39;B&#39;;\n        char to &#x3D; &#39;c&#39;;\n        func(n, from, in, to);\n    &#125;\n\n    private static void func(int n, char from, char in, char to) &#123;\n        if (n &#x3D;&#x3D; 1) &#123;\n            System.out.println(&quot;将第&quot; + n + &quot;块从&quot; + from + &quot;移到&quot; + to);\n            &#x2F;&#x2F; 无论有多少盘子 都看成2个盘子 ， 最后一个盘子和 上面的所有盘子\n        &#125; else &#123;\n            &#x2F;&#x2F; 将除最后一个之外的所有的盘子移到  temp位置去\n            func(n - 1, from, to, in);\n            &#x2F;&#x2F; 将最后一个盘子移到目标位置\n            System.out.println(&quot;将第&quot; + n + &quot;块从&quot; + from + &quot;移到&quot; + to);\n            &#x2F;&#x2F; 再将n-1个盘子从 temp移到目标位置\n            func(n - 1, in, from, to);\n\n        &#125;\n    &#125;\n&#125;</code></pre>\n\n\n\n<p>Article link： <a href=\"https://tqgoblin.site/post/Hannuota/\">https://tqgoblin.site/post/Hannuota/</a> <div align=left> Author：<a href=\"https://www.tqgoblin.site\"> Stephen </a> </div></p>\n","text":"Java 实现 汉诺塔解法汉诺塔：汉诺塔问题是源于印度一个古老传说的益智玩具。大梵天创造世界的时候做了三根金刚石柱子，在一根柱子上从下往上按照大小顺序摞着64片...","permalink":"/post/Hannuota","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":2,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":2,"path":"api/tags/算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Java-%E5%AE%9E%E7%8E%B0-%E6%B1%89%E8%AF%BA%E5%A1%94%E8%A7%A3%E6%B3%95\"><span class=\"toc-text\">Java 实现 汉诺塔解法</span></a></li></ol>","author":{"name":"Stephen","slug":"blog-author","avatar":"../img/logo.png","link":"/","description":"Love and Share","socials":{"github":"http://github.com/topstephen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"正整数分解质因数","uid":"d30ace39e1775eb881fa386d10463fa5","slug":"正整数分解质因数","date":"2018-04-13T05:48:00.000Z","updated":"2019-12-30T04:54:42.000Z","comments":true,"path":"api/articles/正整数分解质因数.json","keywords":"Stephen web3","cover":"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/bimg/248913-106.jpg","text":"将一个正整数分解质因数。例如：输入90，打印出90=2*3*3*5 public class Solution { public static void mai...","permalink":"/post/正整数分解质因数","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":2,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":2,"path":"api/tags/算法.json"}],"author":{"name":"Stephen","slug":"blog-author","avatar":"../img/logo.png","link":"/","description":"Love and Share","socials":{"github":"http://github.com/topstephen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{}}