{"title":"SparkStreaming","uid":"050e941d853c6afbf79df52c3d4149bb","slug":"csdn/SparkStreaming","date":"2023-02-06T09:24:47.000Z","updated":"2025-02-17T01:58:21.583Z","comments":true,"path":"api/articles/csdn/SparkStreaming.json","keywords":"Stephen web3","cover":[],"content":"<link rel=\"stylesheet\" href=\"/owl.css\"><link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><span id=\"more\"></span>\n\n<p><strong>目录</strong></p>\n<p><a href=\"#SparkStreaming%E6%A6%82%E8%BF%B0\">SparkStreaming概述</a></p>\n<p><a href=\"#SparkStreaming%E6%98%AF%E4%BB%80%E4%B9%88\">SparkStreaming是什么</a></p>\n<p><a href=\"#SparkStreaming%E7%89%B9%E7%82%B9\">SparkStreaming特点</a></p>\n<p><a href=\"#Spark%20Streaming%E6%9E%B6%E6%9E%84\">Spark Streaming架构</a></p>\n<p><a href=\"#Dstream\">Dstream</a></p>\n<p><a href=\"#Dstream%E5%85%A5%E9%97%A8\">Dstream入门</a></p>\n<p><a href=\"#DStream%20%E5%88%9B%E5%BB%BA\">DStream 创建</a></p>\n<p><a href=\"#DStream%20%E8%BD%AC%E6%8D%A2\">DStream 转换</a></p>\n<p><a href=\"#%E6%97%A0%E7%8A%B6%E6%80%81%E8%BD%AC%E5%8C%96%E6%93%8D%E4%BD%9C\">无状态转化操作</a></p>\n<p><a href=\"#%E6%9C%89%E7%8A%B6%E6%80%81%E8%BD%AC%E5%8C%96%E6%93%8D%E4%BD%9C\">有状态转化操作</a></p>\n<p><a href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%95%B0%E6%8D%AE%E6%BA%90\"> 自定义数据源</a></p>\n<p><a href=\"#Kafka%20%E6%95%B0%E6%8D%AE%E6%BA%90\">Kafka 数据源</a></p>\n<hr>\n<h2 id=\"SparkStreaming-概述\"><a href=\"#SparkStreaming-概述\" class=\"headerlink\" title=\"SparkStreaming****概述\"></a><strong>SparkStreaming****概述</strong></h2><p>画图引出 Spark Streaming 概念：</p>\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/bd19bc5dcf2ee057e1c8ca78796d5a96.png\"></p>\n<h3 id=\"SparkStreaming是什么\"><a href=\"#SparkStreaming是什么\" class=\"headerlink\" title=\"SparkStreaming是什么\"></a>SparkStreaming是什么</h3><p>SparkStreaming用于流式数据的处理。SparkStreaming支持的数据输入源有很多，例如：KafKa、Flume和简单的TCP套接字等等。数据输入后可以用Spark的高度抽象原语如：map、 reduce、join、window等进行运算。而结果也能保存在很多地方，如HDFS，数据库等。</p>\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/7f2db56431cd7b0ed88f1af7c028f841.png\"></p>\n<p>和Spark基于RDD的概念很相似，Spark Streaming使用<strong>离散化流</strong>(discretized stream)作为抽象表 示，叫作DStream。DStream是随时间推移而收到的数据的序列。在内部，<strong>每个时间区间</strong>收到的数据都作为 RDD 存在，而 DStream 是由这些 RDD 所组成的序列(因此得名“离散化”)。所以简单来将，DStream 就是对 RDD 在实时数据处理场景的一种封装。</p>\n<p><strong>注意：离散化流可以理解为不连续的流。</strong></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>&#x2F;&#x2F; 介绍一下什么是流式什么是批量：</p>\n<p>&#x2F;&#x2F;1. 从数据处理的方式角度：</p>\n<p>&#x2F;&#x2F; 流式（ Streaming ）数据处理</p>\n<p>&#x2F;&#x2F; 批量（ batch ）数据处理</p>\n<p>&#x2F;&#x2F;2. 从数据处理延迟的长短角度</p>\n<p>&#x2F;&#x2F; 实时数据处理：毫秒级别</p>\n<p>&#x2F;&#x2F; 离线数据处理：小时 or 天级别</p>\n<p>&#x2F;&#x2F;SparkStreaming 准实时（秒、分钟），微批次（时间）的数据处理框架。</p></blockquote>\n<p>画图介绍每个时间区间：</p>\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/4ee66d18eb730a2c422fd22804dc0291.png\"></p>\n<h3 id=\"SparkStreaming-特点\"><a href=\"#SparkStreaming-特点\" class=\"headerlink\" title=\"SparkStreaming****特点\"></a><strong>SparkStreaming****特点</strong></h3><p>（1）易用</p>\n<p>（2）统一的批处理和流式API</p>\n<p>（3）低延迟和成本效益</p>\n<h3 id=\"Spark-Streaming-架构\"><a href=\"#Spark-Streaming-架构\" class=\"headerlink\" title=\"Spark Streaming****架构\"></a><strong>Spark Streaming****架构</strong></h3><p>架构图：</p>\n<p>（1）整体架构图：</p>\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/cb391e3db1aa2d744bc3586d2d84fedf.png\"></p>\n<p>（2） SparkStreaming 架构图：</p>\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/ae023a89757564dcb2946fb351b7b2da.png\"></p>\n<p><strong>背压机制</strong></p>\n<p>Spark 1.5 以前版本，用户如果要限制 Receiver 的数据接收速率，可以通过设置静态配制参数 “spark.streaming.receiver.maxRate”的值来实现，此举虽然可以通过限制接收速率，来适配当前的处理能力，防止内存溢出，但也会引入其它问题。比如：producer 数据生产高于 maxRate，当前集群处理能力也高于 maxRate，这就会造成资源利用率下降等问题。为了更好的协调数据接收速率与资源处理能力，1.5 版本开始 Spark Streaming 可以动态控制数据接收速率来适配集群数据处理能力。背压机制（即 Spark Streaming Backpressure）: 根据JobScheduler 反馈作业的执行信息来动态调整 Receiver 数据接收率。通过属性“spark.streaming.backpressure.enabled”来控制是否启用 backpressure 机制，默认值false，即不启用。</p>\n<h2 id=\"Dstream\"><a href=\"#Dstream\" class=\"headerlink\" title=\"Dstream\"></a><strong>Dstream</strong></h2><p>与SpakrContext类似，StreamingContext是实时应用程序的入口，它充当应用程序与Spark引擎的连接纽带。DStream对于Spark Streaming的作用就如同RDD对于Spark的作用，DStream将潜在的无限数据流，转换成离散批处理的RDD。</p>\n<h3 id=\"Dstream-入门\"><a href=\"#Dstream-入门\" class=\"headerlink\" title=\"Dstream****入门\"></a><strong>Dstream****入门</strong></h3><p>WordCount 案例实操</p>\n<p>需求：使用netcat工具向9999端口不断的发送数据，通过SparkStreaming读取端口数据并统计不同单词出现的次数。</p>\n<p>（1）添加依赖</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>&lt;!– <a href=\"https://mvnrepository.com/artifact/org.apache.spark/spark-mllib\">https://mvnrepository.com/artifact/org.apache.spark/spark-mllib</a> –&gt;</p>\n<p>&lt;dependency&gt;</p>\n<p>&lt;groupId&gt; org.apache.spark &lt;&#x2F;groupId&gt;</p>\n<p>&lt;artifactId&gt; spark-mllib_2.12 &lt;&#x2F;artifactId&gt;</p>\n<p>&lt;version&gt; 2.4.5 &lt;&#x2F;version&gt;</p>\n<p>&lt;&#x2F;dependency&gt;</p></blockquote>\n<p>（2）编写代码</p>\n<div class=\"language-scala\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">scala</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">package</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">com</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">shujia</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">test</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">SparkConf</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">streaming</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">dstream</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">&#123;</span><span style=\"color: #FFCB6B\">DStream</span><span style=\"color: #BABED8\">, </span><span style=\"color: #FFCB6B\">ReceiverInputDStream</span><span style=\"color: #BABED8\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">streaming</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">&#123;</span><span style=\"color: #FFCB6B\">Seconds</span><span style=\"color: #BABED8\">, </span><span style=\"color: #FFCB6B\">StreamingContext</span><span style=\"color: #BABED8\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">object</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">DemoSpark01_WordCount</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">def</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #BABED8\">(</span><span style=\"color: #BABED8; font-style: italic\">args</span><span style=\"color: #BABED8\">: </span><span style=\"color: #FFCB6B\">Array</span><span style=\"color: #BABED8\">[</span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #BABED8\">])</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Unit</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//TODO: 创建环境对象</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//StreamingContext创建时，需要传递两个参数</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//第一个参数表示环境配置</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> sparkconf</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">SparkConf</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">SparkConf</span><span style=\"color: #BABED8\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">.setMaster(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">local[*]</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">.setAppName(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">WordCount</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//第二个参数表示批量处理的周期（采集周期）</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> ssc </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">StreamingContext</span><span style=\"color: #BABED8\">(sparkconf,</span><span style=\"color: #FFCB6B\">Seconds</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\">))</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//TODO 处理逻辑</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//获取端口数据</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> lines</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">ReceiverInputDStream</span><span style=\"color: #BABED8\">[</span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #BABED8\">] </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> ssc.socketTextStream(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">localhost</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">,</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">9999</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> words</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">DStream</span><span style=\"color: #BABED8\">[</span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #BABED8\">] </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> lines.flatMap(_.split(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">))</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> mapD</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">DStream</span><span style=\"color: #BABED8\">[(</span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #BABED8\">, </span><span style=\"color: #FFCB6B\">Int</span><span style=\"color: #BABED8\">)] </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> words.map((_, </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">))</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> resultD</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">DStream</span><span style=\"color: #BABED8\">[(</span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #BABED8\">, </span><span style=\"color: #FFCB6B\">Int</span><span style=\"color: #BABED8\">)] </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> mapD.reduceByKey(_ </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> _)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">resultD.print()</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//TODO 关闭环境</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//由于SparkStreaming采集器时长期执行的任务，所以不能直接关闭</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//如果main方法执行完毕，应用程序也会自动结束。所以不能让main执行完毕</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// ssc.stop()</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//1、启动采集器</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ssc.start()</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//2、等待采集器的关闭</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ssc.awaitTermination()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>&#x2F;&#x2F;打开命令行窗口：</p>\n<p>&#x2F;&#x2F;输入：</p>\n<p>&#x2F;&#x2F;nc -lp 9999</p></blockquote>\n<p><strong>WordCount 解析</strong></p>\n<p>DStream是 Spark Streaming 的基础抽象，代表持续性的数据流和经过各种 Spark 原语操作后的结果数据流。在内部实现上，DStream 是一系列连续的 RDD 来表示。每个 RDD 含有一段时间间隔内的数据。</p>\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/c10386e69490b4be7f43ff1f34e86b17.png\"></p>\n<p>对数据的操作也是按照 RDD 为单位来进行的：</p>\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/b804aa7763a56d58b426cdf85ddc960b.png\"></p>\n<p>计算过程由 Spark Engine 来完成：</p>\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/a2f93f5714f62267091d7e30c584e973.png\"></p>\n<h3 id=\"DStream-创建\"><a href=\"#DStream-创建\" class=\"headerlink\" title=\"DStream 创建\"></a>DStream 创建</h3><p><strong>RDD 队列:</strong></p>\n<p>测试过程中，可以通过使用 ssc.queueStream(queueOfRDDs)来创建 DStream，每一个推送到这 个队列中的 RDD，都会作为一个 DStream 处理。</p>\n<p><strong>案例实操:</strong></p>\n<p>需求：循环创建几个 RDD，将 RDD 放入队列。通过 SparkStream 创建 Dstream，计算WordCount</p>\n<div class=\"language-scala\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">scala</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">package</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">com</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">shujia</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">test</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">SparkConf</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">rdd</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">RDD</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">streaming</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">dstream</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">&#123;</span><span style=\"color: #FFCB6B\">DStream</span><span style=\"color: #BABED8\">, </span><span style=\"color: #FFCB6B\">ReceiverInputDStream</span><span style=\"color: #BABED8\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">streaming</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">&#123;</span><span style=\"color: #FFCB6B\">Seconds</span><span style=\"color: #BABED8\">, </span><span style=\"color: #FFCB6B\">StreamingContext</span><span style=\"color: #BABED8\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">scala</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">collection</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">mutable</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">object</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">DemoSpark02_Queue</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">def</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #BABED8\">(</span><span style=\"color: #BABED8; font-style: italic\">args</span><span style=\"color: #BABED8\">: </span><span style=\"color: #FFCB6B\">Array</span><span style=\"color: #BABED8\">[</span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #BABED8\">])</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Unit</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//TODO: 创建环境对象</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//StreamingContext创建时，需要传递两个参数</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//第一个参数表示环境配置</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//1、初始化spark配置信息</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> sparkconf</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">SparkConf</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">SparkConf</span><span style=\"color: #BABED8\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">.setMaster(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">local[*]</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">).setAppName(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">WordCount</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//第二个参数表示批量处理的周期（采集周期）</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//2.初始化 SparkStreamingContext</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> ssc </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">StreamingContext</span><span style=\"color: #BABED8\">(sparkconf,</span><span style=\"color: #FFCB6B\">Seconds</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\">))</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//TODO 处理逻辑</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//3.创建 RDD 队列</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> queue</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> mutable.</span><span style=\"color: #FFCB6B\">Queue</span><span style=\"color: #BABED8\">[</span><span style=\"color: #FFCB6B\">RDD</span><span style=\"color: #BABED8\">[</span><span style=\"color: #FFCB6B\">Int</span><span style=\"color: #BABED8\">]] </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> mutable.</span><span style=\"color: #FFCB6B\">Queue</span><span style=\"color: #BABED8\">[</span><span style=\"color: #FFCB6B\">RDD</span><span style=\"color: #BABED8\">[</span><span style=\"color: #FFCB6B\">Int</span><span style=\"color: #BABED8\">]]()</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//4.创建 QueueInputDStream</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> inputStream </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> ssc.queueStream(queue,oneAtATime </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">false</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//5.处理队列中的 RDD 数据</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> mappedStream </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> inputStream.map((_,</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">))</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> reducedStream </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> mappedStream.reduceByKey(_ </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> _)</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//6.打印结果</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">reducedStream.print()</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//TODO 关闭环境</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//由于SparkStreaming采集器时长期执行的任务，所以不能直接关闭</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//如果main方法执行完毕，应用程序也会自动结束。所以不能让main执行完毕</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// ssc.stop()</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//(1)启动采集器</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ssc.start()</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//8.循环创建并向 RDD 队列中放入 RDD</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> (i </span><span style=\"color: #89DDFF\">&lt;-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> to </span><span style=\"color: #F78C6C\">5</span><span style=\"color: #BABED8\">) </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">queue </span><span style=\"color: #89DDFF\">+=</span><span style=\"color: #BABED8\"> ssc.sparkContext.makeRDD(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> to </span><span style=\"color: #F78C6C\">300</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">Thread</span><span style=\"color: #BABED8\">.sleep(</span><span style=\"color: #F78C6C\">2000</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//(2)等待采集器的关闭</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ssc.awaitTermination()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><div class=\"language-scala\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">scala</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">package</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">com</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">shujia</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">test</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">commons</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">codec</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">StringDecoder</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">kafka</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">clients</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">consumer</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">&#123;</span><span style=\"color: #FFCB6B\">ConsumerConfig</span><span style=\"color: #BABED8\">, </span><span style=\"color: #FFCB6B\">ConsumerRecord</span><span style=\"color: #BABED8\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">SparkConf</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">streaming</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">dstream</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">InputDStream</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">streaming</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">kafka010</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">&#123;</span><span style=\"color: #FFCB6B\">ConsumerStrategies</span><span style=\"color: #BABED8\">, </span><span style=\"color: #FFCB6B\">KafkaUtils</span><span style=\"color: #BABED8\">,</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">LocationStrategies</span><span style=\"color: #BABED8\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">streaming</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">&#123;</span><span style=\"color: #FFCB6B\">Seconds</span><span style=\"color: #BABED8\">, </span><span style=\"color: #FFCB6B\">StreamingContext</span><span style=\"color: #BABED8\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">object</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">DemoSpark05_Kafka</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">def</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #BABED8\">(</span><span style=\"color: #BABED8; font-style: italic\">args</span><span style=\"color: #BABED8\">: </span><span style=\"color: #FFCB6B\">Array</span><span style=\"color: #BABED8\">[</span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #BABED8\">])</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Unit</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//TODO: 创建环境对象</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//StreamingContext创建时，需要传递两个参数</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//第一个参数表示环境配置</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//1、初始化spark配置信息</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> sparkconf</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">SparkConf</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">SparkConf</span><span style=\"color: #BABED8\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">.setMaster(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">local[*]</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">.setAppName(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">WordCount</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//第二个参数表示批量处理的周期（采集周期）</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//2.初始化 SparkStreamingContext</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> ssc </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">StreamingContext</span><span style=\"color: #BABED8\">(sparkconf,</span><span style=\"color: #FFCB6B\">Seconds</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\">))</span><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> kafkaParas</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Map</span><span style=\"color: #BABED8\">[</span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #BABED8\">, </span><span style=\"color: #FFCB6B\">Object</span><span style=\"color: #BABED8\">] </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Map</span><span style=\"color: #BABED8\">[</span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #BABED8\">, </span><span style=\"color: #FFCB6B\">Object</span><span style=\"color: #BABED8\">](</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">ConsumerConfig</span><span style=\"color: #BABED8\">.</span><span style=\"color: #FFCB6B\">BOOTSTRAP_SERVERS_CONFIG</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">master:9092,node1:9092,node2:9092</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">,</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">ConsumerConfig</span><span style=\"color: #BABED8\">.</span><span style=\"color: #FFCB6B\">GROUP_ID_CONFIG</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">shujia</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">,</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">key.deserializer</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">org.apache.kafka.common.serialization.StringDeserializer</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">,</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">value.deserializer</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">org.apache.kafka.common.serialization.StringDeserializer</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//TODO 处理逻辑</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> kafkaDataDS</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">InputDStream</span><span style=\"color: #BABED8\">[</span><span style=\"color: #FFCB6B\">ConsumerRecord</span><span style=\"color: #BABED8\">[</span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #BABED8\">, </span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #BABED8\">]] </span><span style=\"color: #89DDFF\">=</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">KafkaUtils</span><span style=\"color: #BABED8\">.createDirectStream[</span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #BABED8\">, </span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #BABED8\">](</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ssc,</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">LocationStrategies</span><span style=\"color: #BABED8\">.</span><span style=\"color: #FFCB6B\">PreferConsistent</span><span style=\"color: #BABED8\">,</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">ConsumerStrategies</span><span style=\"color: #BABED8\">.</span><span style=\"color: #FFCB6B\">Subscribe</span><span style=\"color: #BABED8\">[</span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #BABED8\">, </span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #BABED8\">](</span><span style=\"color: #FFCB6B\">Set</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">shujia</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">),</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">kafkaParas)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">kafkaDataDS.map(_.value()).print()</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//(1)启动采集器</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ssc.start()</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//(2)等待采集器的关闭</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ssc.awaitTermination()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h3 id=\"DStream-转换\"><a href=\"#DStream-转换\" class=\"headerlink\" title=\"DStream 转换\"></a>DStream 转换</h3><p>DStream 上的操作与 RDD 的类似，分为 Transformations（转换）和 Output Operations（输出）两种，此外转换操作中还有一些比较特殊的原语，如：updateStateByKey()、transform()以及 各种 Window 相关的原语。</p>\n<h4 id=\"无状态转化操作\"><a href=\"#无状态转化操作\" class=\"headerlink\" title=\"无状态转化操作\"></a><strong>无状态转化操作</strong></h4><p>无状态转化操作就是把简单的 RDD 转化操作应用到每个批次上，也就是转化 DStream 中的每 一个 RDD。部分无状态转化操作列在了下表中。注意，针对键值对的 DStream 转化操作(比如 reduceByKey())要添加 import StreamingContext._才能在 Scala 中使用。</p>\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/8c089cad25fd3b7755cc5b90305f6631.png\"></p>\n<p>需要记住的是，尽管这些函数看起来像作用在整个流上一样，但事实上每个 DStream 在内部是由许多 RDD（批次）组成，且无状态转化操作是分别应用到每个 RDD 上的。例如：reduceByKey()会归约每个时间区间中的数据，但不会归约不同区间之间的数据。</p>\n<p><strong>Transform</strong></p>\n<p>Transform 允许 DStream 上执行任意的 RDD-to-RDD 函数。即使这些函数并没有在 DStream 的 API 中暴露出来，通过该函数可以方便的扩展 Spark API。该函数每一批次调度一次。其实也就是 对 DStream 中的RDD 应用转换。</p>\n<p><strong>join</strong></p>\n<p>两个流之间的 join 需要两个流的批次大小一致，这样才能做到同时触发计算。计算过程就是对当 前批次的两个流中各自的 RDD 进行 join，与两个 RDD 的 join 效果相同。</p>\n<h4 id=\"有状态转化操作\"><a href=\"#有状态转化操作\" class=\"headerlink\" title=\"有状态转化操作\"></a><strong>有状态转化操作</strong></h4><p><strong>UpdateStateByKey</strong></p>\n<p>UpdateStateByKey 原语用于记录历史记录，有时，我们需要在 DStream 中跨批次维护状态(例如流计算中累加 wordcount)。针对这种情况，updateStateByKey()为我们提供了对一个状态变量的访问，用于键值对形式的 DStream。给定一个由(键，事件)对构成的 DStream，并传递一个指定如何根据新的事件更新每个键对应状态的函数，它可以构建出一个新的 DStream，其内部数据(键，状态) 对。</p>\n<p>updateStateByKey() 的结果会是一个新的 DStream，其内部的 RDD 序列是由每个时间区间对 应 的(键，状态)对组成的。</p>\n<p>updateStateByKey 操作使得我们可以在用新信息进行更新时保持任意的状态。为使用这个功能，需要做下面两步：</p>\n<p>1、定义状态，状态可以是一个任意的数据类型。</p>\n<p>2、定义状态更新函数，用此函数阐明如何使用之前的状态和来自输入流的新值对状态进行更新。 使用 updateStateByKey 需要对检查点目录进行配置，会使用检查点来保存状态。</p>\n<p> </p>\n<div class=\"language-scala\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">scala</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">package</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">com</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">shujia</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">test</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">kafka</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">clients</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">consumer</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">&#123;</span><span style=\"color: #FFCB6B\">ConsumerConfig</span><span style=\"color: #BABED8\">, </span><span style=\"color: #FFCB6B\">ConsumerRecord</span><span style=\"color: #BABED8\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">SparkConfimport</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">streaming</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">dstream</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">&#123;</span><span style=\"color: #FFCB6B\">DStream</span><span style=\"color: #BABED8\">, </span><span style=\"color: #FFCB6B\">InputDStream</span><span style=\"color: #BABED8\">,</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">ReceiverInputDStream</span><span style=\"color: #BABED8\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">streaming</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">kafka010</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">&#123;</span><span style=\"color: #FFCB6B\">ConsumerStrategies</span><span style=\"color: #BABED8\">, </span><span style=\"color: #FFCB6B\">KafkaUtils</span><span style=\"color: #BABED8\">,</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">LocationStrategies</span><span style=\"color: #BABED8\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">streaming</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">&#123;</span><span style=\"color: #FFCB6B\">Seconds</span><span style=\"color: #BABED8\">, </span><span style=\"color: #FFCB6B\">StreamingContext</span><span style=\"color: #BABED8\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">object</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">DemoSpark06_State</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">def</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #BABED8\">(</span><span style=\"color: #BABED8; font-style: italic\">args</span><span style=\"color: #BABED8\">: </span><span style=\"color: #FFCB6B\">Array</span><span style=\"color: #BABED8\">[</span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #BABED8\">])</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Unit</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//TODO: 创建环境对象</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> sparkconf</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">SparkConf</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">SparkConf</span><span style=\"color: #BABED8\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">.setMaster(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">local[*]</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">.setAppName(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">WordCount</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> ssc </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">StreamingContext</span><span style=\"color: #BABED8\">(sparkconf,</span><span style=\"color: #FFCB6B\">Seconds</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\">))</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//无状态数据操作，只对当前的采集周期内的数据进行出来</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//在某些场合下，需要保留数据统计结果（状态），实现数据的汇总</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//使用有状态操作时，需要设定检查点路径</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ssc.checkpoint(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">cp</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> datas</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">ReceiverInputDStream</span><span style=\"color: #BABED8\">[</span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #BABED8\">] </span><span style=\"color: #89DDFF\">=</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ssc.socketTextStream(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">localhost</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">9999</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> wordToOne</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">DStream</span><span style=\"color: #BABED8\">[(</span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #BABED8\">, </span><span style=\"color: #FFCB6B\">Int</span><span style=\"color: #BABED8\">)] </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> datas.map((_, </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">))</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// val wordCount: DStream[(String, Int)] = wordToOne.reduceByKey(_ + _)</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//updateStateByKey:根据key对数据的状态进行更新</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//传递的参数中含有两个值</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//第一个值表示相同的key的value数据</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//第二个值表示缓冲区相同key的value数据</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> state </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> wordToOne.updateStateByKey(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">(seq</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFCB6B\">Seq</span><span style=\"color: #BABED8\">[</span><span style=\"color: #FFCB6B\">Int</span><span style=\"color: #BABED8\">],buff</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFCB6B\">Option</span><span style=\"color: #BABED8\">[</span><span style=\"color: #FFCB6B\">Int</span><span style=\"color: #BABED8\">]) </span><span style=\"color: #89DDFF\">=&gt;&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> newCount</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> buff.getOrElse(</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">) </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> seq.sum</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">Option</span><span style=\"color: #BABED8\">(newCount)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">state.print()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ssc.start()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ssc.awaitTermination()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h2 id=\"自定义数据源\"><a href=\"#自定义数据源\" class=\"headerlink\" title=\"** 自定义数据源**\"></a>** 自定义数据源**</h2><p><strong>用法及说明</strong></p>\n<p>需要继承 Receiver，并实现 onStart、onStop 方法来自定义数据源采集。</p>\n<p><strong>案例实操</strong> 需求：自定义数据源，实现监控某个端口号，获取该端口号内容。</p>\n<div class=\"language-scala\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">scala</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 自定义数据源</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">package</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">com</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">shujia</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">test</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">util</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">Random</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">SparkConf</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">rdd</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">RDD</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">storage</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">StorageLevel</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">streaming</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">dstream</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">ReceiverInputDStream</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">streaming</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">receiver</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">Receiver</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">streaming</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">&#123;</span><span style=\"color: #FFCB6B\">Seconds</span><span style=\"color: #BABED8\">, </span><span style=\"color: #FFCB6B\">StreamingContext</span><span style=\"color: #BABED8\">&#125;</span><span style=\"color: #FFCB6B\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">scala</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">collection</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">mutable</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">object</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">DemoSpark03_Diy</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">def</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #BABED8\">(</span><span style=\"color: #BABED8; font-style: italic\">args</span><span style=\"color: #BABED8\">: </span><span style=\"color: #FFCB6B\">Array</span><span style=\"color: #BABED8\">[</span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #BABED8\">])</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Unit</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//TODO: 创建环境对象</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//StreamingContext创建时，需要传递两个参数</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//第一个参数表示环境配置</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//1、初始化spark配置信息</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> sparkconf</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">SparkConf</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">SparkConf</span><span style=\"color: #BABED8\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">.setMaster(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">local[*]</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">.setAppName(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">WordCount</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//第二个参数表示批量处理的周期（采集周期）</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//2.初始化 SparkStreamingContext</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> ssc </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">StreamingContext</span><span style=\"color: #BABED8\">(sparkconf,</span><span style=\"color: #FFCB6B\">Seconds</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\">))</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//TODO 处理逻辑</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> messageDS</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">ReceiverInputDStream</span><span style=\"color: #BABED8\">[</span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #BABED8\">] </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> ssc.receiverStream(</span><span style=\"color: #89DDFF\">new</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">MyReceiver</span><span style=\"color: #BABED8\">())</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">messageDS.print()</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//(1)启动采集器</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ssc.start()</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//(2)等待采集器的关闭</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ssc.awaitTermination()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">* 自定义数据采集器</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">* 1、继承Receiver,定义泛型，传递参数</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">* 2、重写方法</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">*/</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">MyReceiver</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">extends</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Receiver</span><span style=\"color: #BABED8\">[</span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #BABED8\">](</span><span style=\"color: #FFCB6B\">StorageLevel</span><span style=\"color: #BABED8\">.</span><span style=\"color: #FFCB6B\">MEMORY_ONLY</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">private</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">var</span><span style=\"color: #BABED8\"> flg </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">true</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">override</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">def</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">onStart</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Unit</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Thread</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Runnable</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">override</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">def</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">run</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Unit</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #BABED8\"> (flg)</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> message </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">采集的数据为：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Random</span><span style=\"color: #BABED8\">().nextInt(</span><span style=\"color: #F78C6C\">10</span><span style=\"color: #BABED8\">).toString</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">store(message)</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">Thread</span><span style=\"color: #BABED8\">.sleep(</span><span style=\"color: #F78C6C\">500</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\">).start()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">override</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">def</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">onStop</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Unit</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">flg </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">false</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><div class=\"language-scala\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">scala</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F78C6C\">package</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">com</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">shujia</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">test</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">&#123;</span><span style=\"color: #FFCB6B\">BufferedReader</span><span style=\"color: #BABED8\">, </span><span style=\"color: #FFCB6B\">InputStreamReader</span><span style=\"color: #BABED8\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">net</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">Socket</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">nio</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">charset</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">StandardCharsets</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">java</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">util</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">Random</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">SparkConf</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">storage</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">StorageLevel</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">streaming</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">dstream</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">ReceiverInputDStream</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">streaming</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">receiver</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">Receiver</span></span>\n<span class=\"line\"><span style=\"color: #F78C6C\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">org</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">apache</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">spark</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">streaming</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">&#123;</span><span style=\"color: #FFCB6B\">Seconds</span><span style=\"color: #BABED8\">, </span><span style=\"color: #FFCB6B\">StreamingContext</span><span style=\"color: #BABED8\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">object</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">DemoSpark04_Diy</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">def</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #BABED8\">(</span><span style=\"color: #BABED8; font-style: italic\">args</span><span style=\"color: #BABED8\">: </span><span style=\"color: #FFCB6B\">Array</span><span style=\"color: #BABED8\">[</span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #BABED8\">])</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Unit</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//TODO: 创建环境对象</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//StreamingContext创建时，需要传递两个参数</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//第一个参数表示环境配置</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//1、初始化spark配置信息</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> sparkconf</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">SparkConf</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">SparkConf</span><span style=\"color: #BABED8\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">.setMaster(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">local[*]</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">.setAppName(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">WordCount</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//第二个参数表示批量处理的周期（采集周期）</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//2.初始化 SparkStreamingContext</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> ssc </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">StreamingContext</span><span style=\"color: #BABED8\">(sparkconf,</span><span style=\"color: #FFCB6B\">Seconds</span><span style=\"color: #BABED8\">(</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #BABED8\">))</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//TODO 处理逻辑</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//创建自定义 receiver 的 Streaming</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> lineStream</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">ReceiverInputDStream</span><span style=\"color: #BABED8\">[</span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #BABED8\">] </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> ssc.receiverStream(</span><span style=\"color: #89DDFF\">new</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">MyReceiver</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">localhost</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">, </span><span style=\"color: #F78C6C\">9999</span><span style=\"color: #BABED8\">))</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//将每一行数据做切分，形成一个个单词</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> wordStream </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> lineStream.flatMap(_.split(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">\\t</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">))</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//将单词映射成元组（</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">word,</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">）</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> wordAndOneStream </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> wordStream.map((_, </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\">))</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//将相同的单词次数做统计</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> wordAndCountStream </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> wordAndOneStream.reduceByKey(_ </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> _)</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//打印</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">wordAndCountStream.print()</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//(1)启动采集器</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ssc.start()</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//(2)等待采集器的关闭</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">ssc.awaitTermination()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">* 自定义数据采集器</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">* 1、继承Receiver,定义泛型，传递参数</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">* 2、重写方法</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">*/</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">MyReceiver</span><span style=\"color: #BABED8\">(host</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #BABED8\">,port</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFCB6B\">Int</span><span style=\"color: #BABED8\">) </span><span style=\"color: #89DDFF\">extends</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Receiver</span><span style=\"color: #BABED8\">[</span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #BABED8\">]</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">(</span><span style=\"color: #FFCB6B\">StorageLevel</span><span style=\"color: #BABED8\">.</span><span style=\"color: #FFCB6B\">MEMORY_ONLY</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #676E95; font-style: italic\">//最初启动的时候，调用该方法，作用为：读数据并将数据发送给spark</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">override</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">def</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">onStart</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Unit</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Thread</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Socket Receiver</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">override</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">def</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">run</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Unit</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">receiver()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\">.start()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//读取数据并将数据发送给spark</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">def</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">receiver</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">=&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//创建一个Socket</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> socket </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Socket</span><span style=\"color: #BABED8\">(host, port)</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//定义一个变量，用来接收端口传过来的数据</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">var</span><span style=\"color: #BABED8\"> input</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">null</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//创建一个BufferedReader用于读取端口传来的数据</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">val</span><span style=\"color: #BABED8\"> reader </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">BufferedReader</span><span style=\"color: #BABED8\">(</span><span style=\"color: #89DDFF\">new</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">InputStreamReader</span><span style=\"color: #BABED8\">(socket.getInputStream, </span><span style=\"color: #FFCB6B\">StandardCharsets</span><span style=\"color: #BABED8\">.</span><span style=\"color: #FFCB6B\">UTF_8</span><span style=\"color: #BABED8\">))</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//读取数据</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">input </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> reader.readLine()</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//当 receiver 没有关闭并且输入数据不为空，则循环发送数据给 Spark</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #BABED8\"> (</span><span style=\"color: #89DDFF\">!</span><span style=\"color: #BABED8\">isStopped() </span><span style=\"color: #89DDFF\">&amp;&amp;</span><span style=\"color: #BABED8\"> input </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">null</span><span style=\"color: #BABED8\">) </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">store(input)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">input </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> reader.readLine()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//跳出循环则关闭资源</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">reader.close()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">socket.close()</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//重启任务</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">restart(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">restart</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">override</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">def</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">onStop</span><span style=\"color: #BABED8\">()</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">Unit</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h3 id=\"Kafka-数据源\"><a href=\"#Kafka-数据源\" class=\"headerlink\" title=\"Kafka 数据源\"></a><strong>Kafka</strong> <strong>数据源</strong></h3><p><strong>版本选型</strong></p>\n<p>ReceiverAPI：需要一个专门的 Executor 去接收数据，然后发送给其他的 Executor 做计算。存在 的问题,接收数据的 Executor 和计算的 Executor 速度会有所不同，特别在接收数据的 Executor速度大于计算的Executor 速度，会导致计算数据的节点内存溢出。早期版本中提供此方式，当前版本不适用。</p>\n<p>DirectAPI：是由计算的 Executor 来主动消费 Kafka 的数据，速度由自身控制。</p>\n<p><strong>Kafka 0-10 Direct 模式</strong></p>\n<p>需求：通过 SparkStreaming 从 Kafka 读取数据，并将读取过来的数据做简单计算，最终打印到控制台。导入依赖:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>&lt;dependency&gt;</p>\n<p>&lt;groupId&gt; org.apache.spark &lt;&#x2F;groupId&gt;</p>\n<p>&lt;artifactId&gt; spark-streaming-kafka-0-10_2.12 &lt;&#x2F;artifactId&gt;</p>\n<p>&lt;version&gt; 2.4.5 &lt;&#x2F;version&gt;</p>\n<p>&lt;&#x2F;dependency&gt;</p>\n<p>&lt;dependency&gt;</p>\n<p>&lt;groupId&gt; com.fasterxml.jackson.core &lt;&#x2F;groupId&gt;</p>\n<p>&lt;artifactId&gt; jackson-core &lt;&#x2F;artifactId&gt;</p>\n<p>&lt;version&gt; 2.10.1 &lt;&#x2F;version&gt;</p>\n<p>&lt;&#x2F;dependency&gt;</p></blockquote>\n<p>1、上传压缩包到任意节点</p>\n<p>2、解压，配置环境变量 所有节点都配置</p>\n<p>3、修改config&#x2F;server.properties</p>\n<p>1、broker.id&#x3D;0，每一个节点broker.id 要不一样</p>\n<p>2、zookeeper.connect&#x3D;master:2181,node1:2181,node2:2181</p>\n<p>3、log.dirs&#x3D;&#x2F;usr&#x2F;local&#x2F;soft&#x2F;kafka_2.11-1.0.0&#x2F;data 消息存放的位置</p>\n<p>4、复制到其它节点</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>scp -r kafka_2.11-1.0.0 node2: `pwd`</p>\n<p>scp -r kafka_2.11-1.0.0 node1: `pwd`</p></blockquote>\n<p>5、修改每个节点的broker.id master&#x3D;0 node1&#x3D;1 node2&#x3D;2</p>\n<p>6、启动</p>\n<p>1、启动zookeeper， 需要在所有节点启动</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>zkServer.sh start</p></blockquote>\n<p>查看状态</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>zkServer.sh status</p></blockquote>\n<p>3，在每台节点启动broker， kafka是去中心化的架构 -daemon 后台启动 在所有节点</p>\n<p>启动</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>kafka-server-start.sh -daemon &#x2F;usr&#x2F;local&#x2F;soft&#x2F;kafka_2.11-1.0.0&#x2F;config&#x2F;server.properties</p></blockquote>\n<p>1、创建topic</p>\n<p>--replication-factor —每一个分区的副本数量</p>\n<p>--partition –分区数， 根据数据量设置</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>kafka-topics.sh –create –zookeeper master:2181,node1:2181,node2:2181 –replication-factor 2 –partitions 3 –topic test_topic1</p></blockquote>\n<p>2、查看topic描述信息</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>kafka-topics.sh –describe –zookeeper master:2181,node1:2181,node2:2181 –topic test_topic1</p></blockquote>\n<p>3、获取所有topic</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>kafka-topics.sh –list –zookeeper master:2181,node1:2181,node2:2181</p></blockquote>\n<p>4、创建控制台生产者</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>kafka-console-producer.sh –broker-list master:9092,node1:9092,node2:9092 –topic test_topic1</p></blockquote>\n<p>5、创建控制台消费者 –from-beginning 从头消费，， 如果不在执行消费的新的数据</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>kafka-console-consumer.sh –bootstrap-server master:9092,node1:9092,node2:9092 –from-beginning –topic test_topic1</p></blockquote>\n<p>#启动kafka</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>bin&#x2F;kafka-server-start.sh -daemon &#x2F;usr&#x2F;local&#x2F;soft&#x2F;kafka&#x2F;config&#x2F;server.properties</p></blockquote>\n<p>#创建topic</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>bin&#x2F;kafka-topics.sh –create –zookeeper master:2181,node1:2181,node2:2181 –replication-factor 2 –partitions 3 –topic shujia</p></blockquote>\n<p>#查看topic信息</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>bin&#x2F;kafka-topics.sh –describe –zookeeper master:2181,node1:2181,node2:2181 –topic kong</p></blockquote>\n<p>#显示所有topic</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>bin&#x2F;kafka-topics.sh –list –zookeeper master:2181,node1:2181,node2:2181</p></blockquote>\n<p>#创建生产者</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>bin&#x2F;kafka-console-producer.sh –broker-list master:9092,node1:9092,node2:9092 –topic kong</p></blockquote>\n<p>Article link： <a href=\"https://tqgoblin.site/post/csdn/SparkStreaming/\">https://tqgoblin.site/post/csdn/SparkStreaming/</a> <div align=left> Author：<a href=\"https://www.tqgoblin.site\"> Stephen </a> </div></p>\n","text":" 目录 SparkStreaming概述 SparkStreaming是什么 SparkStreaming特点 Spark Streaming架构 Dstrea...","permalink":"/post/csdn/SparkStreaming","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"大数据","slug":"大数据","count":7,"path":"api/categories/大数据.json"}],"tags":[{"name":"spark","slug":"spark","count":3,"path":"api/tags/spark.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SparkStreaming-%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">SparkStreaming****概述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#SparkStreaming%E6%98%AF%E4%BB%80%E4%B9%88\"><span class=\"toc-text\">SparkStreaming是什么</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#SparkStreaming-%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">SparkStreaming****特点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Spark-Streaming-%E6%9E%B6%E6%9E%84\"><span class=\"toc-text\">Spark Streaming****架构</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Dstream\"><span class=\"toc-text\">Dstream</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Dstream-%E5%85%A5%E9%97%A8\"><span class=\"toc-text\">Dstream****入门</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#DStream-%E5%88%9B%E5%BB%BA\"><span class=\"toc-text\">DStream 创建</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#DStream-%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">DStream 转换</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%97%A0%E7%8A%B6%E6%80%81%E8%BD%AC%E5%8C%96%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">无状态转化操作</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9C%89%E7%8A%B6%E6%80%81%E8%BD%AC%E5%8C%96%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">有状态转化操作</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%95%B0%E6%8D%AE%E6%BA%90\"><span class=\"toc-text\">** 自定义数据源**</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Kafka-%E6%95%B0%E6%8D%AE%E6%BA%90\"><span class=\"toc-text\">Kafka 数据源</span></a></li></ol></li></ol>","author":{"name":"Stephen","slug":"blog-author","avatar":"../img/logo.png","link":"/","description":"Love and Share","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"HBase详解","uid":"845ca224a2ba9eeb409ae729b9b9c1dd","slug":"csdn/HBase详解","date":"2023-02-12T12:54:44.000Z","updated":"2025-02-17T01:58:21.590Z","comments":true,"path":"api/articles/csdn/HBase详解.json","keywords":"Stephen web3","cover":[],"text":" 目录 第 1 章：HBase 简介 1.1 HBase 定义 1.2 HBase 数据模型 1.3 HBase 基本架构 第 2 章：HBase 快速入门 2...","permalink":"/post/csdn/HBase详解","photos":[],"count_time":{"symbolsCount":"43k","symbolsTime":"39 mins."},"categories":[{"name":"大数据","slug":"大数据","count":7,"path":"api/categories/大数据.json"}],"tags":[{"name":"hbase","slug":"hbase","count":1,"path":"api/tags/hbase.json"}],"author":{"name":"Stephen","slug":"blog-author","avatar":"../img/logo.png","link":"/","description":"Love and Share","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"SparkSQL详解","uid":"2350649905fde260e7257127a691caec","slug":"csdn/SparkSQL详解","date":"2023-02-06T09:00:19.000Z","updated":"2025-02-17T01:58:21.584Z","comments":true,"path":"api/articles/csdn/SparkSQL详解.json","keywords":"Stephen web3","cover":[],"text":" 目录 SparkSQL概述 什么是Spark SQL Spark SQL特点 什么是DataFrame RDD与DataFrame区别： 什么是DataSet...","permalink":"/post/csdn/SparkSQL详解","photos":[],"count_time":{"symbolsCount":"27k","symbolsTime":"24 mins."},"categories":[{"name":"大数据","slug":"大数据","count":7,"path":"api/categories/大数据.json"}],"tags":[{"name":"spark","slug":"spark","count":3,"path":"api/tags/spark.json"}],"author":{"name":"Stephen","slug":"blog-author","avatar":"../img/logo.png","link":"/","description":"Love and Share","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}