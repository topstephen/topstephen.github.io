{"title":"go语言--区块链学习（一）","uid":"7f7afcc6a1e9fb63345e7b5f7e953c62","slug":"csdn/go语言--区块链学习（一）","date":"2024-01-19T12:21:10.000Z","updated":"2025-02-17T03:14:24.943Z","comments":true,"path":"api/articles/csdn/go语言--区块链学习（一）.json","keywords":"Stephen web3","cover":null,"content":"<link rel=\"stylesheet\" href=\"/owl.css\"><link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><span id=\"more\"></span>\n\n<p>温馨跳转链接：模块二：<a href=\"https://blog.csdn.net/m0_73094011/article/details/135746049\">go语言–区块链学习（二）-CSDN博客</a><br>温馨跳转链接：模块三：<a href=\"https://blog.csdn.net/m0_73094011/article/details/138093790\">go语言–区块链学习（三）-CSDN博客</a></p>\n<h4 id=\"文章目录\"><a href=\"#文章目录\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h4><ul>\n<li><ul>\n<li><a href=\"#_5\">模块一：密码学</a></li>\n<li><ul>\n<li><a href=\"#11__7\">1.1 密码介绍</a></li>\n<li><ul>\n<li><a href=\"#111___9\">1.1.1 为什么要加密 ？</a></li>\n<li><a href=\"#112__30\">1.1.2 常见的几种加密算法</a></li>\n<li><a href=\"#113__38\">1.1.3 加密三要素</a></li>\n</ul>\n</li>\n<li><a href=\"#12__46\">1.2 编码解码</a></li>\n<li><ul>\n<li><a href=\"#121__48\">1.2.1 常见的几种编码</a></li>\n<li><a href=\"#122_gobase64_54\">1.2.2 go实现base64编码、解码</a></li>\n<li><a href=\"#123_gobase58_130\">1.2.3 go实现base58编码、解码</a></li>\n</ul>\n</li>\n<li><a href=\"#13__339\">1.3 哈希算法</a></li>\n<li><ul>\n<li><a href=\"#131__341\">1.3.1 特点</a></li>\n<li><a href=\"#132__351\">1.3.2 常用的几种哈希算法</a></li>\n<li><a href=\"#133_go_363\">1.3.3 go实现哈希算法举例</a></li>\n<li><ul>\n<li><a href=\"#1331_gomd4_365\">1.3.3.1 go实现md4加密</a></li>\n<li><a href=\"#1332_gomd5_402\">1.3.3.2 go实现md5加密</a></li>\n<li><a href=\"#1333_gosha256_433\">1.3.3.3 go实现sha256加密</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#14__464\">1.4 对称加密</a></li>\n<li><ul>\n<li><a href=\"#141__466\">1.4.1 特点</a></li>\n<li><a href=\"#142__472\">1.4.2 优点</a></li>\n<li><a href=\"#143__477\">1.4.3 缺点</a></li>\n<li><a href=\"#144__482\">1.4.4 场景分析</a></li>\n<li><a href=\"#145__487\">1.4.5 常见的对称加密方式</a></li>\n<li><ul>\n<li><a href=\"#1451_godes_493\">1.4.5.1 go实现des加密</a></li>\n<li><a href=\"#1452_go3des_594\">1.4.5.2 go实现3des加密</a></li>\n<li><a href=\"#1453_goaes_686\">1.4.5.3 go实现aes加密</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#15__786\">1.5 非对称加密</a></li>\n<li><ul>\n<li><a href=\"#151__788\">1.5.1 特点</a></li>\n<li><a href=\"#152__794\">1.5.2 优点</a></li>\n<li><a href=\"#153__799\">1.5.3 缺点</a></li>\n<li><a href=\"#154__804\">1.5.4 场景分析</a></li>\n<li><a href=\"#155__809\">1.5.5 常见的非对称加密方式</a></li>\n<li><ul>\n<li><a href=\"#1551_gorsa_817\">1.5.5.1 go实现rsa加密</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#16__942\">1.6 数字签名</a></li>\n<li><ul>\n<li><a href=\"#161__944\">1.6.1 数字签名介绍</a></li>\n<li><a href=\"#162_go_965\">1.6.2 go实现数字签名</a></li>\n<li><ul>\n<li><a href=\"#1621_gorsa_970\">1.6.2.1 go实现rsa数字签名</a></li>\n<li><a href=\"#1622_goecc_1104\">1.6.2.2 go实现ecc数字签名</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"模块一：密码学\"><a href=\"#模块一：密码学\" class=\"headerlink\" title=\"模块一：密码学\"></a>模块一：密码学</h3><h4 id=\"1-1-密码介绍\"><a href=\"#1-1-密码介绍\" class=\"headerlink\" title=\"1.1 密码介绍\"></a>1.1 密码介绍</h4><h5 id=\"1-1-1-为什么要加密-？\"><a href=\"#1-1-1-为什么要加密-？\" class=\"headerlink\" title=\"1.1.1 为什么要加密 ？\"></a>1.1.1 为什么要加密 ？</h5><ol>\n<li><p>保护隐私和数据安全：在信息传输过程中，不加密的数据可以被未经授权的人员截获和查看，这可能导致个人隐私泄露、商业机密被窃取或者敏感数据被篡改。通过加密数据，可以确保只有授权的人员能够解密和访问数据，提高了数据的安全性。</p>\n</li>\n<li><p>防止数据篡改：在信息传输过程中，数据可能会被篡改或修改，这可能导致信息内容的损坏或误导。通过加密数据，可以在接收方验证数据的完整性，确保传输的数据没有被篡改。</p>\n</li>\n<li><p>防止重放攻击：重放攻击是指攻击者拦截并重放先前传输的数据，以达到欺骗或恶意目的。通过加密数据并使用防重放技术，可以防止攻击者复用先前的数据来进行攻击。</p>\n</li>\n<li><p>遵守法律和合规要求：根据一些行业标准、法律法规和合规要求，某些类型的数据在传输过程中必须进行加密，以确保数据的安全性和保密性。加密数据可以帮助组织遵守相关的法律和合规要求。</p>\n</li>\n</ol>\n<p>举例：</p>\n<p>小明–&gt;小红：</p>\n<ul>\n<li>原文：你好啊，可以加个好友吗</li>\n<li>密钥：+2</li>\n<li>密文：请问你儿童好雨哦啊怕是，地方可规划以接口加两种个形参好那么友请问吗</li>\n<li>密钥（密码）：-2</li>\n<li>解密：请问你儿童好雨哦啊怕是，地方可规划以接口加两种个形参好那么友请问吗<ul>\n<li>你好啊，可以加个好友吗</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"1-1-2-常见的几种加密算法\"><a href=\"#1-1-2-常见的几种加密算法\" class=\"headerlink\" title=\"1.1.2 常见的几种加密算法\"></a>1.1.2 常见的几种加密算法</h5><ol>\n<li>编码解码：是将信息从一种形式转换为另一种形式的过程。编码通常用于将可读文本转换为二进制格式，以便在计算机之间传输或存储数据时使用。解码是将已编码的信息还原为原始形式的过程。</li>\n<li>哈希加密：也称为散列函数，是一种通过将任意长度的消息压缩为固定长度的摘要或哈希值的加密方法。哈希值是唯一的，并且由输入数据完全决定。但是，由于不同的消息可以生成相同的哈希值，因此哈希加密并不是完全安全的加密方式。</li>\n<li>对称加密：是指使用相同的密钥进行加密和解密的加密方式。这意味着发送方和接收方都必须知道密钥。对称加密速度快，但密钥需要在发送和接收之间传递。</li>\n<li>非对称加密：是指使用一对密钥（公钥和私钥）进行加密和解密的加密方式。公钥可公开，而私钥则必须保密。非对称加密安全性高，但速度较慢。</li>\n<li>数字签名：数字签名是一种加密技术，用于确保数字文档的完整性和身份验证。它使用非对称加密来创建一个数字签名，该签名包含文档的摘要和私钥。通过验证数字签名，可以确定文档是否被篡改，并且签名者是合法的。</li>\n</ol>\n<h5 id=\"1-1-3-加密三要素\"><a href=\"#1-1-3-加密三要素\" class=\"headerlink\" title=\"1.1.3 加密三要素\"></a>1.1.3 加密三要素</h5><ol>\n<li>明文&#x2F;密文：明文是未经过加密的数据，而密文是已经进行加密转换的数据。</li>\n<li>密钥：密钥是用于加密和解密数据的秘密值。密钥的安全性决定了数据的安全性。对称加密使用相同的密钥进行加密和解密，而非对称加密则使用一对密钥（公钥和私钥）进行加密和解密。</li>\n<li>加密算法&#x2F;解密算法：加密算法是用于将明文转换为密文的数学函数。解密算法是用于将密文转换回明文的逆函数。加密算法的安全性越高，破解难度就越大。</li>\n</ol>\n<p>加密三要素共同构成了加密系统，其中密钥的保护和管理非常重要，不当的密钥管理会导致加密系统的破解和信息泄露。</p>\n<h4 id=\"1-2-编码解码\"><a href=\"#1-2-编码解码\" class=\"headerlink\" title=\"1.2 编码解码\"></a>1.2 编码解码</h4><h5 id=\"1-2-1-常见的几种编码\"><a href=\"#1-2-1-常见的几种编码\" class=\"headerlink\" title=\"1.2.1 常见的几种编码\"></a>1.2.1 常见的几种编码</h5><ol>\n<li>base64：26个小写字母、26个大写字母、10个数字、&#x2F;、+</li>\n<li>base58（区块链）：去掉6个容易混淆的，去掉0，大写的O、大写的I、小写的L、&#x2F;、+<ul>\n<li>&#x2F;、+影响双击选择</li>\n</ul>\n</li>\n</ol>\n<h5 id=\"1-2-2-go实现base64编码、解码\"><a href=\"#1-2-2-go实现base64编码、解码\" class=\"headerlink\" title=\"1.2.2 go实现base64编码、解码\"></a>1.2.2 go实现base64编码、解码</h5><p>Go语言的encoding&#x2F;base64包提供了对base64编码和解码的支持。base64是一种将二进制数据转换为可打印ASCII字符的编码方式，常用于在网络传输中以文本形式表示二进制数据。</p>\n<p>该包中的主要函数有以下几个：</p>\n<ol>\n<li>func Encode(dst, src []byte)：将给定的字节切片src进行base64编码，并将结果存储在dst中。返回编码后的字节数。</li>\n<li>func Decode(dst, src []byte) (n int, err error)：将给定的base64编码的src进行解码，并将解码结果存储在dst中。返回解码后的字节数。</li>\n<li>func EncodeToString(src []byte) string：将给定的字节切片src进行base64编码，并返回编码后的字符串。</li>\n<li>func DecodeString(s string) ([]byte, error)：将给定的base64编码的字符串s进行解码，并返回解码后的字节切片。</li>\n</ol>\n<p>使用encoding&#x2F;base64包进行base64编码和解码非常简单，可以按照以下步骤进行操作：</p>\n<ol>\n<li>导入包：import “encoding&#x2F;base64”</li>\n<li>编码：调用base64包的EncodeToString函数，将要编码的数据作为参数传入，得到base64编码后的字符串。</li>\n<li>解码：调用base64包的DecodeString函数，将要解码的base64字符串作为参数传入，得到解码后的字节切片。</li>\n</ol>\n<p>通过encoding&#x2F;base64包，可以方便地进行base64编码和解码，常用于处理二进制数据在文本传输中的需求，如图像、音频等文件的传输与存储。</p>\n<ol>\n<li><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">base64编码</span></span></code></pre></div></li>\n</ol>\n<div class=\"language-go\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">go</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">src </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">hello</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">buf </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> base64</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">StdEncoding</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">EncodeToString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">src</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 在url中使用</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">src </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">http://127.0.0.1:8080/?name=hello</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">buf </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> base64</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">URLEncoding</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">EncodeToString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">src</span><span style=\"color: #89DDFF\">)</span></span></code></pre></div><ol start=\"2\">\n<li><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">base64解码</span></span></code></pre></div></li>\n</ol>\n<div class=\"language-go\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">go</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">dbuf</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> base64</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">StdEncoding</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">DecodeString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">buf</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">string</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">dbuf</span><span style=\"color: #89DDFF\">))</span></span></code></pre></div><p>代码：</p>\n<div class=\"language-go\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">go</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">package</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">main</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">encoding/base64</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">fmt</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        src </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">hello</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        buf </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> base64</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">StdEncoding</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">EncodeToString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">src</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        dbuf</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> base64</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">StdEncoding</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">DecodeString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">buf</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">string</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">dbuf</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        src </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">http://127.0.0.1:8080/?name=hello</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        buf </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> base64</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">URLEncoding</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">EncodeToString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">src</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        dbuf</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> base64</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">URLEncoding</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">DecodeString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">buf</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">string</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">dbuf</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><h5 id=\"1-2-3-go实现base58编码、解码\"><a href=\"#1-2-3-go实现base58编码、解码\" class=\"headerlink\" title=\"1.2.3 go实现base58编码、解码\"></a>1.2.3 go实现base58编码、解码</h5><p>base58编码表</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Value</th>\n<th align=\"center\">Char</th>\n<th align=\"center\">Value</th>\n<th align=\"center\">Char</th>\n<th align=\"center\">Value</th>\n<th align=\"center\">Char</th>\n<th align=\"center\">Value</th>\n<th align=\"center\">Char</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">0</td>\n<td align=\"center\">1</td>\n<td align=\"center\">15</td>\n<td align=\"center\">G</td>\n<td align=\"center\">30</td>\n<td align=\"center\">X</td>\n<td align=\"center\">45</td>\n<td align=\"center\">n</td>\n</tr>\n<tr>\n<td align=\"center\">1</td>\n<td align=\"center\">2</td>\n<td align=\"center\">16</td>\n<td align=\"center\">H</td>\n<td align=\"center\">31</td>\n<td align=\"center\">Y</td>\n<td align=\"center\">46</td>\n<td align=\"center\">o</td>\n</tr>\n<tr>\n<td align=\"center\">2</td>\n<td align=\"center\">3</td>\n<td align=\"center\">17</td>\n<td align=\"center\">J</td>\n<td align=\"center\">32</td>\n<td align=\"center\">Z</td>\n<td align=\"center\">47</td>\n<td align=\"center\">p</td>\n</tr>\n<tr>\n<td align=\"center\">3</td>\n<td align=\"center\">4</td>\n<td align=\"center\">18</td>\n<td align=\"center\">K</td>\n<td align=\"center\">33</td>\n<td align=\"center\">a</td>\n<td align=\"center\">48</td>\n<td align=\"center\">q</td>\n</tr>\n<tr>\n<td align=\"center\">4</td>\n<td align=\"center\">5</td>\n<td align=\"center\">19</td>\n<td align=\"center\">L</td>\n<td align=\"center\">34</td>\n<td align=\"center\">b</td>\n<td align=\"center\">49</td>\n<td align=\"center\">r</td>\n</tr>\n<tr>\n<td align=\"center\">5</td>\n<td align=\"center\">6</td>\n<td align=\"center\">20</td>\n<td align=\"center\">M</td>\n<td align=\"center\">35</td>\n<td align=\"center\">c</td>\n<td align=\"center\">50</td>\n<td align=\"center\">s</td>\n</tr>\n<tr>\n<td align=\"center\">6</td>\n<td align=\"center\">7</td>\n<td align=\"center\">21</td>\n<td align=\"center\">N</td>\n<td align=\"center\">36</td>\n<td align=\"center\">d</td>\n<td align=\"center\">51</td>\n<td align=\"center\">t</td>\n</tr>\n<tr>\n<td align=\"center\">7</td>\n<td align=\"center\">8</td>\n<td align=\"center\">22</td>\n<td align=\"center\">P</td>\n<td align=\"center\">37</td>\n<td align=\"center\">e</td>\n<td align=\"center\">52</td>\n<td align=\"center\">u</td>\n</tr>\n<tr>\n<td align=\"center\">8</td>\n<td align=\"center\">9</td>\n<td align=\"center\">23</td>\n<td align=\"center\">Q</td>\n<td align=\"center\">38</td>\n<td align=\"center\">f</td>\n<td align=\"center\">53</td>\n<td align=\"center\">v</td>\n</tr>\n<tr>\n<td align=\"center\">9</td>\n<td align=\"center\">A</td>\n<td align=\"center\">24</td>\n<td align=\"center\">R</td>\n<td align=\"center\">39</td>\n<td align=\"center\">g</td>\n<td align=\"center\">54</td>\n<td align=\"center\">w</td>\n</tr>\n<tr>\n<td align=\"center\">10</td>\n<td align=\"center\">B</td>\n<td align=\"center\">25</td>\n<td align=\"center\">S</td>\n<td align=\"center\">40</td>\n<td align=\"center\">h</td>\n<td align=\"center\">55</td>\n<td align=\"center\">x</td>\n</tr>\n<tr>\n<td align=\"center\">11</td>\n<td align=\"center\">C</td>\n<td align=\"center\">26</td>\n<td align=\"center\">T</td>\n<td align=\"center\">41</td>\n<td align=\"center\">i</td>\n<td align=\"center\">56</td>\n<td align=\"center\">y</td>\n</tr>\n<tr>\n<td align=\"center\">12</td>\n<td align=\"center\">D</td>\n<td align=\"center\">27</td>\n<td align=\"center\">U</td>\n<td align=\"center\">42</td>\n<td align=\"center\">j</td>\n<td align=\"center\">57</td>\n<td align=\"center\">z</td>\n</tr>\n<tr>\n<td align=\"center\">13</td>\n<td align=\"center\">E</td>\n<td align=\"center\">28</td>\n<td align=\"center\">V</td>\n<td align=\"center\">43</td>\n<td align=\"center\">k</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">14</td>\n<td align=\"center\">F</td>\n<td align=\"center\">29</td>\n<td align=\"center\">W</td>\n<td align=\"center\">44</td>\n<td align=\"center\">m</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n</tbody></table>\n<p>字符1代表0，字符2代表1，…，字符z代表57</p>\n<ol>\n<li>base58编码：</li>\n</ol>\n<ul>\n<li><p>数据分块：首先将二进制数据划分为固定大小的块。每个块通常包含特定数量的位，通常为8位（1字节）大小。这些块一个接一个地进行处理。</p>\n</li>\n<li><p>二进制转十进制转换：将每个二进制数据块转换为一个十进制值。此转换通过将二进制数据解释为基于256的整数来执行（因为每个字节有256个可能的值）。</p>\n</li>\n<li><p>映射到base58字符集：然后将在上一步中获得的十进制值映射到base58字符集中对应的字符。此映射是通过反复将十进制值除以58并使用余数作为索引从base58集合中选择字符来完成的。</p>\n</li>\n<li><p>构建编码字符串：从映射过程中获得的字符被连接在一起以形成base58编码字符串。</p>\n<ul>\n<li>处理前导零：在某些情况下，原始二进制数据中的前导零可能导致编码字符串中出现前导的 ‘1’ 字符。这些前导的 ‘1’ 字符通常被省略或替换为特殊字符（例如 ‘1’），以保持可读性。</li>\n</ul>\n</li>\n</ul>\n<div class=\"language-go\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">go</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">const</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    b58Alphabet </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Base58Encode</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">input </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">string</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">var</span><span style=\"color: #BABED8\"> result strings</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Builder</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 将待编码的字节数组input转换成大整数，如：hello(104 101 108 108 111) --&gt; 104*256^4 + 101*256^3 + 108*256^2 + 108*256^1 + 111*256^0 = 448378203247</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    x </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">new</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">big</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Int</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">SetBytes</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">input</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    base </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> big</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">NewInt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">58</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    zero </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> big</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">NewInt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 对大整数x进行遍历，每次将x除以58，得到商和余数。将余数映射到Base58字母表中，并将结果存储在字符串构建器result中。不断重复该过程，直到商为0</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> x</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Cmp</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">zero</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        mod </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">new</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">big</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Int</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        x</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">DivMod</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">x</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> base</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> mod</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        result</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">WriteByte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">b58Alphabet</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">mod</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Int64</span><span style=\"color: #89DDFF\">()])</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 处理前导0：对输入的字节数组进行遍历，统计前导的0的个数。根据Base58编码规则，在编码后的字符串中会添加相应数量的前导1</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> _</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> b </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">range</span><span style=\"color: #BABED8\"> input </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> b </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        result</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">WriteByte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">b58Alphabet</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">])</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 将result中的字符串反转，得到最终的Base58编码结果</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    reversedResult </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> result</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">String</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    reversedResultBytes </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">reversedResult</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">len</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">reversedResultBytes</span><span style=\"color: #89DDFF\">)-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> j</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> j</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        reversedResultBytes</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">],</span><span style=\"color: #BABED8\"> reversedResultBytes</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> reversedResultBytes</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">],</span><span style=\"color: #BABED8\"> reversedResultBytes</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">]</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">string</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">reversedResultBytes</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><ol start=\"2\">\n<li>base58解码：</li>\n</ol>\n<ul>\n<li><p>字符转换为十进制：要解码base58编码的字符串，需要根据base58字符集将字符串中的每个字符转换回其对应的十进制值。</p>\n</li>\n<li><p>十进制转二进制转换：从字符转换中获得的十进制值然后被转换回二进制数据。</p>\n<ul>\n<li>重建二进制数据：然后将上一步中的二进制数据连接起来以重建原始的二进制数据。现在可以将这些数据用于各种目的，例如数据反序列化或加密操作。</li>\n</ul>\n</li>\n</ul>\n<div class=\"language-go\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">go</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Base58Decode</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">input </span><span style=\"color: #C792EA\">string</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    result </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> big</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">NewInt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    base </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> big</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">NewInt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">58</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    zeroBytes </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 处理前导0：对输入的字符串进行遍历，统计前导的0的个数，直到遇到第一个非0的字符为止</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> _</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> b </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">range</span><span style=\"color: #BABED8\"> input </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">b</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> b58Alphabet</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            zeroBytes</span><span style=\"color: #89DDFF\">++</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 对输入字符串去除前导的0后，对其余字符进行遍历。通过在Base58字母表中查找当前字符所在的位置，得到该字符的数值，并将其乘以58的n次方（n为字符所在的位置），累加到result中</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    payload </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> input</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">zeroBytes</span><span style=\"color: #89DDFF\">:]</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> _</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> b </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">range</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">payload</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        charIndex </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> strings</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">IndexByte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">b58Alphabet</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> b</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> charIndex </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">&#123;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        result</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Mul</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">result</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> base</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        result</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Add</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">result</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> big</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">NewInt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">int64</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">charIndex</span><span style=\"color: #89DDFF\">)))</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 将result转换成字节数组，并在前面添加zeroBytes个0，得到最终的解码结果</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    resultBytes </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> result</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Bytes</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    resultBytes </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">append</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">bytes</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Repeat</span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">)&#125;,</span><span style=\"color: #BABED8\"> zeroBytes</span><span style=\"color: #89DDFF\">),</span><span style=\"color: #BABED8\"> resultBytes</span><span style=\"color: #89DDFF\">...)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> resultBytes</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p>代码：</p>\n<div class=\"language-go\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">go</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">package</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">main</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">bytes</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">fmt</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">math/big</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">strings</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">const</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    b58Alphabet </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Base58Encode</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">input </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">string</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">var</span><span style=\"color: #BABED8\"> result strings</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Builder</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    x </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">new</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">big</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Int</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">SetBytes</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">input</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    base </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> big</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">NewInt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">58</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    zero </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> big</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">NewInt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> x</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Cmp</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">zero</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        mod </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">new</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">big</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Int</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        x</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">DivMod</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">x</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> base</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> mod</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        result</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">WriteByte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">b58Alphabet</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">mod</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Int64</span><span style=\"color: #89DDFF\">()])</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// Add leading 1&#39;s for zeros in the input</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> _</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> b </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">range</span><span style=\"color: #BABED8\"> input </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> b </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        result</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">WriteByte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">b58Alphabet</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">])</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// Reverse the result</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    reversedResult </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> result</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">String</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    reversedResultBytes </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">reversedResult</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">len</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">reversedResultBytes</span><span style=\"color: #89DDFF\">)-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> j</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> j </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> j</span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        reversedResultBytes</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">],</span><span style=\"color: #BABED8\"> reversedResultBytes</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> reversedResultBytes</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">j</span><span style=\"color: #89DDFF\">],</span><span style=\"color: #BABED8\"> reversedResultBytes</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">]</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">string</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">reversedResultBytes</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Base58Decode</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">input </span><span style=\"color: #C792EA\">string</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    result </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> big</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">NewInt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    base </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> big</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">NewInt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">58</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    zeroBytes </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> _</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> b </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">range</span><span style=\"color: #BABED8\"> input </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">b</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> b58Alphabet</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            zeroBytes</span><span style=\"color: #89DDFF\">++</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">break</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    payload </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> input</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">zeroBytes</span><span style=\"color: #89DDFF\">:]</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> _</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> b </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">range</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">payload</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        charIndex </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> strings</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">IndexByte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">b58Alphabet</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> b</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> charIndex </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">&#123;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        result</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Mul</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">result</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> base</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        result</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Add</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">result</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> big</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">NewInt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">int64</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">charIndex</span><span style=\"color: #89DDFF\">)))</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    resultBytes </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> result</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Bytes</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    resultBytes </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">append</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">bytes</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Repeat</span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">)&#125;,</span><span style=\"color: #BABED8\"> zeroBytes</span><span style=\"color: #89DDFF\">),</span><span style=\"color: #BABED8\"> resultBytes</span><span style=\"color: #89DDFF\">...)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> resultBytes</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    input </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">hello</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    encoded </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Base58Encode</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">input</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Encoded:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> encoded</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    decoded </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Base58Decode</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">encoded</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Decoded:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">string</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">decoded</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><h4 id=\"1-3-哈希算法\"><a href=\"#1-3-哈希算法\" class=\"headerlink\" title=\"1.3 哈希算法\"></a>1.3 哈希算法</h4><h5 id=\"1-3-1-特点\"><a href=\"#1-3-1-特点\" class=\"headerlink\" title=\"1.3.1 特点\"></a>1.3.1 特点</h5><ol>\n<li>固定长度输出：哈希算法将任意长度的输入数据映射为固定长度的输出，通常以固定位数的二进制数或十六进制字符串表示。这使得哈希算法在需要固定长度标识和比较数据的场景中非常有用。</li>\n<li>单向性（不可逆）：哈希算法是一种单向函数，也就是说，从哈希值无法推导出原始数据。给定一个哈希值，很难通过逆运算还原出原始数据。这种特性使得哈希算法在密码学中被广泛应用于加密、数字签名和身份验证等领域。</li>\n<li>高效性：哈希算法的计算速度通常很快。对于给定的输入数据，哈希算法能够迅速生成对应的哈希值。这使得哈希算法在大规模数据处理、密码校验和数据索引等方面得到广泛应用。</li>\n<li>雪崩效应（防篡改）：哈希算法具有雪崩效应，即输入数据的微小变化会导致输出哈希值的巨大变化。这意味着稍微改变输入数据的任何部分，都会导致生成的哈希值完全不同。这种特性使得哈希算法在校验数据完整性和防止冲突等方面非常有用。</li>\n<li>碰撞概率：由于哈希算法的输出空间是有限的，不同的输入数据可能会生成相同的哈希值，这被称为碰撞。好的哈希算法应该使得碰撞的概率非常低，即使在大量数据的情况下也能保持碰撞的概率较小。</li>\n</ol>\n<p>如：一般网站的账号密码会经过哈希加密后存储到数据库中，以保护用户的账号密码安全。</p>\n<h5 id=\"1-3-2-常用的几种哈希算法\"><a href=\"#1-3-2-常用的几种哈希算法\" class=\"headerlink\" title=\"1.3.2 常用的几种哈希算法\"></a>1.3.2 常用的几种哈希算法</h5><ol>\n<li>MD4（Message Digest Algorithm 4）：由Ron Rivest于1990年设计的一种哈希算法，已被认为不安全，不推荐使用。</li>\n<li>MD5（Message Digest Algorithm 5）：也是由Ron Rivest设计的一种哈希算法，常用于校验数据完整性和密码存储。然而，由于其存在碰撞漏洞，不适合用于安全性要求较高的场景。</li>\n<li>SHA-1（Secure Hash Algorithm 1）：由美国国家安全局（NSA）设计的一种哈希算法，常用于校验数据完整性和数字签名。然而，由于其存在碰撞漏洞，安全性逐渐被破坏，不再推荐使用。</li>\n<li>SHA-224：SHA-224是SHA-256的一个变种，生成224位的哈希值。</li>\n<li>SHA-256：SHA-256是SHA-2系列中的一种哈希算法，生成256位的哈希值。目前被广泛使用，能够提供较高的安全性。</li>\n<li>SHA-384：SHA-384是SHA-2系列中的一种哈希算法，生成384位的哈希值。相比于SHA-256，SHA-384具有更大的输出长度，提供更高的安全性。</li>\n<li>SHA-512：SHA-512是SHA-2系列中的一种哈希算法，生成512位的哈希值。与SHA-256相比，SHA-512在安全性方面更强。</li>\n</ol>\n<p>需要注意的是，虽然MD5、SHA-1、SHA-224、SHA-256、SHA-384和SHA-512在某些场景下仍可用于非安全性需求，但对于安全性要求较高的应用，建议使用更强大的哈希算法，如SHA-256或SHA-512。</p>\n<h5 id=\"1-3-3-go实现哈希算法举例\"><a href=\"#1-3-3-go实现哈希算法举例\" class=\"headerlink\" title=\"1.3.3 go实现哈希算法举例\"></a>1.3.3 go实现哈希算法举例</h5><h6 id=\"1-3-3-1-go实现md4加密\"><a href=\"#1-3-3-1-go实现md4加密\" class=\"headerlink\" title=\"1.3.3.1 go实现md4加密\"></a>1.3.3.1 go实现md4加密</h6><p>需要引入第三方包（失败，请配置环境变量GOPROXY&#x3D;<a href=\"https://goproxy.cn)/\">https://goproxy.cn）</a></p>\n<div class=\"language-go\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">go</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">go</span><span style=\"color: #BABED8\"> get golang</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">org</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">x</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">crypto</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #BABED8\">md4</span></span></code></pre></div><p>代码：</p>\n<div class=\"language-go\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">go</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">package</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">main</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">encoding/hex</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">fmt</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">golang.org/x/crypto/md4</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Md4Encrypt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">str </span><span style=\"color: #C792EA\">string</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">string</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 创建一个 md4.New() 对象，该对象用于计算 MD4 哈希值</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    hasher </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> md4</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">New</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 将输入的字符串转换为字节数组，并将其写入哈希对象中</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    hasher</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Write</span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">str</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 调用 hasher.Sum(nil) 完成哈希计算</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    hash </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> hasher</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Sum</span><span style=\"color: #89DDFF\">(nil)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 将哈希值转换为十六进制字符串</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> hex</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">EncodeToString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">hash</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    str </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">hello, world!</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">Md4Encrypt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">str</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 输出：03cc95120b718b883b96bce3706d64b7</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><h6 id=\"1-3-3-2-go实现md5加密\"><a href=\"#1-3-3-2-go实现md5加密\" class=\"headerlink\" title=\"1.3.3.2 go实现md5加密\"></a>1.3.3.2 go实现md5加密</h6><p>代码：</p>\n<div class=\"language-go\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">go</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">package</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">main</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">crypto/md5</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">encoding/hex</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">fmt</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Md5Encrypt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">str </span><span style=\"color: #C792EA\">string</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">string</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 创建一个 md5.New() 对象，该对象用于计算 MD5 哈希值</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    hasher </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> md5</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">New</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 将输入的字符串转换为字节数组，并将其写入哈希对象中</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    hasher</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Write</span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">str</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 调用 hasher.Sum(nil) 完成哈希计算</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    hash </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> hasher</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Sum</span><span style=\"color: #89DDFF\">(nil)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 将哈希值转换为十六进制字符串</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> hex</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">EncodeToString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">hash</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    str </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">hello, world!</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">Md5Encrypt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">str</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 输出：3adbbad1791fbae3ec908894c4963870</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><h6 id=\"1-3-3-3-go实现sha256加密\"><a href=\"#1-3-3-3-go实现sha256加密\" class=\"headerlink\" title=\"1.3.3.3 go实现sha256加密\"></a>1.3.3.3 go实现sha256加密</h6><p>代码：</p>\n<div class=\"language-go\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">go</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">package</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">main</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">crypto/sha256</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">encoding/hex</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">fmt</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Sha256Encrypt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">str </span><span style=\"color: #C792EA\">string</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">string</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 创建一个 sha256.New() 对象，该对象用于计算 SHA-256 哈希值</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    hasher </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> sha256</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">New</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 将输入的字符串转换为字节数组，并将其写入哈希对象中</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    hasher</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Write</span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">str</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 调用 hasher.Sum(nil) 完成哈希计算</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    hash </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> hasher</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Sum</span><span style=\"color: #89DDFF\">(nil)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 将哈希值转换为十六进制字符串</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> hex</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">EncodeToString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">hash</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    str </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">hello, world!</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">Sha256Encrypt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">str</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 输出：68e656b251e67e8358bef8483ab0d51c6619f3e7a1a9f0e75838d41ff368f728</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><h4 id=\"1-4-对称加密\"><a href=\"#1-4-对称加密\" class=\"headerlink\" title=\"1.4 对称加密\"></a>1.4 对称加密</h4><h5 id=\"1-4-1-特点\"><a href=\"#1-4-1-特点\" class=\"headerlink\" title=\"1.4.1 特点\"></a>1.4.1 特点</h5><ol>\n<li>加密和解密使用相同的密钥。</li>\n<li>加密速度较快，适合处理大量数据。</li>\n<li>对称加密算法通常较简单。</li>\n</ol>\n<h5 id=\"1-4-2-优点\"><a href=\"#1-4-2-优点\" class=\"headerlink\" title=\"1.4.2 优点\"></a>1.4.2 优点</h5><ol>\n<li>加密和解密的速度快，适用于大量数据的加密和传输。</li>\n<li>实现简单，计算成本低。</li>\n</ol>\n<h5 id=\"1-4-3-缺点\"><a href=\"#1-4-3-缺点\" class=\"headerlink\" title=\"1.4.3 缺点\"></a>1.4.3 缺点</h5><ol>\n<li>密钥的管理和分发可能存在安全风险。</li>\n<li>需要在通信双方之间事先共享密钥。</li>\n</ol>\n<h5 id=\"1-4-4-场景分析\"><a href=\"#1-4-4-场景分析\" class=\"headerlink\" title=\"1.4.4 场景分析\"></a>1.4.4 场景分析</h5><ol>\n<li>对称加密适用于需要快速加密和解密大量数据的场景，如文件加密、数据库加密等。</li>\n<li>由于密钥的管理和分发存在风险，对称加密更适用于双方已经建立了安全信任关系的场景。</li>\n</ol>\n<h5 id=\"1-4-5-常见的对称加密方式\"><a href=\"#1-4-5-常见的对称加密方式\" class=\"headerlink\" title=\"1.4.5 常见的对称加密方式\"></a>1.4.5 常见的对称加密方式</h5><ol>\n<li>DES（Data Encryption Standard）：使用56位密钥，已经被更安全的算法所取代。</li>\n<li>3DES（Triple Data Encryption Algorithm）：对DES进行三次加密以增加安全性。</li>\n<li>AES（Advanced Encryption Standard）：目前最常用的对称加密算法，支持128、192和256位密钥。</li>\n</ol>\n<h6 id=\"1-4-5-1-go实现des加密\"><a href=\"#1-4-5-1-go实现des加密\" class=\"headerlink\" title=\"1.4.5.1 go实现des加密\"></a>1.4.5.1 go实现des加密</h6><p>代码：</p>\n<div class=\"language-go\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">go</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">package</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">main</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">bytes</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">crypto/cipher</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">crypto/des</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">encoding/base64</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">fmt</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    key </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">01234567</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\">          </span><span style=\"color: #676E95; font-style: italic\">// DES密钥，8字节</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    plaintext </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Hello, DES!</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 明文数据</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 调用encrypt()函数对明文进行加密，返回密文ciphertext和可能的错误err</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ciphertext</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">encrypt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> plaintext</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">加密失败:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 使用Base64编码将密文转换为字符串并打印出来</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Printf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">加密结果: </span><span style=\"color: #F07178\">%s</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> base64</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">StdEncoding</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">EncodeToString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">ciphertext</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 调用decrypt()函数对密文进行解密，返回解密后的明文decryptedText和可能的错误err</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    decryptedText</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">decrypt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> ciphertext</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">解密失败:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 打印解密后的明文</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Printf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">解密结果: </span><span style=\"color: #F07178\">%s</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> decryptedText</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 定义pad()函数，用于对数据进行填充以适应加密算法的块大小</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">pad</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">data </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> blockSize </span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    padding </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> blockSize </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">len</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">)%</span><span style=\"color: #BABED8\">blockSize              </span><span style=\"color: #676E95; font-style: italic\">// 计算需要填充的字节数padding</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    padText </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> bytes</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Repeat</span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">padding</span><span style=\"color: #89DDFF\">)&#125;,</span><span style=\"color: #BABED8\"> padding</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 使用bytes.Repeat()函数创建一个字节数组，其中每个元素都是padding的值</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">append</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> padText</span><span style=\"color: #89DDFF\">...)</span><span style=\"color: #BABED8\">                         </span><span style=\"color: #676E95; font-style: italic\">// 将填充的数据追加到原始数据后面并返回</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 定义unpad()函数，用于去除填充数据</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">unpad</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">data </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    padding </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> data</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #82AAFF\">len</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">)-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\">         </span><span style=\"color: #676E95; font-style: italic\">// 获取最后一个字节作为填充字节数padding</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> data</span><span style=\"color: #89DDFF\">[:</span><span style=\"color: #82AAFF\">len</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">)-</span><span style=\"color: #82AAFF\">int</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">padding</span><span style=\"color: #89DDFF\">)]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 返回去除填充后的数据</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 定义encrypt()函数，用于进行DES加密</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">encrypt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> plaintext </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">error</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    block</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> des</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">NewCipher</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 创建DES实例</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil,</span><span style=\"color: #BABED8\"> err</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    blockSize </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> block</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">BlockSize</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\">        </span><span style=\"color: #676E95; font-style: italic\">// 获取加密算法的块大小</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    plaintext </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">pad</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">plaintext</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> blockSize</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 调用pad()函数对明文进行填充</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ciphertext </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">make</span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> blockSize</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #82AAFF\">len</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">plaintext</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 创建一个字节数组ciphertext，长度为块大小加上填充后的明文长度</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    iv </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> ciphertext</span><span style=\"color: #89DDFF\">[:</span><span style=\"color: #BABED8\">blockSize</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\">                         </span><span style=\"color: #676E95; font-style: italic\">// 将ciphertext的前块大小个字节作为初始向量iv</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    mode </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> cipher</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">NewCBCEncrypter</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">block</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> iv</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\">            </span><span style=\"color: #676E95; font-style: italic\">// 创建CBC模式的加密器mode</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    mode</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">CryptBlocks</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">ciphertext</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">blockSize</span><span style=\"color: #89DDFF\">:],</span><span style=\"color: #BABED8\"> plaintext</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\">  </span><span style=\"color: #676E95; font-style: italic\">// 使用加密器对填充后的明文进行加密，并将结果保存到ciphertext中</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> ciphertext</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 返回加密后的密文</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 定义decrypt()函数，用于进行DES解密</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">decrypt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> ciphertext </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">error</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    block</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> des</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">NewCipher</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 创建DES实例</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil,</span><span style=\"color: #BABED8\"> err</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    blockSize </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> block</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">BlockSize</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 获取解密算法的块大小</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">len</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">ciphertext</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> blockSize </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 检查密文的长度是否小于块大小</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil,</span><span style=\"color: #BABED8\"> fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Errorf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">ciphertext too short</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    iv </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> ciphertext</span><span style=\"color: #89DDFF\">[:</span><span style=\"color: #BABED8\">blockSize</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\">        </span><span style=\"color: #676E95; font-style: italic\">// 将密文的前块大小个字节作为初始向量iv</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ciphertext </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> ciphertext</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">blockSize</span><span style=\"color: #89DDFF\">:]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 截取密文中除去初始向量部分的数据</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">len</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">ciphertext</span><span style=\"color: #89DDFF\">)%</span><span style=\"color: #BABED8\">blockSize </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 检查密文长度是否是块大小的整数倍</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil,</span><span style=\"color: #BABED8\"> fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Errorf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">ciphertext is not a multiple of the block size</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    plaintext </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">make</span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">len</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">ciphertext</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 创建一个字节数组plaintext，用于保存解密后的明文</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    mode </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> cipher</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">NewCBCDecrypter</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">block</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> iv</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 创建CBC模式的解密器mode</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    mode</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">CryptBlocks</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">plaintext</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> ciphertext</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\">   </span><span style=\"color: #676E95; font-style: italic\">// 使用解密器对密文进行解密，并将结果保存到plaintext中</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">unpad</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">plaintext</span><span style=\"color: #89DDFF\">),</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 返回去除填充的明文</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><h6 id=\"1-4-5-2-go实现3des加密\"><a href=\"#1-4-5-2-go实现3des加密\" class=\"headerlink\" title=\"1.4.5.2 go实现3des加密\"></a>1.4.5.2 go实现3des加密</h6><p>代码：</p>\n<div class=\"language-go\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">go</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">package</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">main</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">bytes</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">crypto/cipher</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">crypto/des</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">fmt</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    key </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">0123456789abcdef01234567</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 3DES密钥，24字节</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    plaintext </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Hello, 3DES!</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\">       </span><span style=\"color: #676E95; font-style: italic\">// 明文数据</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ciphertext</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">encrypt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> plaintext</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">加密失败:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Printf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">加密结果: </span><span style=\"color: #F07178\">%x</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> ciphertext</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    decryptedText</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">decrypt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> ciphertext</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">解密失败:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Printf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">解密结果: </span><span style=\"color: #F07178\">%s</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> decryptedText</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">pad</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">data </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> blockSize </span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    padding </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> blockSize </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">len</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">)%</span><span style=\"color: #BABED8\">blockSize</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    padText </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> bytes</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Repeat</span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">padding</span><span style=\"color: #89DDFF\">)&#125;,</span><span style=\"color: #BABED8\"> padding</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">append</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> padText</span><span style=\"color: #89DDFF\">...)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">unpad</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">data </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    padding </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> data</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #82AAFF\">len</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">)-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">]</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> data</span><span style=\"color: #89DDFF\">[:</span><span style=\"color: #82AAFF\">len</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">)-</span><span style=\"color: #82AAFF\">int</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">padding</span><span style=\"color: #89DDFF\">)]</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">encrypt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> plaintext </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">error</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    block</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> des</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">NewTripleDESCipher</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil,</span><span style=\"color: #BABED8\"> err</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    blockSize </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> block</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">BlockSize</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    plaintext </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">pad</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">plaintext</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> blockSize</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ciphertext </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">make</span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> blockSize</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #82AAFF\">len</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">plaintext</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    iv </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">make</span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> blockSize</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    mode </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> cipher</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">NewCBCEncrypter</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">block</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> iv</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    mode</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">CryptBlocks</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">ciphertext</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">blockSize</span><span style=\"color: #89DDFF\">:],</span><span style=\"color: #BABED8\"> plaintext</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> ciphertext</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">decrypt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> ciphertext </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">error</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    block</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> des</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">NewTripleDESCipher</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil,</span><span style=\"color: #BABED8\"> err</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    blockSize </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> block</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">BlockSize</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">len</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">ciphertext</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> blockSize </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil,</span><span style=\"color: #BABED8\"> fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Errorf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">ciphertext too short</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    iv </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> ciphertext</span><span style=\"color: #89DDFF\">[:</span><span style=\"color: #BABED8\">blockSize</span><span style=\"color: #89DDFF\">]</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ciphertext </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> ciphertext</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">blockSize</span><span style=\"color: #89DDFF\">:]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">len</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">ciphertext</span><span style=\"color: #89DDFF\">)%</span><span style=\"color: #BABED8\">blockSize </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil,</span><span style=\"color: #BABED8\"> fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Errorf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">ciphertext is not a multiple of the block size</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    plaintext </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">make</span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">len</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">ciphertext</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    mode </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> cipher</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">NewCBCDecrypter</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">block</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> iv</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    mode</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">CryptBlocks</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">plaintext</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> ciphertext</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">unpad</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">plaintext</span><span style=\"color: #89DDFF\">),</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><h6 id=\"1-4-5-3-go实现aes加密\"><a href=\"#1-4-5-3-go实现aes加密\" class=\"headerlink\" title=\"1.4.5.3 go实现aes加密\"></a>1.4.5.3 go实现aes加密</h6><p>代码：</p>\n<div class=\"language-go\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">go</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">package</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">main</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">bytes</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">crypto/aes</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">crypto/cipher</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">crypto/rand</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">encoding/base64</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">fmt</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">io</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    key </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">0123456789abcdef</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\">  </span><span style=\"color: #676E95; font-style: italic\">// AES-128密钥，16字节</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    plaintext </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Hello, AES!</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 明文数据</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ciphertext</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">encrypt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> plaintext</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">加密失败:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Printf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">加密结果: </span><span style=\"color: #F07178\">%s</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> base64</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">StdEncoding</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">EncodeToString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">ciphertext</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    decryptedText</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">decrypt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> ciphertext</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">解密失败:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Printf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">解密结果: </span><span style=\"color: #F07178\">%s</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> decryptedText</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">pad</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">data </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> blockSize </span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    padding </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> blockSize </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">len</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">)%</span><span style=\"color: #BABED8\">blockSize</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    padText </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> bytes</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Repeat</span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">padding</span><span style=\"color: #89DDFF\">)&#125;,</span><span style=\"color: #BABED8\"> padding</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">append</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> padText</span><span style=\"color: #89DDFF\">...)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">unpad</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">data </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    padding </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> data</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #82AAFF\">len</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">)-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">]</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> data</span><span style=\"color: #89DDFF\">[:</span><span style=\"color: #82AAFF\">len</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">data</span><span style=\"color: #89DDFF\">)-</span><span style=\"color: #82AAFF\">int</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">padding</span><span style=\"color: #89DDFF\">)]</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">encrypt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> plaintext </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">error</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    block</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> aes</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">NewCipher</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil,</span><span style=\"color: #BABED8\"> err</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    blockSize </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> block</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">BlockSize</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    plaintext </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">pad</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">plaintext</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> blockSize</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ciphertext </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">make</span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> blockSize</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #82AAFF\">len</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">plaintext</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    iv </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> ciphertext</span><span style=\"color: #89DDFF\">[:</span><span style=\"color: #BABED8\">blockSize</span><span style=\"color: #89DDFF\">]</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> _</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">ReadFull</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">rand</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Reader</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> iv</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil,</span><span style=\"color: #BABED8\"> err</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    mode </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> cipher</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">NewCBCEncrypter</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">block</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> iv</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    mode</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">CryptBlocks</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">ciphertext</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">blockSize</span><span style=\"color: #89DDFF\">:],</span><span style=\"color: #BABED8\"> plaintext</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> ciphertext</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">decrypt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> ciphertext </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">error</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    block</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> aes</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">NewCipher</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil,</span><span style=\"color: #BABED8\"> err</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    blockSize </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> block</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">BlockSize</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">len</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">ciphertext</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> blockSize </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil,</span><span style=\"color: #BABED8\"> fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Errorf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">ciphertext too short</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    iv </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> ciphertext</span><span style=\"color: #89DDFF\">[:</span><span style=\"color: #BABED8\">blockSize</span><span style=\"color: #89DDFF\">]</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ciphertext </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> ciphertext</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">blockSize</span><span style=\"color: #89DDFF\">:]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">len</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">ciphertext</span><span style=\"color: #89DDFF\">)%</span><span style=\"color: #BABED8\">blockSize </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil,</span><span style=\"color: #BABED8\"> fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Errorf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">ciphertext is not a multiple of the block size</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    plaintext </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">make</span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">len</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">ciphertext</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    mode </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> cipher</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">NewCBCDecrypter</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">block</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> iv</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    mode</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">CryptBlocks</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">plaintext</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> ciphertext</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">unpad</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">plaintext</span><span style=\"color: #89DDFF\">),</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><h4 id=\"1-5-非对称加密\"><a href=\"#1-5-非对称加密\" class=\"headerlink\" title=\"1.5 非对称加密\"></a>1.5 非对称加密</h4><h5 id=\"1-5-1-特点\"><a href=\"#1-5-1-特点\" class=\"headerlink\" title=\"1.5.1 特点\"></a>1.5.1 特点</h5><ol>\n<li>加密和解密使用不同的密钥。</li>\n<li>加密速度较慢，适合处理少量数据。</li>\n<li>非对称加密算法通常较复杂。</li>\n</ol>\n<h5 id=\"1-5-2-优点\"><a href=\"#1-5-2-优点\" class=\"headerlink\" title=\"1.5.2 优点\"></a>1.5.2 优点</h5><ol>\n<li>密钥的分发和管理相对较简单，无需事先共享密钥。</li>\n<li>提供了更高的安全性，可以用于身份验证和数字签名。</li>\n</ol>\n<h5 id=\"1-5-3-缺点\"><a href=\"#1-5-3-缺点\" class=\"headerlink\" title=\"1.5.3 缺点\"></a>1.5.3 缺点</h5><ol>\n<li>加密和解密的速度较慢，不适合处理大量数据。</li>\n<li>计算成本较高。</li>\n</ol>\n<h5 id=\"1-5-4-场景分析\"><a href=\"#1-5-4-场景分析\" class=\"headerlink\" title=\"1.5.4 场景分析\"></a>1.5.4 场景分析</h5><ol>\n<li>非对称加密适用于需要较高安全性和身份验证的场景，如安全传输密钥、数字签名等。</li>\n<li>密钥的分发和管理相对较简单，适用于未建立安全信任关系的场景。</li>\n</ol>\n<h5 id=\"1-5-5-常见的非对称加密方式\"><a href=\"#1-5-5-常见的非对称加密方式\" class=\"headerlink\" title=\"1.5.5 常见的非对称加密方式\"></a>1.5.5 常见的非对称加密方式</h5><ol>\n<li><p>RSA（Rivest, Shamir, Adleman）：基于大数因子分解的数学问题，广泛应用于安全通信和数字签名。</p>\n</li>\n<li><p>ECC（Elliptic Curve Cryptography）：基于椭圆曲线离散对数问题的加密算法，提供与RSA相当的安全性但计算成本较低。</p>\n<p>Go标准库中并没有提供直接的ECDSA加密和解密函数。ECDSA主要用于数字签名，而不是进行加密和解密操作。</p>\n</li>\n</ol>\n<h6 id=\"1-5-5-1-go实现rsa加密\"><a href=\"#1-5-5-1-go实现rsa加密\" class=\"headerlink\" title=\"1.5.5.1 go实现rsa加密\"></a>1.5.5.1 go实现rsa加密</h6><p>代码：</p>\n<div class=\"language-go\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">go</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">package</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">main</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">crypto/rand</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">crypto/rsa</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">crypto/x509</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">encoding/pem</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">fmt</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">os</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 生成RSA密钥对</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    privateKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> rsa</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">GenerateKey</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">rand</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Reader</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">2048</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">生成RSA密钥对失败:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 保存私钥到文件</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    err </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">savePrivateKeyToFile</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">privateKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">private.pem</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">保存私钥到文件失败:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">私钥已保存到 private.pem 文件</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 获取公钥</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    publicKey </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8\">privateKey</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">PublicKey</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 保存公钥到文件</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    err </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">savePublicKeyToFile</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">publicKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">public.pem</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">保存公钥到文件失败:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">公钥已保存到 public.pem 文件</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 使用公钥加密</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    plaintext </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Hello, RSA!</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ciphertext</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">encryptWithPublicKey</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">plaintext</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> publicKey</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">使用公钥加密失败:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Printf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">加密结果: </span><span style=\"color: #F07178\">%x</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> ciphertext</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 使用私钥解密</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    decryptedText</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">decryptWithPrivateKey</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">ciphertext</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> privateKey</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">使用私钥解密失败:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">解密结果:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">string</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">decryptedText</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 保存私钥到文件</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">savePrivateKeyToFile</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">privateKey </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">rsa</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">PrivateKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> filename </span><span style=\"color: #C792EA\">string</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">error</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    privateKeyBytes </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> x509</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">MarshalPKCS1PrivateKey</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">privateKey</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    privateKeyPEM </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> pem</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">EncodeToMemory</span><span style=\"color: #89DDFF\">(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8\">pem</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Block</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            Type</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">RSA PRIVATE KEY</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            Bytes</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> privateKeyBytes</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">WriteFile</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">filename</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> privateKeyPEM</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0600</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 保存公钥到文件</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">savePublicKeyToFile</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">publicKey </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">rsa</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">PublicKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> filename </span><span style=\"color: #C792EA\">string</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">error</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    publicKeyBytes</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> x509</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">MarshalPKIXPublicKey</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">publicKey</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> err</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    publicKeyPEM </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> pem</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">EncodeToMemory</span><span style=\"color: #89DDFF\">(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8\">pem</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Block</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            Type</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">PUBLIC KEY</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            Bytes</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> publicKeyBytes</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">WriteFile</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">filename</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> publicKeyPEM</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0644</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 使用公钥加密</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">encryptWithPublicKey</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">plaintext </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> publicKey </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">rsa</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">PublicKey</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">error</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ciphertext</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> rsa</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">EncryptPKCS1v15</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">rand</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Reader</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> publicKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> plaintext</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil,</span><span style=\"color: #BABED8\"> err</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> ciphertext</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 使用私钥解密</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">decryptWithPrivateKey</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">ciphertext </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> privateKey </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">rsa</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">PrivateKey</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">error</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    plaintext</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> rsa</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">DecryptPKCS1v15</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">rand</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Reader</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> privateKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> ciphertext</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil,</span><span style=\"color: #BABED8\"> err</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> plaintext</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p><strong>privateKeyBytes :&#x3D; x509.MarshalPKCS1PrivateKey(privateKey)</strong> 这行代码的作用是将给定的RSA私钥（*<strong>rsa.PrivateKey</strong>类型）转换为<code>PKCS1</code>格式的字节数组。</p>\n<p><code>PKCS1</code>是一个公钥密码标准，定义了一种在RSA加密算法中使用的密钥格式。它定义了如何在二进制形式和ASCII码形式之间进行RSA密钥的编码和解码，以及如何对密钥进行加密和解密。</p>\n<p>在Go语言中，可以使用<code>x509标准库</code>的<code>MarshalPKCS1PrivateKey函数</code>将RSA私钥转换为<code>PKCS1格式</code>的字节数组。这个函数接受一个<code>*rsa.PrivateKey类型</code>的私钥作为参数，并返回一个字节数组表示该私钥的<code>PKCS1编码</code>。</p>\n<p><strong>publicKeyBytes, err :&#x3D; x509.MarshalPKIXPublicKey(publicKey)</strong> 这行代码的作用是将给定的RSA公钥（*<strong>rsa.PublicKey</strong>类型）转换为<code>PKIX</code>格式的字节数组。</p>\n<p><code>PKIX</code>是一种公钥基础设施标准，定义了证书和公钥的格式和交互方式。它提供了一种通用的公钥证书结构，适用于多种密码算法和应用场景。</p>\n<p>在Go语言中，可以使用<code>x509标准库</code>的<code>MarshalPKIXPublicKey函数</code>将RSA公钥转换为<code>PKIX格式</code>的字节数组。这个函数接受一个<code>*rsa.PublicKey类型</code>的公钥作为参数，并返回一个字节数组表示该公钥的<code>PKIX编码</code>。</p>\n<h4 id=\"1-6-数字签名\"><a href=\"#1-6-数字签名\" class=\"headerlink\" title=\"1.6 数字签名\"></a>1.6 数字签名</h4><h5 id=\"1-6-1-数字签名介绍\"><a href=\"#1-6-1-数字签名介绍\" class=\"headerlink\" title=\"1.6.1 数字签名介绍\"></a>1.6.1 数字签名介绍</h5><p>数字签名是一种用于验证数据完整性和身份认证的技术。它基于公钥密码学的原理，通过使用私钥对数据进行加密生成签名，然后使用对应的公钥对签名进行解密验证。</p>\n<p>数字签名的过程如下：</p>\n<ol>\n<li>数据发送者使用私钥对要签名的数据进行加密运算，生成签名。</li>\n<li>数据发送者将签名与原始数据一起发送给接收者。</li>\n<li>数据接收者使用相同的公钥对签名进行解密运算，得到原始数据的哈希值。</li>\n<li>数据接收者计算接收到的原始数据的哈希值。</li>\n<li>数据接收者将两个哈希值进行比较，如果相等，则说明数据完整且未被篡改，并可以确认发送者的身份。</li>\n</ol>\n<p>通过数字签名，接收者可以验证数据的完整性，并确保数据来自于拥有私钥的发送者。即使在数据传输过程中被篡改，也能通过验证步骤的不匹配来检测到数据的篡改。</p>\n<p>数字签名在信息安全领域有广泛的应用，例如：</p>\n<ul>\n<li>网络通信：用于保护数据传输的完整性和身份认证。</li>\n<li>数字证书：用于认证网站和服务的可信度。</li>\n<li>文件完整性验证：用于验证文件在传输或存储过程中是否被修改。</li>\n<li>数字版权保护：用于验证数字内容的真实性和完整性。</li>\n</ul>\n<h5 id=\"1-6-2-go实现数字签名\"><a href=\"#1-6-2-go实现数字签名\" class=\"headerlink\" title=\"1.6.2 go实现数字签名\"></a>1.6.2 go实现数字签名</h5><ul>\n<li>私钥签名</li>\n<li>公钥验证签名</li>\n</ul>\n<h6 id=\"1-6-2-1-go实现rsa数字签名\"><a href=\"#1-6-2-1-go实现rsa数字签名\" class=\"headerlink\" title=\"1.6.2.1 go实现rsa数字签名\"></a>1.6.2.1 go实现rsa数字签名</h6><p>代码：</p>\n<div class=\"language-go\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">go</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">package</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">main</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">crypto</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">crypto/rand</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">crypto/rsa</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">crypto/sha256</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">crypto/x509</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">encoding/hex</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">encoding/pem</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">errors</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">fmt</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">os</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 生成RSA密钥对</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    privateKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> publicKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">generateRSAKeyPair</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">2048</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">生成RSA密钥对失败:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 保存私钥到文件</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    err </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">savePrivateKeyToFile</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">privateKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">private.pem</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">保存私钥到文件失败:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">私钥已保存到 private.pem 文件</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 保存公钥到文件</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    err </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">savePublicKeyToFile</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">publicKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">public.pem</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">保存公钥到文件失败:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">公钥已保存到 public.pem 文件</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 要签名的数据</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    message </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Hello, RSA!</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 计算消息的散列值</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    hashed </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> sha256</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Sum256</span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">message</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 使用私钥进行签名</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    signature</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">signWithPrivateKey</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">hashed</span><span style=\"color: #89DDFF\">[:],</span><span style=\"color: #BABED8\"> privateKey</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">签名失败:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 将签名的结果转换为16进制字符串</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    signatureHex </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> hex</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">EncodeToString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">signature</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Printf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">签名结果: </span><span style=\"color: #F07178\">%s</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> signatureHex</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 使用公钥进行验证</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    err </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">verifyWithPublicKey</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">hashed</span><span style=\"color: #89DDFF\">[:],</span><span style=\"color: #BABED8\"> signature</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> publicKey</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">验证签名失败:</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">签名验证通过</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 生成RSA密钥对</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">generateRSAKeyPair</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">keySize </span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(*</span><span style=\"color: #BABED8\">rsa</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">PrivateKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">rsa</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">PublicKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">error</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    privateKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> rsa</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">GenerateKey</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">rand</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Reader</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> keySize</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil,</span><span style=\"color: #BABED8\"> err</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    publicKey </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8\">privateKey</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">PublicKey</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> privateKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> publicKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 保存私钥到文件</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">savePrivateKeyToFile</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">privateKey </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">rsa</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">PrivateKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> filename </span><span style=\"color: #C792EA\">string</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">error</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    privateKeyBytes </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> x509</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">MarshalPKCS1PrivateKey</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">privateKey</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    privateKeyPEM </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> pem</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">EncodeToMemory</span><span style=\"color: #89DDFF\">(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8\">pem</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Block</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            Type</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">RSA PRIVATE KEY</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            Bytes</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> privateKeyBytes</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">WriteFile</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">filename</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> privateKeyPEM</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0600</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 保存公钥到文件</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">savePublicKeyToFile</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">publicKey </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">rsa</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">PublicKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> filename </span><span style=\"color: #C792EA\">string</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">error</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    publicKeyBytes</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> x509</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">MarshalPKIXPublicKey</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">publicKey</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> err</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    publicKeyPEM </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> pem</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">EncodeToMemory</span><span style=\"color: #89DDFF\">(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8\">pem</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Block</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            Type</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">PUBLIC KEY</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            Bytes</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> publicKeyBytes</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">WriteFile</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">filename</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> publicKeyPEM</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0644</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 使用私钥进行签名</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">signWithPrivateKey</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">message </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> privateKey </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">rsa</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">PrivateKey</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">error</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    signature</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> rsa</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">SignPKCS1v15</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">rand</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Reader</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> privateKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> crypto</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">SHA256</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> message</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil,</span><span style=\"color: #BABED8\"> err</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> signature</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 使用公钥进行验证</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">verifyWithPublicKey</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">message</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> signature </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> publicKey </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">rsa</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">PublicKey</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">error</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> rsa</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">VerifyPKCS1v15</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">publicKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> crypto</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">SHA256</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> message</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> signature</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> errors</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">New</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">签名验证失败</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><h6 id=\"1-6-2-2-go实现ecc数字签名\"><a href=\"#1-6-2-2-go实现ecc数字签名\" class=\"headerlink\" title=\"1.6.2.2 go实现ecc数字签名\"></a>1.6.2.2 go实现ecc数字签名</h6><p>代码：</p>\n<div class=\"language-go\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">go</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">package</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">main</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">crypto/ecdsa</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">crypto/elliptic</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">crypto/rand</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">crypto/sha256</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">crypto/x509</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">encoding/asn1</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">encoding/hex</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">encoding/pem</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">errors</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">fmt</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">math/big</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">os</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 生成公钥和私钥</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    privateKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> ecdsa</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">GenerateKey</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">elliptic</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">P256</span><span style=\"color: #89DDFF\">(),</span><span style=\"color: #BABED8\"> rand</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Reader</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">生成私钥失败：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 保存私钥到文件</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    err </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">savePrivateKeyToFile</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">privateKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">private.pem</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">保存私钥到文件失败：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">私钥已保存到 private.pem 文件</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 保存公钥到文件</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    publicKey </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8\">privateKey</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">PublicKey</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    err </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">savePublicKeyToFile</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">publicKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">public.pem</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">保存公钥到文件失败：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">公钥已保存到 public.pem 文件</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 要签名的数据</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    message </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Hello, ECC!</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 计算消息的散列值</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    hashed </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> sha256</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Sum256</span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #82AAFF\">byte</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">message</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 使用私钥进行签名</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    signature</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">signWithPrivateKey</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">hashed</span><span style=\"color: #89DDFF\">[:],</span><span style=\"color: #BABED8\"> privateKey</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">签名失败：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 将签名的结果转换为16进制字符串</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    signatureHex </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> hex</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">EncodeToString</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">signature</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Printf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">签名结果： </span><span style=\"color: #F07178\">%s</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> signatureHex</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 使用公钥进行验证</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    err </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">verifyWithPublicKey</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">hashed</span><span style=\"color: #89DDFF\">[:],</span><span style=\"color: #BABED8\"> signature</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> publicKey</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">验证签名失败：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">签名验证通过</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 保存私钥到文件</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">savePrivateKeyToFile</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">privateKey </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">ecdsa</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">PrivateKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> filename </span><span style=\"color: #C792EA\">string</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">error</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    privateKeyBytes</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> x509</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">MarshalECPrivateKey</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">privateKey</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> err</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    privateKeyPEM </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> pem</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">EncodeToMemory</span><span style=\"color: #89DDFF\">(&amp;</span><span style=\"color: #BABED8\">pem</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Block</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        Type</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">EC PRIVATE KEY</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        Bytes</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> privateKeyBytes</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">WriteFile</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">filename</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> privateKeyPEM</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0600</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 保存公钥到文件</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">savePublicKeyToFile</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">publicKey </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">ecdsa</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">PublicKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> filename </span><span style=\"color: #C792EA\">string</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">error</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    publicKeyBytes</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> x509</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">MarshalPKIXPublicKey</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">publicKey</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> err</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    publicKeyPEM </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> pem</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">EncodeToMemory</span><span style=\"color: #89DDFF\">(&amp;</span><span style=\"color: #BABED8\">pem</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Block</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        Type</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">PUBLIC KEY</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        Bytes</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> publicKeyBytes</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> os</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">WriteFile</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">filename</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> publicKeyPEM</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0644</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 使用私钥进行签名</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">signWithPrivateKey</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">message </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> privateKey </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">ecdsa</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">PrivateKey</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">([]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">error</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    r</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> ecdsa</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Sign</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">rand</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Reader</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> privateKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> message</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil,</span><span style=\"color: #BABED8\"> err</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    signature</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> asn1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Marshal</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">ecdsaSignature</span><span style=\"color: #89DDFF\">&#123;</span><span style=\"color: #BABED8\">r</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> s</span><span style=\"color: #89DDFF\">&#125;)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil,</span><span style=\"color: #BABED8\"> err</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> signature</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 使用公钥进行验证</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">verifyWithPublicKey</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">message</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> signature </span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #C792EA\">byte</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> publicKey </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">ecdsa</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">PublicKey</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">error</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">var</span><span style=\"color: #BABED8\"> sig ecdsaSignature</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    _</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> asn1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Unmarshal</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">signature</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8\">sig</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> err</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">!</span><span style=\"color: #BABED8\">ecdsa</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Verify</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">publicKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> message</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> sig</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">R</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> sig</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">S</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> errors</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">New</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">签名验证失败</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">type</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">ecdsaSignature</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">struct</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    R</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> S </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">big</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Int</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p>Article link： <a href=\"https://tqgoblin.site/post/csdn/go%E8%AF%AD%E8%A8%80--%E5%8C%BA%E5%9D%97%E9%93%BE%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/\">https://tqgoblin.site/post/csdn/go语言--区块链学习（一）/</a> <div align=left> Author：<a href=\"https://www.tqgoblin.site\"> Stephen </a> </div></p>\n","text":" 温馨跳转链接：模块二：go语言–区块链学习（二）-CSDN博客温馨跳转链接：模块三：go语言–区块链学习（三）-CSDN博客 文章目录 模块一：密码学 1.1...","permalink":"/post/csdn/go语言--区块链学习（一）","photos":[],"count_time":{"symbolsCount":"32k","symbolsTime":"29 mins."},"categories":[{"name":"区块链学习","slug":"区块链学习","count":8,"path":"api/categories/区块链学习.json"}],"tags":[{"name":"golang 区块链 密码学","slug":"golang-区块链-密码学","count":1,"path":"api/tags/golang-区块链-密码学.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">文章目录</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E5%9D%97%E4%B8%80%EF%BC%9A%E5%AF%86%E7%A0%81%E5%AD%A6\"><span class=\"toc-text\">模块一：密码学</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-1-%E5%AF%86%E7%A0%81%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">1.1 密码介绍</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-1-1-%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%8A%A0%E5%AF%86-%EF%BC%9F\"><span class=\"toc-text\">1.1.1 为什么要加密 ？</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-1-2-%E5%B8%B8%E8%A7%81%E7%9A%84%E5%87%A0%E7%A7%8D%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">1.1.2 常见的几种加密算法</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-1-3-%E5%8A%A0%E5%AF%86%E4%B8%89%E8%A6%81%E7%B4%A0\"><span class=\"toc-text\">1.1.3 加密三要素</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-%E7%BC%96%E7%A0%81%E8%A7%A3%E7%A0%81\"><span class=\"toc-text\">1.2 编码解码</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-2-1-%E5%B8%B8%E8%A7%81%E7%9A%84%E5%87%A0%E7%A7%8D%E7%BC%96%E7%A0%81\"><span class=\"toc-text\">1.2.1 常见的几种编码</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-2-2-go%E5%AE%9E%E7%8E%B0base64%E7%BC%96%E7%A0%81%E3%80%81%E8%A7%A3%E7%A0%81\"><span class=\"toc-text\">1.2.2 go实现base64编码、解码</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-2-3-go%E5%AE%9E%E7%8E%B0base58%E7%BC%96%E7%A0%81%E3%80%81%E8%A7%A3%E7%A0%81\"><span class=\"toc-text\">1.2.3 go实现base58编码、解码</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-3-%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">1.3 哈希算法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-3-1-%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">1.3.1 特点</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-3-2-%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%A0%E7%A7%8D%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">1.3.2 常用的几种哈希算法</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-3-3-go%E5%AE%9E%E7%8E%B0%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95%E4%B8%BE%E4%BE%8B\"><span class=\"toc-text\">1.3.3 go实现哈希算法举例</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#1-3-3-1-go%E5%AE%9E%E7%8E%B0md4%E5%8A%A0%E5%AF%86\"><span class=\"toc-text\">1.3.3.1 go实现md4加密</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#1-3-3-2-go%E5%AE%9E%E7%8E%B0md5%E5%8A%A0%E5%AF%86\"><span class=\"toc-text\">1.3.3.2 go实现md5加密</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#1-3-3-3-go%E5%AE%9E%E7%8E%B0sha256%E5%8A%A0%E5%AF%86\"><span class=\"toc-text\">1.3.3.3 go实现sha256加密</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-4-%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86\"><span class=\"toc-text\">1.4 对称加密</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-4-1-%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">1.4.1 特点</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-4-2-%E4%BC%98%E7%82%B9\"><span class=\"toc-text\">1.4.2 优点</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-4-3-%E7%BC%BA%E7%82%B9\"><span class=\"toc-text\">1.4.3 缺点</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-4-4-%E5%9C%BA%E6%99%AF%E5%88%86%E6%9E%90\"><span class=\"toc-text\">1.4.4 场景分析</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-4-5-%E5%B8%B8%E8%A7%81%E7%9A%84%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">1.4.5 常见的对称加密方式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#1-4-5-1-go%E5%AE%9E%E7%8E%B0des%E5%8A%A0%E5%AF%86\"><span class=\"toc-text\">1.4.5.1 go实现des加密</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#1-4-5-2-go%E5%AE%9E%E7%8E%B03des%E5%8A%A0%E5%AF%86\"><span class=\"toc-text\">1.4.5.2 go实现3des加密</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#1-4-5-3-go%E5%AE%9E%E7%8E%B0aes%E5%8A%A0%E5%AF%86\"><span class=\"toc-text\">1.4.5.3 go实现aes加密</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-5-%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86\"><span class=\"toc-text\">1.5 非对称加密</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-5-1-%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">1.5.1 特点</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-5-2-%E4%BC%98%E7%82%B9\"><span class=\"toc-text\">1.5.2 优点</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-5-3-%E7%BC%BA%E7%82%B9\"><span class=\"toc-text\">1.5.3 缺点</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-5-4-%E5%9C%BA%E6%99%AF%E5%88%86%E6%9E%90\"><span class=\"toc-text\">1.5.4 场景分析</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-5-5-%E5%B8%B8%E8%A7%81%E7%9A%84%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">1.5.5 常见的非对称加密方式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#1-5-5-1-go%E5%AE%9E%E7%8E%B0rsa%E5%8A%A0%E5%AF%86\"><span class=\"toc-text\">1.5.5.1 go实现rsa加密</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-6-%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D\"><span class=\"toc-text\">1.6 数字签名</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-6-1-%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">1.6.1 数字签名介绍</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-6-2-go%E5%AE%9E%E7%8E%B0%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D\"><span class=\"toc-text\">1.6.2 go实现数字签名</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#1-6-2-1-go%E5%AE%9E%E7%8E%B0rsa%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D\"><span class=\"toc-text\">1.6.2.1 go实现rsa数字签名</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#1-6-2-2-go%E5%AE%9E%E7%8E%B0ecc%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D\"><span class=\"toc-text\">1.6.2.2 go实现ecc数字签名</span></a></li></ol></li></ol></li></ol>","author":{"name":"Stephen","slug":"blog-author","avatar":"../img/logo.png","link":"/","description":"Love and Share","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"go语言--区块链学习（二）","uid":"61ef945e5d20aa41bcaecf2484e095db","slug":"csdn/go语言--区块链学习（二）","date":"2024-01-22T05:40:11.000Z","updated":"2025-02-17T03:14:24.936Z","comments":true,"path":"api/articles/csdn/go语言--区块链学习（二）.json","keywords":"Stephen web3","cover":null,"text":" 温馨跳转链接：模块一：go语言–区块链学习（一）-CSDN博客温馨跳转链接：模块三：go语言–区块链学习（三）-CSDN博客 文章目录 模块二：区块链和比特币...","permalink":"/post/csdn/go语言--区块链学习（二）","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"区块链学习","slug":"区块链学习","count":8,"path":"api/categories/区块链学习.json"}],"tags":[{"name":"golang 区块链 学习","slug":"golang-区块链-学习","count":1,"path":"api/tags/golang-区块链-学习.json"}],"author":{"name":"Stephen","slug":"blog-author","avatar":"../img/logo.png","link":"/","description":"Love and Share","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Tomcat组成与工作原理","uid":"df4a2b3e83ff0d1bcb88dc96e346c071","slug":"csdn/Tomcat组成与工作原理","date":"2023-10-10T14:43:18.000Z","updated":"2025-02-17T01:58:21.606Z","comments":true,"path":"api/articles/csdn/Tomcat组成与工作原理.json","keywords":"Stephen web3","cover":[],"text":" 目录 什么是tomcat Servlet容器 Servlet生命周期 Tomcat各类Connector对比 什么是tomcat开源的 Java Web 应用...","permalink":"/post/csdn/Tomcat组成与工作原理","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"面试","slug":"面试","count":5,"path":"api/categories/面试.json"}],"tags":[{"name":"tomcat java","slug":"tomcat-java","count":1,"path":"api/tags/tomcat-java.json"}],"author":{"name":"Stephen","slug":"blog-author","avatar":"../img/logo.png","link":"/","description":"Love and Share","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}