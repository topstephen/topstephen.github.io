{"title":"Hive详解","uid":"2ea5b3e3cf982dd223319a88f2e53a29","slug":"csdn/Hive详解","date":"2023-02-06T03:50:49.000Z","updated":"2025-02-17T01:58:21.589Z","comments":true,"path":"api/articles/csdn/Hive详解.json","keywords":"Stephen web3","cover":[],"content":"<link rel=\"stylesheet\" href=\"/owl.css\"><link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><span id=\"more\"></span>\n\n<p><strong>目录</strong></p>\n<p><a href=\"#%E7%AC%AC1%E7%AB%A0%C2%A0Hive%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\">第1章 Hive基本概念</a></p>\n<p><a href=\"#1.1%20%E4%BB%80%E4%B9%88%E6%98%AFHive\">1.1 什么是Hive</a></p>\n<p><a href=\"#1.2%20Hive%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9\">1.2 Hive的优缺点</a></p>\n<p><a href=\"#1.2.1%20%E4%BC%98%E7%82%B9\">1.2.1 优点</a></p>\n<p><a href=\"#1.2.2%20%E7%BC%BA%E7%82%B9\">1.2.2 缺点</a></p>\n<p><a href=\"#1.3%20Hive%E6%9E%B6%E6%9E%84%E5%8E%9F%E7%90%86\">1.3 Hive架构原理</a></p>\n<p><a href=\"#1.4%20Hive%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E6%AF%94%E8%BE%83\">1.4 Hive和数据库比较</a></p>\n<p><a href=\"#1.4.1%20%E6%9F%A5%E8%AF%A2%E8%AF%AD%E8%A8%80\">1.4.1 查询语言</a></p>\n<p><a href=\"#1.4.2%20%E6%95%B0%E6%8D%AE%E6%9B%B4%E6%96%B0\">1.4.2 数据更新</a></p>\n<p><a href=\"#1.4.3%20%E6%89%A7%E8%A1%8C%E5%BB%B6%E8%BF%9F\">1.4.3 执行延迟</a></p>\n<p><a href=\"#1.4.4%20%E6%95%B0%E6%8D%AE%E8%A7%84%E6%A8%A1\">1.4.4 数据规模</a></p>\n<p><a href=\"#%E7%AC%AC2%E7%AB%A0%20Hive%E5%AE%89%E8%A3%85\">第2章 Hive安装</a></p>\n<p><a href=\"#2.1%20Hive%E7%9A%84%E5%AE%89%E8%A3%85%E5%9C%B0%E5%9D%80\">2.1 Hive的安装地址</a></p>\n<p><a href=\"#2.2%20Hive%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2\">2.2 Hive安装部署</a></p>\n<p><a href=\"#2.3%20%E5%B0%86%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E5%AF%BC%E5%85%A5Hive%E6%A1%88%E4%BE%8B\">2.3 将本地文件导入Hive案例</a></p>\n<p><a href=\"#2.4%20%C2%A0MySql%E5%AE%89%E8%A3%85\">2.4  MySql安装</a></p>\n<p><a href=\"#2.5%20Hive%20%E5%85%83%E6%95%B0%E6%8D%AE%E9%85%8D%E7%BD%AE%E5%88%B0%C2%A0MySql\">2.5 Hive 元数据配置到 MySql</a></p>\n<p><a href=\"#2.5.1%20%E9%A9%B1%E5%8A%A8%E6%8B%B7%E8%B4%9D\">2.5.1 驱动拷贝</a></p>\n<p><a href=\"#2.5.2%20%E9%85%8D%E7%BD%AE%C2%A0Metastore%20%E5%88%B0%20MySql\">2.5.2 配置 Metastore 到 MySql</a></p>\n<p><a href=\"#2.5.3%20%E5%A4%9A%E7%AA%97%E5%8F%A3%E5%90%AF%E5%8A%A8%C2%A0Hive%20%E6%B5%8B%E8%AF%95\">2.5.3 多窗口启动 Hive 测试</a></p>\n<p><a href=\"#2.6%20HiveJDBC%E8%AE%BF%E9%97%AE\">2.6 HiveJDBC访问</a></p>\n<p><a href=\"#2.6.1%20%E5%90%AF%E5%8A%A8%20hiveserver2%20%E6%9C%8D%E5%8A%A1\">2.6.1 启动 hiveserver2 服务</a></p>\n<p><a href=\"#2.6.2%20%E5%90%AF%E5%8A%A8%20beeline\">2.6.2 启动 beeline</a></p>\n<p><a href=\"#2.6.3%20%E8%BF%9E%E6%8E%A5%C2%A0hiveserver2\">2.6.3 连接 hiveserver2</a></p>\n<p><a href=\"#2.7%20Hive%E5%B8%B8%E7%94%A8%E4%BA%A4%E4%BA%92%E5%91%BD%E4%BB%A4\">2.7 Hive常用交互命令</a></p>\n<p><a href=\"#2.8%20Hive%E5%85%B6%E4%BB%96%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C\">2.8 Hive其他命令操作</a></p>\n<p><a href=\"#2.9%20Hive%E5%B8%B8%E8%A7%81%E5%B1%9E%E6%80%A7%E9%85%8D%E7%BD%AE\">2.9 Hive常见属性配置</a></p>\n<p><a href=\"#2.9.1%20Hive%20%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E4%BD%8D%E7%BD%AE%E9%85%8D%E7%BD%AE\">2.9.1 Hive 数据仓库位置配置</a></p>\n<p><a href=\"#2.9.2%20%E6%9F%A5%E8%AF%A2%E5%90%8E%E4%BF%A1%E6%81%AF%E6%98%BE%E7%A4%BA%E9%85%8D%E7%BD%AE\">2.9.2 查询后信息显示配置</a></p>\n<p><a href=\"#2.9.3%20Hive%20%E8%BF%90%E8%A1%8C%E6%97%A5%E5%BF%97%E4%BF%A1%E6%81%AF%E9%85%8D%E7%BD%AE\">2.9.3 Hive 运行日志信息配置</a></p>\n<p><a href=\"#2.9.4%20%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F\">2.9.4 参数配置方式</a></p>\n<p><a href=\"#%E7%AC%AC3%20%E7%AB%A0%20Hive%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\">第3 章 Hive数据类型</a></p>\n<p><a href=\"#3.2%20%E9%9B%86%E5%90%88%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\">3.2 集合数据类型</a></p>\n<p><a href=\"#3.3%20%E7%B1%BB%E5%9E%8B%E8%BD%AC%E5%8C%96\">3.3 类型转化</a></p>\n<p><a href=\"#%E7%AC%AC%E5%9B%9B%E7%AB%A0%20DDL%E6%95%B0%E6%8D%AE%E5%AE%9A%E4%B9%89\">第4章 DDL数据定义</a></p>\n<p><a href=\"#4.1%20%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93\">4.1 创建数据库</a></p>\n<p><a href=\"#4.2%20%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE%E5%BA%93\">4.2 查询数据库</a></p>\n<p><a href=\"#4.2.1%20%E6%98%BE%E7%A4%BA%E6%95%B0%E6%8D%AE%E5%BA%93\">4.2.1 显示数据库</a></p>\n<p><a href=\"#4.2.2%20%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%A6%E6%83%85\">4.2.2 查看数据库详情</a></p>\n<p><a href=\"#4.2.3%20%E5%88%87%E6%8D%A2%E5%BD%93%E5%89%8D%E6%95%B0%E6%8D%AE%E5%BA%93\">4.2.3 切换当前数据库</a></p>\n<p><a href=\"#4.3%20%E4%BF%AE%E6%94%B9%E6%95%B0%E6%8D%AE%E5%BA%93\">4.3 修改数据库</a></p>\n<p><a href=\"#4.4%20%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE%E5%BA%93\">4.4 删除数据库</a></p>\n<p><a href=\"#4.5%20%E5%88%9B%E5%BB%BA%E8%A1%A8\">4.5 创建表</a></p>\n<p><a href=\"#4.5.1%20%E7%AE%A1%E7%90%86%E8%A1%A8\">4.5.1 管理表</a></p>\n<p><a href=\"#4.5.2%20%E5%A4%96%E9%83%A8%E8%A1%A8\">4.5.2 外部表</a></p>\n<p><a href=\"#4.5.3%20%E7%AE%A1%E7%90%86%E8%A1%A8%E4%B8%8E%E5%A4%96%E9%83%A8%E8%A1%A8%E7%9A%84%E4%BA%92%E7%9B%B8%E8%BD%AC%E6%8D%A2\">4.5.3 管理表与外部表的互相转换</a></p>\n<p><a href=\"#4.6%20%E4%BF%AE%E6%94%B9%E8%A1%A8\">4.6 修改表</a></p>\n<p><a href=\"#4.6.1%20%E9%87%8D%E5%91%BD%E5%90%8D%E8%A1%A8\">4.6.1 重命名表</a></p>\n<p><a href=\"#4.6.2%20%E5%A2%9E%E5%8A%A0%E3%80%81%E4%BF%AE%E6%94%B9%E5%92%8C%E5%88%A0%E9%99%A4%E8%A1%A8%E5%88%86%E5%8C%BA\">4.6.2 增加、修改和删除表分区</a></p>\n<p><a href=\"#4.6.3%20%E5%A2%9E%E5%8A%A0/%E4%BF%AE%E6%94%B9/%E6%9B%BF%E6%8D%A2%E5%88%97%E4%BF%A1%E6%81%AF\">4.6.3 增加&#x2F;修改&#x2F;替换列信息</a></p>\n<p><a href=\"#4.7%20%E5%88%A0%E9%99%A4%E8%A1%A8\">4.7 删除表</a></p>\n<p><a href=\"#%E7%AC%AC%E4%BA%94%E7%AB%A0%20DML%20%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C\">第5章 DML 数据操作</a></p>\n<p><a href=\"#5.1%20%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5\">5.1 数据导入</a></p>\n<p><a href=\"#5.1.1%20%E5%90%91%E8%A1%A8%E4%B8%AD%E8%A3%85%E8%BD%BD%E6%95%B0%E6%8D%AE%EF%BC%88Load%EF%BC%89\">5.1.1 向表中装载数据（Load）</a></p>\n<p><a href=\"#5.1.2%20%E9%80%9A%E8%BF%87%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5%E5%90%91%E8%A1%A8%E4%B8%AD%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE%EF%BC%88Insert%EF%BC%89\">5.1.2 通过查询语句向表中插入数据（Insert）</a></p>\n<p><a href=\"#5.1.3%20%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5%E4%B8%AD%E5%88%9B%E5%BB%BA%E8%A1%A8%E5%B9%B6%E5%8A%A0%E8%BD%BD%E6%95%B0%E6%8D%AE%EF%BC%88As%20Select%EF%BC%89\">5.1.3 查询语句中创建表并加载数据（As Select）</a></p>\n<p><a href=\"#5.1.4%20%E5%88%9B%E5%BB%BA%E8%A1%A8%E6%97%B6%E9%80%9A%E8%BF%87%20Location%20%E6%8C%87%E5%AE%9A%E5%8A%A0%E8%BD%BD%E6%95%B0%E6%8D%AE%E8%B7%AF%E5%BE%84\">5.1.4 创建表时通过 Location 指定加载数据路径</a></p>\n<p><a href=\"#5.1.5%20Import%20%E6%95%B0%E6%8D%AE%E5%88%B0%E6%8C%87%E5%AE%9A%20Hive%20%E8%A1%A8%E4%B8%AD\">5.1.5 Import 数据到指定 Hive 表中</a></p>\n<p><a href=\"#5.2%20%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA\">5.2 数据导出</a></p>\n<p><a href=\"#5.2.1%20Insert%20%E5%AF%BC%E5%87%BA\">5.2.1 Insert 导出</a></p>\n<p><a href=\"#5.2.2%20Hadoop%20%E5%91%BD%E4%BB%A4%E5%AF%BC%E5%87%BA%E5%88%B0%E6%9C%AC%E5%9C%B0\">5.2.2 Hadoop 命令导出到本地</a></p>\n<p><a href=\"#5.2.3%20Hive%20Shell%20%E5%91%BD%E4%BB%A4%E5%AF%BC%E5%87%BA\">5.2.3 Hive Shell 命令导出</a></p>\n<p><a href=\"#5.2.4%20Export%20%E5%AF%BC%E5%87%BA%E5%88%B0%20HDFS%20%E4%B8%8A\">5.2.4 Export 导出到 HDFS 上</a></p>\n<p><a href=\"#5.2.5%20Sqoop%20%E5%AF%BC%E5%87%BA\">5.2.5 Sqoop 导出</a></p>\n<p><a href=\"#5.2.6%20%E6%B8%85%E9%99%A4%E8%A1%A8%E4%B8%AD%E6%95%B0%E6%8D%AE%EF%BC%88Truncate%EF%BC%89\">5.2.6 清除表中数据（Truncate）</a></p>\n<p><a href=\"#%E7%AC%AC%206%20%E7%AB%A0%20%E6%9F%A5%E8%AF%A2\">第 6 章 查询</a></p>\n<p><a href=\"#6.1%20%E5%9F%BA%E6%9C%AC%E6%9F%A5%E8%AF%A2%EF%BC%88Select%E2%80%A6From%EF%BC%89\">6.1 基本查询（Select…From）</a></p>\n<p><a href=\"#6.1.1%20%E5%85%A8%E8%A1%A8%E5%92%8C%E7%89%B9%E5%AE%9A%E5%88%97%E6%9F%A5%E8%AF%A2\">6.1.1 全表和特定列查询</a></p>\n<p><a href=\"#6.1.2%20%E5%88%97%E5%88%AB%E5%90%8D\">6.1.2 列别名</a></p>\n<p><a href=\"#6.1.3%20%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6\">6.1.3 算术运算符</a></p>\n<p><a href=\"#6.1.4%20%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0\">6.1.4 常用函数</a></p>\n<p><a href=\"#6.1.5%20Limit%20%E8%AF%AD%E5%8F%A5\">6.1.5 Limit 语句</a></p>\n<p><a href=\"#6.1.6%20Where%20%E8%AF%AD%E5%8F%A5\">6.1.6 Where 语句</a></p>\n<p><a href=\"#6.1.7%20%E6%AF%94%E8%BE%83%E8%BF%90%E7%AE%97%E7%AC%A6%EF%BC%88Between/In/%20Is%20Null%EF%BC%89\">6.1.7 比较运算符（Between&#x2F;In&#x2F; Is Null）</a></p>\n<p><a href=\"#6.1.8%20Like%20%E5%92%8C%20RLike\">6.1.8 Like 和 RLike</a></p>\n<p><a href=\"#6.1.9%20%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6%EF%BC%88And/Or/Not%EF%BC%89%C2%A0\">6.1.9 逻辑运算符（And&#x2F;Or&#x2F;Not） </a></p>\n<p><a href=\"#6.2%20%E5%88%86%E7%BB%84\">6.2 分组</a></p>\n<p><a href=\"#6.2.1%20Group%20By%20%E8%AF%AD%E5%8F%A5\">6.2.1 Group By 语句</a></p>\n<p><a href=\"#6.2.2%20Having%20%E8%AF%AD%E5%8F%A5\">6.2.2 Having 语句</a></p>\n<p><a href=\"#6.3%20Join%20%E8%AF%AD%E5%8F%A5\">6.3 Join 语句</a></p>\n<p><a href=\"#6.3.1%20%E7%AD%89%E5%80%BC%20Join\">6.3.1 等值 Join</a></p>\n<p><a href=\"#6.3.2%20%E8%A1%A8%E7%9A%84%E5%88%AB%E5%90%8D\">6.3.2 表的别名</a></p>\n<p><a href=\"#6.3.3%20%E5%86%85%E8%BF%9E%E6%8E%A5\">6.3.3 内连接</a></p>\n<p><a href=\"#6.3.4%20%E5%B7%A6%E5%A4%96%E8%BF%9E%E6%8E%A5\">6.3.4 左外连接</a></p>\n<p><a href=\"#6.3.5%20%E5%8F%B3%E5%A4%96%E8%BF%9E%E6%8E%A5\">6.3.5 右外连接</a></p>\n<p><a href=\"#6.3.6%20%E6%BB%A1%E5%A4%96%E8%BF%9E%E6%8E%A5\">6.3.6 满外连接</a></p>\n<p><a href=\"#6.3.7%20%E5%A4%9A%E8%A1%A8%E8%BF%9E%E6%8E%A5\">6.3.7 多表连接</a></p>\n<p><a href=\"#6.3.8%20%E7%AC%9B%E5%8D%A1%E5%B0%94%E7%A7%AF\">6.3.8 笛卡尔积</a></p>\n<p><a href=\"#6.4%20%E6%8E%92%E5%BA%8F\">6.4 排序</a></p>\n<p><a href=\"#6.4.1%20%E5%85%A8%E5%B1%80%E6%8E%92%E5%BA%8F%EF%BC%88Order%20By%EF%BC%89%C2%A0\">6.4.1 全局排序（Order By） </a></p>\n<p><a href=\"#6.4.2%20%E6%8C%89%E7%85%A7%E5%88%AB%E5%90%8D%E6%8E%92%E5%BA%8F%C2%A0\">6.4.2 按照别名排序 </a></p>\n<p><a href=\"#6.4.3%20%E5%A4%9A%E4%B8%AA%E5%88%97%E6%8E%92%E5%BA%8F\">6.4.3 多个列排序</a></p>\n<p><a href=\"#6.4.4%20%E6%AF%8F%E4%B8%AA%20Reduce%20%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F%EF%BC%88Sort%20By%EF%BC%89\">6.4.4 每个 Reduce 内部排序（Sort By）</a></p>\n<p><a href=\"#6.4.5%20%E5%88%86%E5%8C%BA%EF%BC%88Distribute%20By%EF%BC%89\">6.4.5 分区（Distribute By）</a></p>\n<p><a href=\"#6.4.6%20Cluster%20By\">6.4.6 Cluster By</a></p>\n<p><a href=\"#%E7%AC%AC%207%20%E7%AB%A0%20%E5%88%86%E5%8C%BA%E8%A1%A8%E5%92%8C%E5%88%86%E6%A1%B6%E8%A1%A8\">第 7 章 分区表和分桶表</a></p>\n<p><a href=\"#7.1%20%E5%88%86%E5%8C%BA%E8%A1%A8\">7.1 分区表</a></p>\n<p><a href=\"#7.1.1%20%E5%88%86%E5%8C%BA%E8%A1%A8%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C\">7.1.1 分区表基本操作</a></p>\n<p><a href=\"#7.1.2%20%E4%BA%8C%E7%BA%A7%E5%88%86%E5%8C%BA\">7.1.2 二级分区</a></p>\n<p><a href=\"#7.1.3%20%E5%8A%A8%E6%80%81%E5%88%86%E5%8C%BA%E8%B0%83%E6%95%B4\">7.1.3 动态分区调整</a></p>\n<p><a href=\"#7.2%20%E5%88%86%E6%A1%B6%E8%A1%A8\">7.2 分桶表</a></p>\n<p><a href=\"#7.3%20%E6%8A%BD%E6%A0%B7%E6%9F%A5%E8%AF%A2\">7.3 抽样查询</a></p>\n<p><a href=\"#%E7%AC%AC%208%20%E7%AB%A0%20%E5%87%BD%E6%95%B0\">第 8 章 函数</a></p>\n<p><a href=\"#8.1%20%E7%B3%BB%E7%BB%9F%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0\">8.1 系统内置函数</a></p>\n<p><a href=\"#8.2%20%E5%B8%B8%E7%94%A8%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0\">8.2 常用内置函数</a></p>\n<p><a href=\"#8.2.1%20%E7%A9%BA%E5%AD%97%E6%AE%B5%E8%B5%8B%E5%80%BC\">8.2.1 空字段赋值</a></p>\n<p><a href=\"#8.2.2%20CASE%20WHEN%20THEN%20ELSE%20END\">8.2.2 CASE WHEN THEN ELSE END</a></p>\n<p><a href=\"#8.2.3%20%E8%A1%8C%E8%BD%AC%E5%88%97\">8.2.3 行转列</a></p>\n<p><a href=\"#8.2.4%20%E5%88%97%E8%BD%AC%E8%A1%8C\">8.2.4 列转行</a></p>\n<p><a href=\"#8.2.5%20%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0%EF%BC%88%E5%BC%80%E7%AA%97%E5%87%BD%E6%95%B0%EF%BC%89\">8.2.5 窗口函数（开窗函数）</a></p>\n<p><a href=\"#8.2.6%20Rank\">8.2.6 Rank</a></p>\n<p><a href=\"#8.4%20%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0\">8.4 自定义函数</a></p>\n<p><a href=\"#%E7%AC%AC%209%E7%AB%A0%20%E5%8E%8B%E7%BC%A9%E5%92%8C%E5%AD%98%E5%82%A8\">第 9章 压缩和存储</a></p>\n<p><a href=\"#9.1%20Hadoop%20%E5%8E%8B%E7%BC%A9%E9%85%8D%E7%BD%AE\">9.1 Hadoop 压缩配置</a></p>\n<p><a href=\"#9.1.1%20MR%20%E6%94%AF%E6%8C%81%E7%9A%84%E5%8E%8B%E7%BC%A9%E7%BC%96%E7%A0%81\">9.1.1 MR 支持的压缩编码</a></p>\n<p><a href=\"#9.1.2%20%E5%8E%8B%E7%BC%A9%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE\">9.1.2 压缩参数配置</a></p>\n<p><a href=\"#9.2%20%E5%BC%80%E5%90%AF%20Map%20%E8%BE%93%E5%87%BA%E9%98%B6%E6%AE%B5%E5%8E%8B%E7%BC%A9%EF%BC%88MR%20%E5%BC%95%E6%93%8E%EF%BC%89\">9.2 开启 Map 输出阶段压缩（MR 引擎）</a></p>\n<p><a href=\"#9.4%20%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8%E6%A0%BC%E5%BC%8F\">9.4 文件存储格式</a></p>\n<p><a href=\"#9.4.1%20%E5%88%97%E5%BC%8F%E5%AD%98%E5%82%A8%E5%92%8C%E8%A1%8C%E5%BC%8F%E5%AD%98%E5%82%A8\">9.4.1 列式存储和行式存储</a></p>\n<p><a href=\"#9.4.2%20TextFile%20%E6%A0%BC%E5%BC%8F\">9.4.2 TextFile 格式</a></p>\n<p><a href=\"#9.4.3%20Orc%20%E6%A0%BC%E5%BC%8F\">9.4.3 Orc 格式</a></p>\n<p><a href=\"#9.4.4%20Parquet%20%E6%A0%BC%E5%BC%8F\">9.4.4 Parquet 格式</a></p>\n<p><a href=\"#9.4.5%20%E4%B8%BB%E6%B5%81%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8%E6%A0%BC%E5%BC%8F%E5%AF%B9%E6%AF%94%E5%AE%9E%E9%AA%8C\">9.4.5 主流文件存储格式对比实验</a></p>\n<p><a href=\"#9.5%20%E5%AD%98%E5%82%A8%E5%92%8C%E5%8E%8B%E7%BC%A9%E7%BB%93%E5%90%88\">9.5 存储和压缩结合</a></p>\n<p><a href=\"#9.5.1%20%E6%B5%8B%E8%AF%95%E5%AD%98%E5%82%A8%E5%92%8C%E5%8E%8B%E7%BC%A9\">9.5.1 测试存储和压缩</a></p>\n<p><a href=\"#%E7%AC%AC10%E7%AB%A0%20%E4%BC%81%E4%B8%9A%E7%BA%A7%E8%B0%83%E4%BC%98\">第10章 企业级调优</a></p>\n<p><a href=\"#10.1%20%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92%EF%BC%88Explain%EF%BC%89\">10.1 执行计划（Explain）</a></p>\n<p><a href=\"#10.2%20Fetch%20%E6%8A%93%E5%8F%96\">10.2 Fetch 抓取</a></p>\n<p><a href=\"#10.3%20%E6%9C%AC%E5%9C%B0%E6%A8%A1%E5%BC%8F\">10.3 本地模式</a></p>\n<p><a href=\"#10.4%20%E8%A1%A8%E7%9A%84%E4%BC%98%E5%8C%96\">10.4 表的优化</a></p>\n<p><a href=\"#10.4.1%20%E5%B0%8F%E8%A1%A8%E5%A4%A7%E8%A1%A8%20Join%EF%BC%88MapJOIN%EF%BC%89\">10.4.1 小表大表 Join（MapJOIN）</a></p>\n<p><a href=\"#10.4.2%20%E5%A4%A7%E8%A1%A8%20Join%20%E5%A4%A7%E8%A1%A8\">10.4.2 大表 Join 大表</a></p>\n<p><a href=\"#10.4.3%20Group%20By\">10.4.3 Group By</a></p>\n<p><a href=\"#10.4.4%20Count(Distinct)%20%E5%8E%BB%E9%87%8D%E7%BB%9F%E8%AE%A1\">10.4.4 Count(Distinct) 去重统计</a></p>\n<p><a href=\"#10.4.5%20%E7%AC%9B%E5%8D%A1%E5%B0%94%E7%A7%AF\">10.4.5 笛卡尔积</a></p>\n<p><a href=\"#10.4.6%20%E8%A1%8C%E5%88%97%E8%BF%87%E6%BB%A4\">10.4.6 行列过滤</a></p>\n<p><a href=\"#10.4.7%20%E5%88%86%E5%8C%BA\">10.4.7 分区</a></p>\n<p><a href=\"#10.4.8%20%E5%88%86%E6%A1%B6\">10.4.8 分桶</a></p>\n<p><a href=\"#10.5%20%E5%90%88%E7%90%86%E8%AE%BE%E7%BD%AE%20Map%20%E5%8F%8A%20Reduce%20%E6%95%B0\">10.5 合理设置 Map 及 Reduce 数</a></p>\n<p><a href=\"#10.5.1%20%E5%A4%8D%E6%9D%82%E6%96%87%E4%BB%B6%E5%A2%9E%E5%8A%A0%20Map%20%E6%95%B0\">10.5.1 复杂文件增加 Map 数</a></p>\n<p><a href=\"#10.5.2%20%E5%B0%8F%E6%96%87%E4%BB%B6%E8%BF%9B%E8%A1%8C%E5%90%88%E5%B9%B6\">10.5.2 小文件进行合并</a></p>\n<p><a href=\"#10.5.3%20%E5%90%88%E7%90%86%E8%AE%BE%E7%BD%AE%20Reduce%20%E6%95%B0\">10.5.3 合理设置 Reduce 数</a></p>\n<p><a href=\"#10.6%20%E5%B9%B6%E8%A1%8C%E6%89%A7%E8%A1%8C\">10.6 并行执行</a></p>\n<p><a href=\"#10.7%20%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F\">10.7 严格模式</a></p>\n<p><a href=\"#10.8%20JVM%20%E9%87%8D%E7%94%A8\">10.8 JVM 重用</a></p>\n<p><a href=\"#10.9%20%E5%8E%8B%E7%BC%A9\">10.9 压缩</a></p>\n<hr>\n<h2 id=\"第1章-Hive基本概念\"><a href=\"#第1章-Hive基本概念\" class=\"headerlink\" title=\"第1章** Hive基本概念******\"></a><strong><strong><strong>第</strong></strong></strong><strong>1</strong><strong><strong><strong>章</strong></strong></strong>** Hive基本概念******</h2><h3 id=\"1-1-什么是Hive\"><a href=\"#1-1-什么是Hive\" class=\"headerlink\" title=\"1.1 什么是Hive\"></a><strong><strong><strong>1.1 什么是Hive</strong></strong></strong></h3><p>1）hive简介</p>\n<p>Hive：由 Facebook 开源用于解决海量结构化日志的数据统计工具。</p>\n<p>Hive 是基于 Hadoop 的一个数据仓库工具，可以将结构化的数据文件 映射为一张表，并提供类SQL 查询功能。</p>\n<ol>\n<li>Hive本质：将HQL转化为Mapreduce程序</li>\n</ol>\n<p> <img src=\"https://i-blog.csdnimg.cn/blog_migrate/ea5b13b6e0165bc96cb83604a9fc3a88.png\"></p>\n<p>（1）Hive 处理的数据存储在 HDFS</p>\n<p>（2）Hive 分析数据底层的实现是 MapReduce</p>\n<p>（3）执行程序运行在 Yarn 上</p>\n<h3 id=\"1-2-Hive的优缺点\"><a href=\"#1-2-Hive的优缺点\" class=\"headerlink\" title=\"1.2 Hive的优缺点\"></a><strong><strong><strong>1.2 Hive的优缺点</strong></strong></strong></h3><h4 id=\"1-2-1-优点\"><a href=\"#1-2-1-优点\" class=\"headerlink\" title=\"1.2.1 优点\"></a><strong><strong><strong>1.2.1 优点</strong></strong></strong></h4><p>（1）操作接口采用类 SQL 语法，提供快速开发的能力（简单、容易上手）。</p>\n<p>（2）避免了去写 MapReduce，减少开发人员的学习成本。</p>\n<p>（3）Hive 的执行延迟比较高，因此 Hive 常用于数据分析，对实时性要求  不高的场合。</p>\n<p>（4）Hive 优势在于处理大数据，对于处理小数据没有优势，因为 Hive 的执行延迟比较高。</p>\n<p>（5）Hive 支持用户自定义函数，用户可以根据自己的需求来实现自己的函  数。</p>\n<h4 id=\"1-2-2-缺点\"><a href=\"#1-2-2-缺点\" class=\"headerlink\" title=\"1.2.2 缺点\"></a><strong><strong><strong>1.2.2 缺点</strong></strong></strong></h4><p><strong><strong>1</strong><strong><strong><strong>）</strong></strong></strong><strong>Hive</strong></strong> <strong><strong>的</strong></strong> <strong><strong>HQL</strong></strong> <strong><strong>表达能力有限</strong></strong></p>\n<p>（1）迭代式算法无法表达</p>\n<p>（2）数据挖掘方面不擅长，由于MapReduce数据处理流程的限制，效率更</p>\n<p>高的算法却无法实现。</p>\n<p><strong><strong>2）Hive 的效率比较低</strong></strong></p>\n<p>（1）Hive 自动生成的 MapReduce 作业，通常情况下不够智能化</p>\n<p>（2）Hive 调优比较困难，粒度较粗</p>\n<h3 id=\"1-3-Hive架构原理\"><a href=\"#1-3-Hive架构原理\" class=\"headerlink\" title=\"1.3 Hive架构原理\"></a><strong><strong><strong>1.3 Hive架构原理</strong></strong></strong></h3><p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/427272d6ad6e483100b263f24f121ca3.png\"></p>\n<p><strong><strong>1）用户接口：</strong>****<strong>Client</strong></strong></p>\n<p>CLI（command-line interface）、JDBC&#x2F;ODBC(jdbc 访问 hive)、WEBUI（浏览器访问 hive）</p>\n<p><strong>2）元数据：Metastore</strong></p>\n<p>元数据包括：表名、表所属的数据库（默认是 default）、表的拥有者、列&#x2F;分区字段、表的类型（是否是外部表）、表的数据所在目录等；</p>\n<p>默认存储在自带的 derby 数据库中，推荐使用 MySQL 存储 Metastore</p>\n<p><strong><strong>3）Hadoop</strong></strong></p>\n<p>使用 HDFS 进行存储，使用 MapReduce 进行计算。 </p>\n<p><strong><strong>4）驱动器：Driver</strong></strong></p>\n<p>（1）解析器（SQL Parser）：将 SQL 字符串转换成抽象语法树 AST，这一步一般都用第 三方工具库完成，比如 antlr；对 AST 进行语法分析，比如表是否存在、字段是否存在、SQL 语义是否有误。</p>\n<p>（2）编译器（Physical Plan）：将 AST 编译生成逻辑执行计划。</p>\n<p>（3）优化器（Query Optimizer）：对逻辑执行计划进行优化。</p>\n<p>（4）执行器（Execution）：把逻辑执行计划转换成可以运行的物理计划。对于Hive来说，就是 MR&#x2F;Spark。</p>\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/6ee7d9bc4d2f8f57d3409a0702eccce1.png\"></p>\n<p>Hive 通过给用户提供的一系列交互接口，接收到用户的指令(SQL)，使用自己的 Driver，结合元数据(MetaStore)，将这些指令翻译成 MapReduce，提交到 Hadoop 中执行，最后，将执行返回的结果输出到用户交互接口。</p>\n<h3 id=\"1-4-Hive和数据库比较\"><a href=\"#1-4-Hive和数据库比较\" class=\"headerlink\" title=\"1.4 Hive和数据库比较\"></a><strong><strong><strong>1.4 Hive和数据库比较</strong></strong></strong></h3><p>由于 Hive 采用了类似 SQL 的查询语言 HQL(Hive Query Language)，因此很容易将 Hive 理解为数据库。其实从结构上来看，Hive 和数据库除了拥有类似的查询语言，再无类似之处。</p>\n<p>本文将从多个方面来阐述 Hive 和数据库的差异。数据库可以用在 Online 的应用中，但是 Hive 是为数据仓库而设计的，清楚这一点，有助于从应用角度理解 Hive 的特性。</p>\n<h4 id=\"1-4-1-查询语言\"><a href=\"#1-4-1-查询语言\" class=\"headerlink\" title=\"1.4.1 查询语言\"></a><strong><strong><strong>1.4.1 查询语言</strong></strong></strong></h4><p>由于 SQL 被广泛的应用在数据仓库中，因此，专门针对 Hive 的特性设计了类 SQL 的查询语言 HQL。熟悉 SQL 开发的开发者可以很方便的使用 Hive 进行开发。</p>\n<h4 id=\"1-4-2-数据更新\"><a href=\"#1-4-2-数据更新\" class=\"headerlink\" title=\"1.4.2 数据更新\"></a><strong><strong><strong>1.4.2 数据更新</strong></strong></strong></h4><p>由于 Hive 是针对数据仓库应用设计的，而数据仓库的内容是读多写少的。因此，Hive 中不建议对数据的改写，所有的数据都是在加载的时候确定好的。而数据库中的数据通常是需要经常进行修改的，因此可以使用 INSERT INTO … VALUES 添加数据，使用 UPDATE … SET 修 改数据。</p>\n<h4 id=\"1-4-3-执行延迟\"><a href=\"#1-4-3-执行延迟\" class=\"headerlink\" title=\"1.4.3 执行延迟\"></a><strong><strong><strong>1.4.3 执行延迟</strong></strong></strong></h4><p>Hive 在查询数据的时候，由于没有索引，需要扫描整个表，因此延迟较高。另外一个导 致 Hive 执行延迟高的因素是 MapReduce 框架。由于 MapReduce 本身具有较高的延迟，因此 在利用 MapReduce 执行 Hive 查询时，也会有较高的延迟。相对的，数据库的执行延迟较低。 当然，这个低是有条件的，即数据规模较小，当数据规模大到超过数据库的处理能力的时候，Hive 的并行计算显然能体现出优势。</p>\n<h4 id=\"1-4-4-数据规模\"><a href=\"#1-4-4-数据规模\" class=\"headerlink\" title=\"1.4.4 数据规模\"></a><strong><strong><strong>1.4.4 数据规模</strong></strong></strong></h4><p>由于 Hive 建立在集群上并可以利用 MapReduce 进行并行计算，因此可以支持很大规模的数据；对应的，数据库可以支持的数据规模较小。</p>\n<h2 id=\"第2章-Hive安装\"><a href=\"#第2章-Hive安装\" class=\"headerlink\" title=\"第2章 Hive安装\"></a><strong><strong><strong>第2章 Hive安装</strong></strong></strong></h2><h3 id=\"2-1-Hive的安装地址\"><a href=\"#2-1-Hive的安装地址\" class=\"headerlink\" title=\"2.1 Hive的安装地址\"></a><strong><strong><strong>2.1 Hive的安装地址</strong></strong></strong></h3><p>1.Hive官网地址：</p>\n<p><a href=\"http://hive.apache.org/\">http://hive.apache.org/</a></p>\n<p>2.文档查看地址：<a href=\"https://cwiki.apache.org/confluence/display/Hive/GettingStarted\">https://cwiki.apache.org/confluence/display/Hive/GettingStarted</a></p>\n<p>3.下载地址：</p>\n<p>    <a href=\"http://archive.apache.org/dist/hive/\">http://archive.apache.org/dist/hive/</a></p>\n<p>4.github 地址</p>\n<p><a href=\"https://github.com/apache/hive\">https://github.com/apache/hive</a></p>\n<h3 id=\"2-2-Hive安装部署\"><a href=\"#2-2-Hive安装部署\" class=\"headerlink\" title=\"2.2 Hive安装部署\"></a><strong><strong><strong>2.2 Hive安装部署</strong></strong></strong></h3><p><strong><strong>1.Hive安装以及配置</strong></strong></p>\n<p>（1）把apache-hive-1.2.1-bin.tar.gz上传到linux的&#x2F;usr&#x2F;local&#x2F;packages目录下</p>\n<p>（2）解压 apache-hive-1.2.1-bin.tar.gz 到&#x2F;usr&#x2F;local&#x2F;soft&#x2F;目录下面</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master packages]# tar -zxvf apache-hive-1.2.1-bin.tar.gz -C </span>&nbsp;<span style=\"color:#333333;\">/usr/local/soft/</span></p></td></tr></tbody></table>\n\n<p>（3）修改apache-hive-1.2.1-bin.tar.gz 的名称为 hive</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master soft]# mv apache-hive-1.2.1-bin/ hive</span></p></td></tr></tbody></table>\n\n<p>（4）修改&#x2F;usr&#x2F;local&#x2F;soft&#x2F;hive&#x2F;conf 目录下的hive-env.sh.template 名称为 hive-env.sh</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master conf]# mv hive-env.sh.template hive-env.sh</span></p></td></tr></tbody></table>\n\n<p>（5）配置hive-env.sh 文件</p>\n<p>（a）配置HADOOP_HOME 路径</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">export </span><span style=\"color:#333333;\">HADOOP_HOME=/usr/local/soft/hadoop-2.7.6</span></p></td></tr></tbody></table>\n\n<p>（b）配置HIVE_CONF_DIR 路径</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">export </span><span style=\"color:#333333;\">HIVE_CONF_DIR=/usr/local/soft/hive/conf</span></p></td></tr></tbody></table>\n\n<p>（c）配置JAVA_HOM 路径</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">export </span><span style=\"color:#333333;\">JAVA_HOME=/usr/local/soft/jdk1.8.0_171</span></p></td></tr></tbody></table>\n\n<p>（6）配置hive的环境变量</p>\n<table border=\"1\" cellspacing=\"0\" style=\"margin-left:-20.7pt;width:512.55pt;\"><tbody><tr><td style=\"background-color:#cfcece;width:512.55pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">export </span><span style=\"color:#333333;\">HIVE_HOME=/usr/local/soft/hive</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">e</span><span style=\"color:#333333;\">xport</span>&nbsp;<span style=\"color:#333333;\">PATH=$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$HIVE_HOME/bin:$PATH</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/586c2a1173ffd9f15fe1d9d9af44c222.png\"></p>\n<ol>\n<li><strong><strong>Hive基本启动</strong></strong></li>\n</ol>\n<p>（1）启动Hive</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master conf]# hive</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/de94e2b2a10984fbbb7f68ff839bf768.png\"></p>\n<p>（2）查看数据库</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">hive&gt; show databases;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/37ce5f0b1c70b9f1f8372a8f7891c0c6.png\"></p>\n<p>（3）打开默认数据库 </p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">hive&gt; use default;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<p>（4）显示 default 数据库中的表</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">hive&gt; show tables;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/73c2c24b516d205a2463ecf2ff88d923.png\"></p>\n<p>（5）创建一张表</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">hive&gt; create table student(id int,name string,gender string);</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/67b6d1a27fe874e6cbf18bc7db095977.png\"></p>\n<p>（6）查看表的结构</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">hive&gt; desc student;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/64da160dcab61c0d26b1e2d9909e00e6.png\"></p>\n<p>（7）向表中插入数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">hive&gt; insert into student values(2012003,\"lyj\",\"0\");</span></p></td></tr></tbody></table>\n\n<p>（8）查询表中数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">hive&gt; select * from student;</span></p></td></tr></tbody></table>\n\n<p>（9）退出 hive</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">hive&gt; quit;</span></p></td></tr></tbody></table>\n\n<p>说明：（查看 hive 在 hdfs 中的结构）</p>\n<p>数据库：在 hdfs 中表现为${hive.metastore.warehouse.dir}目录下一个文件夹</p>\n<p>表：在 hdfs 中表现所属 db 目录下一个文件夹，文件夹中存放该表中的具体数据</p>\n<h3 id=\"2-3-将本地文件导入Hive案例\"><a href=\"#2-3-将本地文件导入Hive案例\" class=\"headerlink\" title=\"2.3 将本地文件导入Hive案例\"></a><strong><strong><strong>2.3 将本地文件导入Hive案例</strong></strong></strong></h3><p>将本地&#x2F;usr&#x2F;local&#x2F;soft&#x2F;data&#x2F;student.txt 这个目录下的数据导入到 hive 的 student(id int, name string,gender string)表中。</p>\n<ol>\n<li><strong><strong>数据准备</strong></strong></li>\n</ol>\n<p>在&#x2F;usr&#x2F;local&#x2F;soft&#x2F;data&#x2F;这个目录下准备数据</p>\n<p>（1）在&#x2F;usr&#x2F;local&#x2F;soft&#x2F;目录下创建 data</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master soft]# mkdir data</span></p></td></tr></tbody></table>\n\n<p>（2）在&#x2F;usr&#x2F;local&#x2F;soft&#x2F;data目录下创建 student.txt 文件并添加数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master data]# touch student.txt</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master data]# vi student.txt</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">2012003,lyj,0</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">2121001,lzh,1</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">2121002,wkh,1</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">2121003,jy ,0</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">2121004,syx,0</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<p>注意：以 “,” 键间隔<strong><strong>。</strong></strong></p>\n<ol>\n<li><strong><strong>Hive实际操作</strong></strong></li>\n</ol>\n<p>（1）启动 hive</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master data]# hive</span></p></td></tr></tbody></table>\n\n<p>（2）显示数据库</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">hive&gt; show databases;</span></p></td></tr></tbody></table>\n\n<p>（3）使用 default 数据库</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">hive&gt; use default;</span></p></td></tr></tbody></table>\n\n<p>（4）显示 default 数据库中的表</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">hive&gt; show tables;</span></p></td></tr></tbody></table>\n\n<p>（5）删除已创建的 student 表</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">hive&gt; drop table student;</span></p></td></tr></tbody></table>\n\n<p>注意：没有表就忽略。</p>\n<p>（6）创建 student 表, 并声明文件分隔符’，’</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">create table student(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">id int,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">name string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">ROW FORMAT DELIMITED FIELDS TERMINATED BY ',';</span></p></td></tr></tbody></table>\n\n<p>（7）加载&#x2F;usr&#x2F;local&#x2F;soft&#x2F;data&#x2F;student.txt 文件到 student 数据库表中。</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">hive&gt; load data local inpath '/usr/local/soft/data/student.txt' into table student;</span></p></td></tr></tbody></table>\n\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/2d9c8c76337f6a8a996e39ac49424d51.png\"></p>\n<p>（8）Hive 查询结果</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">hive&gt; select * from student limit 10;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">OK</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">2012003 lyj</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">2121001 lzh</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">2121002 wkh</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">2121003 jy</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">2121004 syx</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">2121005 ntt</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">2121006 gyl</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">2121007 hcr</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">2121008 xhy</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<ol>\n<li><strong><strong>遇到的问题</strong></strong></li>\n</ol>\n<p>再打开一个客户端窗口启动 hive，会产生 java.sql.SQLException 异常。</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master data]# hive</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">Logging initialized using configuration in</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">jar:file:/usr/local/soft/hive/lib/hive-common-1.2.1.jar!/hive-log4j.propertie</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">Exception in thread \"main\" java.lang.RuntimeException:</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">java.lang.RuntimeException: Unable to instantiate</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">at</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">org.apache.hadoop.hive.ql.session.SessionState.start(SessionState.java:522)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">at org.apache.hadoop.hive.cli.CliDriver.run(CliDriver.java:677)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">at org.apache.hadoop.hive.cli.CliDriver.main(CliDriver.java:621)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">at</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">at</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.jav</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">a:43)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">at java.lang.reflect.Method.invoke(Method.java:498)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">at org.apache.hadoop.util.RunJar.run(RunJar.java:221)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">at org.apache.hadoop.util.RunJar.main(RunJar.java:136)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">Caused by: java.lang.RuntimeException: Unable to instantiate</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">at</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">org.apache.hadoop.hive.metastore.MetaStoreUtils.newInstance(MetaStoreUtils.java:</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">1523)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">at org.apache.hadoop.hive.metastore.RetryingMetaStoreClient.&lt;init&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">(RetryingMetaStoreClient.java:86)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">at</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">org.apache.hadoop.hive.metastore.RetryingMetaStoreClient.getProxy(RetryingMetaSt</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">oreClient.java:132)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">at</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">org.apache.hadoop.hive.metastore.RetryingMetaStoreClient.getProxy(RetryingMetaSt</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">oreClient.java:104)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">at</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">org.apache.hadoop.hive.ql.metadata.Hive.createMetaStoreClient(Hive.java:3005)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">at org.apache.hadoop.hive.ql.metadata.Hive.getMSC(Hive.java:3024)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">at</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">org.apache.hadoop.hive.ql.session.SessionState.start(SessionState.java:503)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">... 8 more</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<p>原因是，Metastore 默认存储在自带的 derby 数据库中，推荐使用 MySQL 存储 Metastore;</p>\n<h3 id=\"2-4-MySql安装\"><a href=\"#2-4-MySql安装\" class=\"headerlink\" title=\"2.4 MySql安装\"></a><strong><strong><strong>2.4</strong></strong> <strong><strong>MySql安装</strong></strong></strong></h3><p><strong><strong>1.安装mysql5.7</strong></strong></p>\n<p>（1）下载yum Repository</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master packages]# wge</span><span style=\"color:#333333;\">t -i -c </span><span style=\"color:#333333;\">http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</span></p></td></tr></tbody></table>\n\n<p>（2）安装yum Repository</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master packages]# yum -y install mysql57-community-release-el7- 10.noarch.rpm</span></p></td></tr></tbody></table>\n\n<p>（3）安装mysql5.7</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master packages]# yum -y install mysql-community-server --nogpgcheck</span></p></td></tr></tbody></table>\n\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/323d2cf10137be020d2767f2a8fb01e9.png\"></p>\n<p>（4）开机自启动</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master packages]# systemctl enable mysqld.service</span></p></td></tr></tbody></table>\n\n<p>（5）启动mysql</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master packages]# systemctl start mysqld.service</span></p></td></tr></tbody></table>\n\n<p>（6）查看状态</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master packages]# systemctl status mysqld.service</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/1e3441ee0b88823ff8a3dbb47a0042b1.png\"></p>\n<p>（7）获取临时密码</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master packages]#grep \"password\" /var/log/mysqld.log</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/210e42b544431a4675be6bf764ee8a21.png\"></p>\n<p>（8）登录mysql</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master packages]#mysql -uroot -p</span></p></td></tr></tbody></table>\n\n<p>（9）关闭密码复杂验证</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">set global validate_password_policy=0;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">set global validate_password_length=1;</span></p></td></tr></tbody></table>\n\n<p>（10）设置密码</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">alter user user() identified by \"123456\";</span></p></td></tr></tbody></table>\n\n<p>（11）修改权限</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">use mysql;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '123456' WITH GRANT OPTION; --修改权限</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">flush privileges; --</span><span style=\"color:#333333;\">刷新权限</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">select host,user,authentication_string from user; --</span><span style=\"color:#333333;\">查看权限</span></p></td></tr></tbody></table>\n\n<p>（12）卸载yum Repository</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">#因为安装了Yum Repository</span><span style=\"color:#333333;\">，以后每次</span><span style=\"color:#333333;\">yum</span><span style=\"color:#333333;\">操作都会自动更新，需要把这个卸载掉：</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">yum -y remove mysql57-community-release-el7-10.noarch</span></p></td></tr></tbody></table>\n\n<p><strong><strong>2. 卸载mysql</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">删除依赖包</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">rpm -qa |grep -i mysql</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">yum remove mysql-community mysql-community-server mysql-community-libs mysql-</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">community-common</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">清理文件</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">find / -name mysql</span></p></td></tr></tbody></table>\n\n<p><strong><strong>3.修改MySQL编码</strong></strong></p>\n<p>(1) 修改mysql编码为UTF-8</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">1、编辑配置文件</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">vim /etc/my.cnf</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">2</span><span style=\"color:#333333;\">、加入以下内容：</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[client]</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">default-character-set = utf8mb4</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[mysqld]</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">character-set-server = utf8mb4</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">collation-server = utf8mb4_general_ci</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">3</span><span style=\"color:#333333;\">、重启</span><span style=\"color:#333333;\">mysql</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">systemctl restart mysqld</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">4</span><span style=\"color:#333333;\">、登录</span><span style=\"color:#333333;\">mysql</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">mysql -uroot -p123456</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">5</span><span style=\"color:#333333;\">、查看</span><span style=\"color:#333333;\">mysql</span><span style=\"color:#333333;\">当前字符集</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">show variables like '%char%';</span></p></td></tr></tbody></table>\n\n<h3 id=\"2-5-Hive-元数据配置到-MySql\"><a href=\"#2-5-Hive-元数据配置到-MySql\" class=\"headerlink\" title=\"2.5 Hive 元数据配置到** MySql******\"></a><strong><strong><strong>2.5 Hive 元数据配置到</strong></strong></strong>** MySql******</h3><h4 id=\"2-5-1-驱动拷贝\"><a href=\"#2-5-1-驱动拷贝\" class=\"headerlink\" title=\"2.5.1 驱动拷贝\"></a><strong><strong><strong>2.5.1 驱动拷贝</strong></strong></strong></h4><p>1．上传 mysql-connector-java-5.1.27.tar.gz 驱动包至&#x2F;usr&#x2F;local&#x2F;packages</p>\n<p>2.拷贝&#x2F;usr&#x2F;local&#x2F;packages目录下的 mysql-connector-java-5.1.49.jar 到&#x2F;usr&#x2F;local&#x2F;soft&#x2F;hive&#x2F;lib&#x2F;</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master packages]# cp mysql-connector-java-5.1.49.jar</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">/usr/local/soft/hive/lib/</span></p></td></tr></tbody></table>\n\n<h4 id=\"2-5-2-配置-Metastore-到-MySql\"><a href=\"#2-5-2-配置-Metastore-到-MySql\" class=\"headerlink\" title=\"2.5.2 配置** Metastore 到 MySql******\"></a><strong><strong><strong>2.5.2 配置</strong></strong></strong>** Metastore 到 MySql******</h4><p>1．在&#x2F;usr&#x2F;local&#x2F;soft&#x2F;hive&#x2F;conf目录下创建一个名为hive-site.xml的文件并配置</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master conf]# vim hive-site.xml</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">&lt;?xml version=\"1.0\"?&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">&lt;?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">&lt;configuration&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">&lt;property&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">&lt;name&gt;javax.jdo.option.ConnectionURL&lt;/name&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">&lt;value&gt;jdbc:mysql://master:3306/hive?useSSL=false&lt;/value&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">&lt;description&gt;JDBC connect string for a JDBC metastore&lt;/description&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">&lt;/property&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">&lt;property&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">&lt;name&gt;javax.jdo.option.ConnectionDriverName&lt;/name&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">&lt;value&gt;com.mysql.jdbc.Driver&lt;/value&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">&lt;description&gt;Driver class name for a JDBC metastore&lt;/description&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">&lt;/property&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">&lt;property&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">&lt;name&gt;javax.jdo.option.ConnectionUserName&lt;/name&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">&lt;value&gt;root&lt;/value&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">&lt;description&gt;username to use against metastore database&lt;/description&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">&lt;/property&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">&lt;property&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">&lt;name&gt;javax.jdo.option.ConnectionPassword&lt;/name&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">&lt;value&gt;123456&lt;/value&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">&lt;description&gt;password to use against metastore database&lt;/description&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">&lt;/property&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">&lt;/configuration&gt;</span></p></td></tr></tbody></table>\n\n<p>2．将hive的jline-2.12.jar拷贝到hadoop对应目录下，hive的 jline-2.12.jar 位置在 ：&#x2F;usr&#x2F;local&#x2F;soft&#x2F;hive&#x2F;lib&#x2F;jline-2.12.jar</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master conf]# cd /usr/local/soft/hive/lib/</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master lib]# cp jline-2.12.jar /usr/local/soft/hadoop-2.7.6/share/hadoop/yarn/lib/</span></p></td></tr></tbody></table>\n\n<p>3．配置完毕后，如果启动 hive 异常，可以重新启动虚拟机。（重启后，别忘了启 动 hadoop 集群）</p>\n<h4 id=\"2-5-3-多窗口启动-Hive-测试\"><a href=\"#2-5-3-多窗口启动-Hive-测试\" class=\"headerlink\" title=\"2.5.3 多窗口启动** Hive 测试******\"></a><strong><strong><strong>2.5.3 多窗口启动</strong></strong></strong>** Hive 测试******</h4><p>1．先启动 MySQL</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master conf]# mysql -uroot -p123456</span></p></td></tr></tbody></table>\n\n<p><strong><strong>查看有几个数据库</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">mysql&gt; show databases;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">+--------------------+</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">| Database |</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">+--------------------+</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">| information_schema |</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">| mysql |</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">| performance_schema |</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">| sys |</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">+--------------------+</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">4 rows in set (0.00 sec)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">mysql&gt;</span></p></td></tr></tbody></table>\n\n<p>2．再次打开多个窗口，分别启动 hive</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master conf]# hive</span></p></td></tr></tbody></table>\n\n<p>3．启动 hive 后，回到 MySQL 窗口查看数据库，显示增加了 hive 数据库</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">mysql&gt; show databases;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">+--------------------+</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">| Database |</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">+--------------------+</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">| information_schema |</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">| hive |</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">| mysql |</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">| performance_schema |</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">| sys |</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">+--------------------+</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">5 rows in set (0.00 sec)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">mysql&gt;</span></p></td></tr></tbody></table>\n\n<p>4.修改mysql元数据库hive，让其hive支持utf-8编码以支持中文</p>\n<p>（1）切换到hive数据库</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">use hive;</span></p></td></tr></tbody></table>\n\n<p>（2）修改字段注释字符集</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">alter table COLUMNS_V2 modify column COMMENT varchar(256) character set</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">utf8;</span></p></td></tr></tbody></table>\n\n<p>（3）修改表注释字符集</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">alter table TABLE_PARAMS modify column PARAM_VALUE varchar(4000) character set utf8;</span></p></td></tr></tbody></table>\n\n<p>（4）修改分区表参数，以支持分区键能够用中文表示</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">alter table PARTITION_PARAMS modify column PARAM_VALUE varchar(4000)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">character set utf8;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">alter table PARTITION_KEYS modify column PKEY_COMMENT varchar(4000)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">character set utf8;</span></p></td></tr></tbody></table>\n\n<p>（5）修改索引注解(可选)</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">alter table INDEX_PARAMS modify column PARAM_VALUE varchar(4000) character set utf8;</span></p></td></tr></tbody></table>\n\n<h3 id=\"2-6-HiveJDBC访问\"><a href=\"#2-6-HiveJDBC访问\" class=\"headerlink\" title=\"2.6 HiveJDBC访问\"></a><strong><strong><strong>2.6 HiveJDBC访问</strong></strong></strong></h3><h4 id=\"2-6-1-启动-hiveserver2-服务\"><a href=\"#2-6-1-启动-hiveserver2-服务\" class=\"headerlink\" title=\"2.6.1 启动 hiveserver2 服务\"></a><strong><strong><strong>2.6.1 启动 hiveserver2 服务</strong></strong></strong></h4><table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master conf]# hiveserver2</span></p></td></tr></tbody></table>\n\n<h4 id=\"2-6-2-启动-beeline\"><a href=\"#2-6-2-启动-beeline\" class=\"headerlink\" title=\"2.6.2 启动 beeline\"></a><strong><strong><strong>2.6.2 启动 beeline</strong></strong></strong></h4><table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master conf]# beeline</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">Beeline version 1.2.1 by Apache Hive</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">beeline&gt;</span></p></td></tr></tbody></table>\n\n<h4 id=\"2-6-3-连接-hiveserver2\"><a href=\"#2-6-3-连接-hiveserver2\" class=\"headerlink\" title=\"2.6.3 连接** hiveserver2******\"></a><strong><strong><strong>2.6.3 连接</strong></strong></strong>** hiveserver2******</h4><table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master conf]# beeline</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">Beeline version 1.2.1 by Apache Hive</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">beeline&gt; !connect jdbc:hive2://master:10000</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">Connecting to jdbc:hive2://master:10000</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">Enter username for jdbc:hive2://master:10000: root</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">Enter password for jdbc:hive2://master:10000:</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">Connected to: Apache Hive (version 1.2.1)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">Driver: Hive JDBC (version 1.2.1)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">Transaction isolation: TRANSACTION_REPEATABLE_READ</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">0: jdbc:hive2://master:10000&gt;</span></p></td></tr></tbody></table>\n\n<h3 id=\"2-7-Hive常用交互命令\"><a href=\"#2-7-Hive常用交互命令\" class=\"headerlink\" title=\"2.7 Hive常用交互命令\"></a><strong><strong><strong>2.7 Hive常用交互命令</strong></strong></strong></h3><table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master conf]# hive -help</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">usage: hive</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">-d,--define &lt;key=value&gt; Variable subsitution to apply to hive</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">commands. e.g. -d A=B or --define A=B</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">--database &lt;databasename&gt; Specify the database to use</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">-e &lt;quoted-query-string&gt; SQL from command line</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">-f &lt;filename&gt; SQL from files</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">-H,--help Print help information</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">--hiveconf &lt;property=value&gt; Use value for given property</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">--hivevar &lt;key=value&gt; Variable subsitution to apply to hive</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">-i &lt;filename&gt; Initialization SQL file</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">-S,--silent Silent mode in interactive shell</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">-v,--verbose Verbose mode (echo executed SQL to the</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">console)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master conf]#</span></p></td></tr></tbody></table>\n\n<ol>\n<li>“-e”不进入 hive 的交互窗口执行 sql 语句</li>\n</ol>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master conf]# hive -e \"select id from student;\"</span></p></td></tr></tbody></table>\n\n<ol>\n<li>“-f”执行脚本中 sql 语句</li>\n</ol>\n<p>（1）在&#x2F;usr&#x2F;local&#x2F;soft&#x2F;data 目录下创建 hivef.sql 文件</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master data]# touch hivef.sql</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">文件中写入正确的 sql </span><span style=\"color:#333333;\">语句</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master data]# vi hivef.sql</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">select * from student;</span></p></td></tr></tbody></table>\n\n<p>（2）执行文件中的 sql 语句并将结果写入文件中</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#333333;\">[root@master data]# hive -f hivef.sql &gt;/usr/local/soft/data/hive_result.tx</span><span style=\"color:#333333;\">t</span></p></td></tr></tbody></table>\n\n<h3 id=\"2-8-Hive其他命令操作\"><a href=\"#2-8-Hive其他命令操作\" class=\"headerlink\" title=\"2.8 Hive其他命令操作\"></a><strong><strong><strong>2.8 Hive其他命令操作</strong></strong></strong></h3><p>1．退出 hive 窗口：</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:justify;\">hive&gt; quit;</p><p style=\"margin-left:.0001pt;text-align:justify;\">hive&gt; exit;</p></td></tr></tbody></table>\n\n<p>在新版的 hive 中没区别了，在以前的版本是有的： exit:先隐性提交数据，再退出； quit:不提交数据，退出； </p>\n<p>2．在 hive cli 命令窗口中如何查看 hdfs 文件系统</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:justify;\">hive&gt; dfs -ls /;</p></td></tr></tbody></table>\n\n<p>3．在 hive cli 命令窗口中如何查看本地文件系统</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:justify;\">hive&gt; ! ls /usr/local/soft/data;</p></td></tr></tbody></table>\n\n<p>4．查看在 hive 中输入的所有历史命令</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:justify;\">[root@master ~]# cat .hivehistory</p></td></tr></tbody></table>\n\n<h3 id=\"2-9-Hive常见属性配置\"><a href=\"#2-9-Hive常见属性配置\" class=\"headerlink\" title=\"2.9 Hive常见属性配置\"></a><strong><strong><strong>2.9 Hive常见属性配置</strong></strong></strong></h3><h4 id=\"2-9-1-Hive-数据仓库位置配置\"><a href=\"#2-9-1-Hive-数据仓库位置配置\" class=\"headerlink\" title=\"2.9.1 Hive 数据仓库位置配置\"></a><strong><strong><strong>2.9.1 Hive 数据仓库位置配置</strong></strong></strong></h4><p>1）Default 数据仓库的最原始位置是在 hdfs 上的：&#x2F;user&#x2F;hive&#x2F;warehouse 路径下。</p>\n<p>2）在仓库目录下，没有对默认的数据库 default 创建文件夹。如果某张表属于 default 数 据库，直接</p>\n<p>在数据仓库目录下创建一个文件夹。</p>\n<p>3）修改 default 数据仓库原始位置（将 hive-default.xml.template 如下配置信息拷贝到 hive-site.xml文件中）</p>\n<table border=\"1\" cellspacing=\"0\" style=\"width:450.65pt;\"><tbody><tr><td style=\"background-color:#cfcece;width:450.65pt;\"><p style=\"margin-left:.0001pt;text-align:justify;\">&lt;property&gt;</p><p style=\"margin-left:.0001pt;text-align:justify;\">&lt;name&gt;hive.metastore.warehouse.dir&lt;/name&gt;</p><p style=\"margin-left:.0001pt;text-align:justify;\">&lt;value&gt;/user/hive/warehouse&lt;/value&gt;</p><p style=\"margin-left:.0001pt;text-align:justify;\">&lt;description&gt;location of default database for the warehouse&lt;/description&gt;</p><p style=\"margin-left:.0001pt;text-align:justify;\">&lt;/property&gt;</p></td></tr></tbody></table>\n\n<p>配置同组用户有执行权限</p>\n<table border=\"1\" cellspacing=\"0\" style=\"width:450.25pt;\"><tbody><tr><td style=\"background-color:#cfcece;width:450.25pt;\"><p style=\"margin-left:.0001pt;text-align:justify;\">[root@master conf]# hadoop fs -chmod 777 /user/hive/warehouse</p></td></tr></tbody></table>\n\n<h4 id=\"2-9-2-查询后信息显示配置\"><a href=\"#2-9-2-查询后信息显示配置\" class=\"headerlink\" title=\"2.9.2 查询后信息显示配置\"></a><strong><strong><strong>2.9.2 查询后信息显示配置</strong></strong></strong></h4><p>1）在 hive-site.xml 文件中添加如下配置信息，就可以实现显示当前数据库，以及查询表的头信息配置。</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:justify;\">&lt;property&gt;</p><p style=\"margin-left:.0001pt;text-align:justify;\">&lt;name&gt;hive.cli.print.header&lt;/name&gt;</p><p style=\"margin-left:.0001pt;text-align:justify;\">&lt;value&gt;true&lt;/value&gt;</p><p style=\"margin-left:.0001pt;text-align:justify;\">&lt;description&gt;Whether to print the names of the columns in query output.</p><p style=\"margin-left:.0001pt;text-align:justify;\">&lt;/description&gt;</p><p style=\"margin-left:.0001pt;text-align:justify;\">&lt;/property&gt;</p><p style=\"margin-left:.0001pt;text-align:justify;\">&lt;property&gt;</p><p style=\"margin-left:.0001pt;text-align:justify;\">&lt;name&gt;hive.cli.print.current.db&lt;/name&gt;</p><p style=\"margin-left:.0001pt;text-align:justify;\">&lt;value&gt;true&lt;/value&gt;</p><p style=\"margin-left:.0001pt;text-align:justify;\">&lt;description&gt;Whether to include the current database in the Hive prompt.</p><p style=\"margin-left:.0001pt;text-align:justify;\">&lt;/description&gt;</p><p style=\"margin-left:.0001pt;text-align:justify;\">&lt;/property&gt;</p></td></tr></tbody></table>\n\n<p>2）重新启动 hive，对比配置前后差异。</p>\n<p>配置前</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:justify;\">hive&gt; select * from student limit 10;</p><p style=\"margin-left:.0001pt;text-align:justify;\">OK</p><p style=\"margin-left:.0001pt;text-align:justify;\">2012003 lyj</p><p style=\"margin-left:.0001pt;text-align:justify;\">2121001 lzh</p><p style=\"margin-left:.0001pt;text-align:justify;\">2121002 wkh</p><p style=\"margin-left:.0001pt;text-align:justify;\">2121003 jy</p><p style=\"margin-left:.0001pt;text-align:justify;\">2121004 syx</p><p style=\"margin-left:.0001pt;text-align:justify;\">2121005 ntt</p><p style=\"margin-left:.0001pt;text-align:justify;\">2121006 gyl</p><p style=\"margin-left:.0001pt;text-align:justify;\">2121007 hcr</p><p style=\"margin-left:.0001pt;text-align:justify;\">2121008 xhy</p><p style=\"margin-left:.0001pt;text-align:justify;\">Time taken: 1.147 seconds, Fetched: 10 row(s)</p></td></tr></tbody></table>\n\n<p>配置后</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:justify;\">hive (default)&gt; select * from student limit 10;</p><p style=\"margin-left:.0001pt;text-align:justify;\">OK</p><p style=\"margin-left:.0001pt;text-align:justify;\">student.id student.name</p><p style=\"margin-left:.0001pt;text-align:justify;\">2012003 lyj</p><p style=\"margin-left:.0001pt;text-align:justify;\">2121001 lzh</p><p style=\"margin-left:.0001pt;text-align:justify;\">2121002 wkh</p><p style=\"margin-left:.0001pt;text-align:justify;\">2121003 jy</p><p style=\"margin-left:.0001pt;text-align:justify;\">2121004 syx</p><p style=\"margin-left:.0001pt;text-align:justify;\">2121005 ntt</p><p style=\"margin-left:.0001pt;text-align:justify;\">2121006 gyl</p><p style=\"margin-left:.0001pt;text-align:justify;\">2121007 hcr</p><p style=\"margin-left:.0001pt;text-align:justify;\">2121008 xhy</p><p style=\"margin-left:.0001pt;text-align:justify;\">Time taken: 0.371 seconds, Fetched: 10 row(s)</p><p style=\"margin-left:.0001pt;text-align:justify;\"></p></td></tr></tbody></table>\n\n<h4 id=\"2-9-3-Hive-运行日志信息配置\"><a href=\"#2-9-3-Hive-运行日志信息配置\" class=\"headerlink\" title=\"2.9.3 Hive 运行日志信息配置\"></a><strong><strong><strong>2.9.3 Hive 运行日志信息配置</strong></strong></strong></h4><p>1．Hive 的 log 默认存放在&#x2F;tmp&#x2F;root&#x2F;hive.log 目录下（当前用户名下）</p>\n<p>2．修改 hive 的 log 存放日志到&#x2F;usr&#x2F;local&#x2F;soft&#x2F;hive&#x2F;logs</p>\n<p>（1）修改&#x2F;usr&#x2F;local&#x2F;soft&#x2F;hive&#x2F;conf&#x2F;hive-log4j.properties.template   文件名称为 hive-log4j.properties</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:justify;\">[root@master conf]# mv hive-log4j.properties.template hive-log4j.properties</p></td></tr></tbody></table>\n\n<p>（2）在 hive-log4j.properties 文件中修改 log 存放位置</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:justify;\">[root@master conf]# vim hive-log4j.properties</p><p style=\"margin-left:.0001pt;text-align:justify;\">hive.log.dir=/usr/local/soft/hive/logs</p></td></tr></tbody></table>\n\n<h4 id=\"2-9-4-参数配置方式\"><a href=\"#2-9-4-参数配置方式\" class=\"headerlink\" title=\"2.9.4 参数配置方式\"></a><strong><strong><strong>2.9.4 参数配置方式</strong></strong></strong></h4><p>1．查看当前所有的配置信息</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"background-color:#cfcece;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:justify;\">hive (default)&gt; set;</p></td></tr></tbody></table>\n\n<p>2．参数的配置三种方式</p>\n<p>（1）配置文件方式</p>\n<p>默认配置文件：hive-default.xml</p>\n<p>用户自定义配置文件：hive-site.xml</p>\n<p>注意：用户自定义配置会覆盖默认配置。另外，Hive 也会读入 Hadoop 的配置，因为 Hive 是作为 Hadoop 的客户端启动的，Hive 的配置会覆盖 Hadoop 的配置。配置文件的设定对本机启动的所有 Hive 进程都有效。</p>\n<p>（2）命令行参数方式</p>\n<p>启动 Hive 时，可以在命令行添加-hiveconf param&#x3D;value 来设定参数。</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:justify;\">#例如</p><p style=\"margin-left:.0001pt;text-align:justify;\">[root@master conf]# hive -hiveconf mapred.reduce.tasks=3;</p><p style=\"margin-left:.0001pt;text-align:justify;\">#查看参数设置：</p><p style=\"margin-left:.0001pt;text-align:justify;\">hive (default)&gt; set mapred.reduce.tasks;</p><p style=\"margin-left:.0001pt;text-align:justify;\">mapred.reduce.tasks=3</p><p style=\"margin-left:.0001pt;text-align:justify;\">hive (default)&gt;</p></td></tr></tbody></table>\n\n<p>注意：仅对本次 hive 启动有效</p>\n<p>（3）参数声明方式</p>\n<p>可以在 HQL 中使用 SET 关键字设定参数</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:justify;\">hive (default)&gt; set mapred.reduce.tasks=100;</p><p style=\"margin-left:.0001pt;text-align:justify;\">#查看参数设置</p><p style=\"margin-left:.0001pt;text-align:justify;\">hive (default)&gt; set mapred.reduce.tasks;</p><p style=\"margin-left:.0001pt;text-align:justify;\">mapred.reduce.tasks=100</p><p style=\"margin-left:.0001pt;text-align:justify;\">hive (default)&gt;</p></td></tr></tbody></table>\n\n<p>注意：仅对本次 hive 启动有效</p>\n<p>上述三种设定方式的优先级依次递增。即配置文件&lt;命令行参数&lt;参数声明。注意某些系 统级的参数，例如 log4j 相关的设定，必须用前两种方式设定，因为那些参数的读取在会话 建立以前已经完成了。</p>\n<h2 id=\"第3-章-Hive数据类型\"><a href=\"#第3-章-Hive数据类型\" class=\"headerlink\" title=\"第3 章 Hive数据类型\"></a><strong><strong><strong>第3 章 Hive数据类型</strong></strong></strong></h2><ol>\n<li><strong><strong><strong>基本数据类型</strong></strong></strong></li>\n</ol>\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/5d28078a99e056d426a716f9f91fb25a.png\"></p>\n<p>对于 Hive 的 String 类型相当于数据库的 varchar 类型，该类型是一个可变的字符串，不过它不能声明其中最多能存储多少个字符，理论上它可以存储 2GB 的字符数。</p>\n<h3 id=\"3-2-集合数据类型\"><a href=\"#3-2-集合数据类型\" class=\"headerlink\" title=\"3.2 集合数据类型\"></a><strong><strong><strong>3.2 集合数据类型</strong></strong></strong></h3><p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/77704f2f10e9277fc2fbdc52be539c9d.png\"></p>\n<p> Hive 有三种复杂数据类型 ARRAY、MAP 和 STRUCT。ARRAY 和 MAP 与 Java 中的 Array 和 Map 类似，而 STRUCT 与 C 语言中的 Struct 类似，它封装了一个命名字段集合，复杂数据类型允许任意层次的嵌套。</p>\n<ol>\n<li><strong><strong>案例实操</strong></strong></li>\n</ol>\n<p>（1）假设某表有如下一行，我们用 JSON 格式来表示其数据结构。在 Hive 下访问的格 式为</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">{<!-- --></span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">\"name\": \"songsong\",</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">\"friends\": [\"bingbing\", \"lili\"], //列表 Array,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">\"children\": { //键值 Map,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">\"xiao song\": 18,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">\"xiaoxiao song\": 19</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">}</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">\"address\": { //结构 Struct,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">\"street\": \"hui long guan\",</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">\"city\": \"beijing\"</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">}</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">}</span></p></td></tr></tbody></table>\n\n<p>（2）基于上述数据结构，我们在 Hive 里创建对应的表，并导入数据。</p>\n<p>创建本地测试文件 test.txt</p>\n<table border=\"1\" cellspacing=\"0\" style=\"width:457.55pt;\"><tbody><tr><td style=\"vertical-align:top;width:457.55pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">songsong,bingbing_lili,xiao song:18_xiaoxiao song:19,hui long guan_beijing</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">yangyang,caicai_susu,xiao yang:18_xiaoxiao yang:19,chao yang_beijing</span></p></td></tr></tbody></table>\n\n<p>注意：MAP，STRUCT 和 ARRAY 里的元素间关系都可以用同一个字符表示，这里用“_”。</p>\n<p>（3）Hive 上创建测试表 test</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table test(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">name string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">friends array &lt; string &gt; ,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">c</span><span style=\"color:#000000;\">hildren map &lt; string, int &gt; ,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">address struct &lt; street: string, city: string &gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">row format delimited fields terminated by ','</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">collection items terminated by '_'</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">map keys terminated by ':'</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">lines terminated by '\\n';</span></p></td></tr></tbody></table>\n\n<p>字段解释：</p>\n<p><strong><strong>row format delimited fields terminated by ‘,’</strong></strong> -- 列分隔符</p>\n<p><strong><strong>collection items terminated by ‘_‘</strong></strong>  --MAP STRUCT 和 ARRAY 的分隔符(数 据分割符号)</p>\n<p><strong><strong>map keys terminated by ‘:’</strong></strong>– MAP 中的 key 与 value 的分隔符</p>\n<p><strong><strong>lines terminated by ‘\\n’;</strong></strong>– 行分隔符</p>\n<p>（4）导入文本数据到测试表</p>\n<p>load data local inpath ‘&#x2F;root&#x2F;data&#x2F;test.txt’ into table test;</p>\n<p>（5）访问三种集合列里的数据，以下分别是 ARRAY，MAP，STRUCT 的访问方式</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select friends[1],children['xiao song'],address.city from</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">test</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">where name=\"songsong\";</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">OK</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">_c0 _c1 city</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">lili 18 beijing</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Time taken: 0.076 seconds, Fetched: 1 row(s)</span></p></td></tr></tbody></table>\n\n<h3 id=\"3-3-类型转化\"><a href=\"#3-3-类型转化\" class=\"headerlink\" title=\"3.3 类型转化\"></a><strong><strong><strong>3.3 类型转化</strong></strong></strong></h3><p>Hive 的原子数据类型是可以进行隐式转换的，类似于 Java 的类型转换，例如某表达式使用 INT 类型，TINYINT 会自动转换为 INT 类型，但是 Hive 不会进行反向转化，例如，某表 达式使用 TINYINT 类型，INT 不会自动转换为 TINYINT 类型，它会返回错误，除非使用 CAST 操作。</p>\n<p><strong><strong>1</strong>****<strong>）隐式类型转换规则如下</strong></strong> </p>\n<p>（1）任何整数类型都可以隐式地转换为一个范围更广的类型，如 TINYINT 可以转换成 INT，INT 可以转换成 BIGINT。</p>\n<p>（2）所有整数类型、FLOAT 和 STRING 类型都可以隐式地转换成 DOUBLE。</p>\n<p>（3）TINYINT、SMALLINT、INT 都可以转换为 FLOAT。</p>\n<p>（4）BOOLEAN 类型不可以转换为任何其它的类型。</p>\n<p><strong><strong>2</strong>****<strong>）可以使用</strong></strong> <strong><strong>CAST</strong></strong> <strong><strong>操作显示进行数据类型转换</strong></strong> </p>\n<p>例如 CAST(‘1’ AS INT)将把字符串’1’ 转换成整数 1；如果强制类型转换失败，如执行CAST(‘X’ AS INT)，表达式返回空值 NULL。</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">0: jdbc:hive2://hadoop102:10000&gt; select '1'+2, cast('1'as int) + 2;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">+------+------+--+</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">| _c0 | _c1 |</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">+------+------+--+</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">| 3.0 | 3 |</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">+------+------+--+</span></p></td></tr></tbody></table>\n\n<h2 id=\"第4章-DDL数据定义\"><a href=\"#第4章-DDL数据定义\" class=\"headerlink\" title=\"第4章 DDL数据定义\"></a><strong><strong><strong>第4章 DDL数据定义</strong></strong></strong></h2><h3 id=\"4-1-创建数据库\"><a href=\"#4-1-创建数据库\" class=\"headerlink\" title=\"4.1 创建数据库\"></a><strong><strong><strong>4.1 创建数据库</strong></strong></strong></h3><table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">CREATE DATABASE [IF NOT EXISTS] database_name</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">[COMMENT database_comment]</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">[LOCATION hdfs_path]</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">[WITH DBPROPERTIES (property_name=property_value, ...)];</span></p></td></tr></tbody></table>\n\n<p>1）创建一个数据库，数据库在 HDFS 上的默认存储路径是&#x2F;user&#x2F;hive&#x2F;warehouse&#x2F;*.db。</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; create database db_hive;</span></p></td></tr></tbody></table>\n\n<p>2）避免要创建的数据库已经存在错误，增加 if not exists 判断。（标准写法）</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; create database db_hive;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">FAILED: Execution Error, return code 1 from</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">org.apache.hadoop.hive.ql.exec.DDLTask. Database db_hive already exists</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; create database if not exists db_hive;</span></p></td></tr></tbody></table>\n\n<p>3）创建一个数据库，指定数据库在 HDFS 上存放的位置</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; create database db_hive2 location '/db_hive2.db';</span></p></td></tr></tbody></table>\n\n<h3 id=\"4-2-查询数据库\"><a href=\"#4-2-查询数据库\" class=\"headerlink\" title=\"4.2 查询数据库\"></a><strong><strong><strong>4.2 查询数据库</strong></strong></strong></h3><h4 id=\"4-2-1-显示数据库\"><a href=\"#4-2-1-显示数据库\" class=\"headerlink\" title=\"4.2.1 显示数据库\"></a><strong><strong><strong>4.2.1 显示数据库</strong></strong></strong></h4><p>1）显示数据库</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive&gt; show databases;</span></p></td></tr></tbody></table>\n\n<p>2）过滤显示查询的数据库</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive&gt; show databases like 'db_hive*';</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">OK</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">db_hive</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">db_hive_1</span></p></td></tr></tbody></table>\n\n<h4 id=\"4-2-2-查看数据库详情\"><a href=\"#4-2-2-查看数据库详情\" class=\"headerlink\" title=\"4.2.2 查看数据库详情\"></a><strong><strong><strong>4.2.2 查看数据库详情</strong></strong></strong></h4><p><strong><strong>1）显示数据库信息</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive&gt; desc database db_hive;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">OK</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">db_hive</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hdfs://hadoop102:9820/user/hive/warehouse/db_hive.db</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">atguiguUSER</span></p></td></tr></tbody></table>\n\n<p><strong><strong>2）显示数据库详细信息，</strong>****<strong>extended</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive&gt; desc database extend</span></p></td></tr></tbody></table>\n\n<h4 id=\"4-2-3-切换当前数据库\"><a href=\"#4-2-3-切换当前数据库\" class=\"headerlink\" title=\"4.2.3 切换当前数据库\"></a><strong><strong><strong>4.2.3 切换当前数据库</strong></strong></strong></h4><table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; use db_hive;</span></p></td></tr></tbody></table>\n\n<h3 id=\"4-3-修改数据库\"><a href=\"#4-3-修改数据库\" class=\"headerlink\" title=\"4.3 修改数据库\"></a><strong><strong><strong>4.3 修改数据库</strong></strong></strong></h3><p>用户可以使用 ALTER DATABASE 命令为某个数据库的 DBPROPERTIES 设置键-值对属性值，来描述这个数据库的属性信息。</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; alter database db_hive</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">set dbproperties('createtime'='20170830');</span></p></td></tr></tbody></table>\n\n<p>在 hive 中查看修改结果</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive&gt; desc database extended db_hive;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">db_name comment location owner_name owner_type parameters</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">db_hive hdfs://hadoop102:9820/user/hive/warehouse/db_hive.db</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">atguigu USER {createtime=20170830}</span></p></td></tr></tbody></table>\n\n<h3 id=\"4-4-删除数据库\"><a href=\"#4-4-删除数据库\" class=\"headerlink\" title=\"4.4 删除数据库\"></a><strong><strong><strong>4.4 删除数据库</strong></strong></strong></h3><p><strong><strong>1）删除空数据库</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive&gt;drop database db_hive2;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>2）如果删除的数据库不存在，最好采用</strong></strong> <strong><strong>if exists</strong></strong> <strong><strong>判断数据库是否存在</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive&gt; drop database db_hive;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">FAILED: SemanticException [Error 10072]: Database does not exist: db_hive</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive&gt; drop database if exists db_hive2;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>3）如果数据库不为空，可以采用</strong></strong> <strong><strong>cascade</strong></strong> <strong><strong>命令，强制删除</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive&gt; drop database db_hive;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">FAILED: Execution Error, return code 1 from</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">org.apache.hadoop.hive.ql.exec.DDLTask.</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">InvalidOperationException(message:Database db_hive is not empty. One or</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">more tables exist.)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive&gt; drop database db_hive cascade;</span></p></td></tr></tbody></table>\n\n<h3 id=\"4-5-创建表\"><a href=\"#4-5-创建表\" class=\"headerlink\" title=\"4.5 创建表\"></a><strong><strong><strong>4.5 创建表</strong></strong></strong></h3><p><strong><strong>1）建表语法</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">CREATE [EXTERNAL] TABLE [IF NOT EXISTS] table_name</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">[(col_name data_type [COMMENT col_comment], ...)]</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">[COMMENT table_comment]</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">[PARTITIONED BY (col_name data_type [COMMENT col_comment], ...)]</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">[CLUSTERED BY (col_name, col_name, ...)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">[SORTED BY (col_name [ASC|DESC], ...)] INTO num_buckets BUCKETS]</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">[ROW FORMAT row_format]</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">[STORED AS file_format]</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">[LOCATION hdfs_path]</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">[TBLPROPERTIES (property_name=property_value, ...)]</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">[AS select_statement]</span></p></td></tr></tbody></table>\n\n<p><strong><strong>2）字段解释说明</strong></strong></p>\n<p>（1）CREATE TABLE 创建一个指定名字的表。如果相同名字的表已经存在，则抛出异常；</p>\n<p>用户可以用 IF NOT EXISTS 选项来忽略这个异常。</p>\n<p>（2）EXTERNAL 关键字可以让用户创建一个外部表，在建表的同时可以指定一个指向实 际数据的路径（LOCATION），在删除表的时候，内部表的元数据和数据会被一起删除，而外 部表只删除元数据，不删除数据。</p>\n<p>（3）COMMENT：为表和列添加注释。</p>\n<p>（4）PARTITIONED BY 创建分区表</p>\n<p>（5）CLUSTERED BY 创建分桶表</p>\n<p>（6）SORTED BY 不常用，对桶中的一个或多个列另外排序</p>\n<p>（7）ROW FORMAT</p>\n<p>DELIMITED [FIELDS TERMINATED BY char] [COLLECTION ITEMS TERMINATED BY char]</p>\n<p>[MAP KEYS TERMINATED BY char] [LINES TERMINATED BY char]</p>\n<p>| SERDE serde_name [WITH SERDEPROPERTIES (property_name&#x3D;property_value,</p>\n<p>property_name&#x3D;property_value, …)]</p>\n<p>用户在建表的时候可以自定义 SerDe 或者使用自带的 SerDe。如果没有指定 ROW FORMAT 或者 ROW FORMAT DELIMITED，将会使用自带的 SerDe。在建表的时候，用户还需要为表指定列，用户在指定表的列的同时也会指定自定义的 SerDe，Hive 通过 SerDe 确定表 的具体的列的数据。</p>\n<p>SerDe 是 Serialize&#x2F;Deserilize 的简称， hive 使用 Serde 进行行对象的序列与反序列化。</p>\n<p>（8）STORED AS 指定存储文件类型</p>\n<p>常用的存储文件类型：SEQUENCEFILE（二进制序列文件）、TEXTFILE（文本）、RCFILE（列 式存储格式文件） 如果文件数据是纯文本，可以使用STORED AS TEXTFILE。如果数据需要压缩，使用 STORED AS SEQUENCEFILE。</p>\n<p>（9）LOCATION ：指定表在 HDFS 上的存储位置。</p>\n<p>（10）AS：后跟查询语句，根据查询结果创建表。</p>\n<p>（11）LIKE 允许用户复制现有的表结构，但是不复制数据。 </p>\n<h4 id=\"4-5-1-管理表\"><a href=\"#4-5-1-管理表\" class=\"headerlink\" title=\"4.5.1 管理表\"></a><strong><strong><strong>4.5.1 管理表</strong></strong></strong></h4><p><strong><strong>1）理论</strong></strong></p>\n<p>默认创建的表都是所谓的管理表，有时也被称为内部表。因为这种表，Hive 会（或多或 少地）控制着数据的生命周期。Hive 默认情况下会将这些表的数据存储在由配置项hive.metastore.warehouse.dir(例如，&#x2F;user&#x2F;hive&#x2F;warehouse)所定义的目录的子目录下。</p>\n<p>当我们删除一个管理表时，Hive 也会删除这个表中数据。管理表不适合和其他工具共享数据。 </p>\n<p><strong><strong>2）案例实操</strong></strong></p>\n<p>（0）原始数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1001 ss1</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1002 ss2</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1003 ss3</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1004 ss4</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1005 ss5</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1006 ss6</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1007 ss7</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1008 ss8</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1009 ss9</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1010 ss10</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1011 ss11</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1012 ss12</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1013 ss13</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1014 ss14</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1015 ss15</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1016 ss16</span></p></td></tr></tbody></table>\n\n<table border=\"1\" cellspacing=\"0\" style=\"margin-left:6.75pt;\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table if not exists student(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">id int, name string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">row format delimited fields terminated by '\\t'</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">stored as textfile</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">location '/user/hive/warehouse/student';</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<p>（1）普通创建表</p>\n<p>（2）根据查询结果创建表（查询的结果会添加到新创建的表中）</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table if not exists student2 as select id, name from student;</span></p></td></tr></tbody></table>\n\n<p>（3）根据已经存在的表结构创建表</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table if not exists student3 like student;</span></p></td></tr></tbody></table>\n\n<h4 id=\"4-5-2-外部表\"><a href=\"#4-5-2-外部表\" class=\"headerlink\" title=\"4.5.2 外部表\"></a><strong><strong><strong>4.5.2 外部表</strong></strong></strong></h4><p><strong><strong>1）理论</strong></strong></p>\n<p>因为表是外部表，所以 Hive 并非认为其完全拥有这份数据。删除该表并不会删除掉这份数据，不过描述表的元数据信息会被删除掉。</p>\n<p><strong><strong>2</strong>****<strong>）管理表和外部表的使用场景</strong></strong></p>\n<p>每天将收集到的网站日志定期流入 HDFS 文本文件。在外部表（原始日志表）的基础上 做大量的统计分析，用到的中间表、结果表使用内部表存储，数据通过 SELECT+INSERT 进入内部表。</p>\n<p><strong><strong>3</strong>****<strong>）案例实操</strong></strong></p>\n<p>分别创建部门和员工外部表，并向表中导入数据。</p>\n<p>（0）原始数据</p>\n<p>dept:</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">10 ACCOUNTING 1700</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">20 RESEARCH 1800</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">30 SALES 1900</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">40 OPERATIONS 1700</span></p></td></tr></tbody></table>\n\n<p>emp： </p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7369 SMITH CLERK 7902 1980-12-17 800.00 20</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7499 ALLEN SALESMAN 7698 1981-2-20 1600.00 300.00 30</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7521 WARD SALESMAN 7698 1981-2-22 1250.00 500.00 30</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7566 JONES MANAGER 7839 1981-4-2 2975.00 20</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7654 MARTIN SALESMAN 7698 1981-9-28 1250.00 1400.00 30</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7698 BLAKE MANAGER 7839 1981-5-1 2850.00 30</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7782 CLARK MANAGER 7839 1981-6-9 2450.00 10</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7788 SCOTT ANALYST 7566 1987-4-19 3000.00 20</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7839 KING PRESIDENT 1981-11-17 5000.00 10</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7844 TURNER SALESMAN 7698 1981-9-8 1500.00 0.00 30</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7876 ADAMS CLERK 7788 1987-5-23 1100.00 20</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7900 JAMES CLERK 7698 1981-12-3 950.00 30</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7902 FORD ANALYST 7566 1981-12-3 3000.00 20</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7934 MILLER CLERK 7782 1982-1-23 1300.00 10</span></p></td></tr></tbody></table>\n\n<p>（1）上传数据到 HDFS</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; dfs -mkdir /student;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; dfs -put </span><span style=\"color:#000000;\">/usr/local/soft/data</span><span style=\"color:#000000;\">s/student.txt /student;</span></p></td></tr></tbody></table>\n\n<p>（2）建表语句，创建外部表</p>\n<p>创建部门表</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create external table if not exists dept(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">deptno int,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">dname string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">loc int</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">row format delimited fields terminated by '\\t';</span></p></td></tr></tbody></table>\n\n<p>创建员工表</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create external table if not exists emp(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">empno int,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">ename string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">job string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">mgr int,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hiredate string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">sal double,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">comm double,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">deptno int)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">row format delimited fields terminated by '\\t';</span></p></td></tr></tbody></table>\n\n<p>（3）查看创建的表</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt;show tables;</span></p></td></tr></tbody></table>\n\n<p>（4）查看表格式化数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; desc formatted dept;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Table Type: EXTERNAL_TABLE</span></p></td></tr></tbody></table>\n\n<p>（5）删除外部表</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; drop table dept;</span></p></td></tr></tbody></table>\n\n<p>外部表删除后，hdfs 中的数据还在，但是 metadata 中 dept 的元数据已被删除</p>\n<h4 id=\"4-5-3-管理表与外部表的互相转换\"><a href=\"#4-5-3-管理表与外部表的互相转换\" class=\"headerlink\" title=\"4.5.3 管理表与外部表的互相转换\"></a><strong><strong><strong>4.5.3 管理表与外部表的互相转换</strong></strong></strong></h4><p>（1）查询表的类型</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; desc formatted student2;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Table Type: MANAGED_TABLE</span></p></td></tr></tbody></table>\n\n<p>（2）修改内部表 student2 为外部表</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">alter table student2 set tblproperties('EXTERNAL'='TRUE');</span></p></td></tr></tbody></table>\n\n<p>（3）查询表的类型</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; desc formatted student2;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Table Type: EXTERNAL_TABLE</span></p></td></tr></tbody></table>\n\n<p>（4）修改外部表 student2 为内部表</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">alter table student2 set tblproperties('EXTERNAL'='FALSE');</span></p></td></tr></tbody></table>\n\n<p>（5）查询表的类型</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; desc formatted student2;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Table Type: MANAGED_TABLE</span></p></td></tr></tbody></table>\n\n<p>注意：(‘EXTERNAL’&#x3D;’TRUE’)和(‘EXTERNAL’&#x3D;’FALSE’)为固定写法，区分大小写！</p>\n<h3 id=\"4-6-修改表\"><a href=\"#4-6-修改表\" class=\"headerlink\" title=\"4.6 修改表\"></a><strong><strong><strong>4.6 修改表</strong></strong></strong></h3><h4 id=\"4-6-1-重命名表\"><a href=\"#4-6-1-重命名表\" class=\"headerlink\" title=\"4.6.1 重命名表\"></a><strong><strong><strong>4.6.1</strong></strong> <strong><strong>重命名表</strong></strong></strong></h4><p><strong><strong>1）语法</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">ALTER TABLE table_name RENAME TO new_table_name</span></p></td></tr></tbody></table>\n\n<p><strong><strong>2）实操案例</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; alter table dept_partition2 rename to dept_partition3;</span></p></td></tr></tbody></table>\n\n<h4 id=\"4-6-2-增加、修改和删除表分区\"><a href=\"#4-6-2-增加、修改和删除表分区\" class=\"headerlink\" title=\"4.6.2 增加、修改和删除表分区\"></a><strong><strong><strong>4.6.2</strong></strong> <strong><strong>增加、修改和删除表分区</strong></strong></strong></h4><p>见后面章节分区表基本操作</p>\n<h4 id=\"4-6-3-增加-修改-替换列信息\"><a href=\"#4-6-3-增加-修改-替换列信息\" class=\"headerlink\" title=\"4.6.3 增加**&#x2F;修改&#x2F;**替换列信息\"></a><strong><strong><strong>4.6.3 增加</strong></strong></strong>**&#x2F;<strong><strong><strong><strong>修改</strong></strong></strong></strong>&#x2F;**<strong><strong><strong>替换列信息</strong></strong></strong></h4><p><strong><strong>1）语法</strong></strong></p>\n<p>（1）更新列</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">ALTER TABLE table_name </span><span style=\"color:#000000;\">CHANGE [COLUMN] col_old_name col_new_name</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">column_type [COMMENT col_comment] [FIRST|AFTER column_name]</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<p>（2）增加和替换列</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">ALTER TABLE table_name </span><span style=\"color:#000000;\">ADD|REPLACE COLUMNS (col_name data_type [COMMENT</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">col_comment], ...)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<p>注：ADD 是代表新增一字段，字段位置在所有列后面(partition 列前)，REPLACE 则是表示替换表中所有字段。</p>\n<p><strong><strong>2）实操案例</strong></strong></p>\n<p>（1）查询表结构</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive&gt; desc dept;</span></p></td></tr></tbody></table>\n\n<p>（2）添加列</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; alter table dept add columns(deptdesc string);</span></p></td></tr></tbody></table>\n\n<p>（3）查询表结构</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive&gt; desc dept;</span></p></td></tr></tbody></table>\n\n<p>（4）更新列</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; alter table dept change column deptdesc desc string;</span></p></td></tr></tbody></table>\n\n<p>（5）查询表结构</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive&gt; desc dept;</span></p></td></tr></tbody></table>\n\n<p>（6）替换列</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; alter table dept replace columns(deptno string, dname</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">string, loc string);</span></p></td></tr></tbody></table>\n\n<p>（7）查询表结构</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive&gt; desc dept;</span></p></td></tr></tbody></table>\n\n<h3 id=\"4-7-删除表\"><a href=\"#4-7-删除表\" class=\"headerlink\" title=\"4.7 删除表\"></a><strong><strong><strong>4.7 删除表</strong></strong></strong></h3><table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; drop table dept;</span></p></td></tr></tbody></table>\n\n<h2 id=\"第5章-DML-数据操作\"><a href=\"#第5章-DML-数据操作\" class=\"headerlink\" title=\"第5章 DML 数据操作\"></a><strong><strong><strong>第5章 DML</strong></strong> <strong><strong>数据操作</strong></strong></strong></h2><h3 id=\"5-1-数据导入\"><a href=\"#5-1-数据导入\" class=\"headerlink\" title=\"5.1 数据导入\"></a><strong><strong><strong>5.1 数据导入</strong></strong></strong></h3><h4 id=\"5-1-1-向表中装载数据（Load）\"><a href=\"#5-1-1-向表中装载数据（Load）\" class=\"headerlink\" title=\"5.1.1 向表中装载数据（Load）\"></a><strong><strong><strong>5.1.1 向表中装载数据（Load）</strong></strong></strong></h4><p><strong><strong>1）语法</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive&gt; load data [local] inpath '数据的 </span><span style=\"color:#000000;\">path' [overwrite] into table</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">student [partition (partcol1=val1,…)];</span></p></td></tr></tbody></table>\n\n<p>（1）load data:表示加载数据</p>\n<p>（2）local:表示从本地加载数据到 hive 表；否则从 HDFS 加载数据到 hive 表</p>\n<p>（3）inpath:表示加载数据的路径</p>\n<p>（4）overwrite:表示覆盖表中已有数据，否则表示追加</p>\n<p>（5）into table:表示加载到哪张表</p>\n<p>（6）student:表示具体的表</p>\n<p>（7）partition:表示上传到指定分区</p>\n<p><strong><strong>2）实操案例</strong></strong></p>\n<p>（0）创建一张表</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; create table student(id string, name string) row format</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">delimited fields terminated by '\\t';</span></p></td></tr></tbody></table>\n\n<p>（1）加载本地文件到 hive</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; load data local inpath</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">'/opt/module/hive/datas/student.txt' into table default.student;</span></p></td></tr></tbody></table>\n\n<p>（2）加载 HDFS 文件到 hive 中</p>\n<p>上传文件到 HDFS</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; dfs -put /usr/local/soft/datastudent.txt</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">/user/atguigu/hive;</span></p></td></tr></tbody></table>\n\n<p>加载 HDFS 上数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; load data inpath '/user/atguigu/hive/student.txt' into</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">table default.student;</span></p></td></tr></tbody></table>\n\n<p>（3）加载数据覆盖表中已有的数据</p>\n<p>上传文件到 HDFS</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; dfs -put /usr/local/soft/data/student.txt /user/atguigu/hive;</span></p></td></tr></tbody></table>\n\n<p>加载数据覆盖表中已有的数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; load data inpath '/user/atguigu/hive/student.txt'</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">overwrite into table default.student;</span></p></td></tr></tbody></table>\n\n<h4 id=\"5-1-2-通过查询语句向表中插入数据（Insert）\"><a href=\"#5-1-2-通过查询语句向表中插入数据（Insert）\" class=\"headerlink\" title=\"5.1.2 通过查询语句向表中插入数据（Insert）\"></a><strong><strong><strong>5.1.2 通过查询语句向表中插入数据（</strong></strong></strong><strong>Insert</strong><strong><strong><strong>）</strong></strong></strong></h4><p><strong><strong>1）创建一张表</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; create table student_par(id int, name string) row format</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">delimited fields terminated by '\\t';</span></p></td></tr></tbody></table>\n\n<p><strong><strong>2）基本插入数据</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; insert into table student_par</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">values(1,'wangwu'),(2,'zhaoliu');</span></p></td></tr></tbody></table>\n\n<p><strong><strong>3）基本模式插入（根据单张表查询结果）</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; insert overwrite table student_par</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select id, name from student where month='201709';</span></p></td></tr></tbody></table>\n\n<p>insert into：以追加数据的方式插入到表或分区，原有数据不会删除</p>\n<p>insert overwrite：会覆盖表中已存在的数据</p>\n<p>注意：insert 不支持插入部分字段</p>\n<p><strong><strong>4）多表（多分区）插入模式（根据多张表查询结果）</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; from student</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">insert overwrite table student partition(month='201707')</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select id, name where month='201709'</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">insert overwrite table student partition(month='201706')</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select id, name where month='201709';</span></p></td></tr></tbody></table>\n\n<h4 id=\"5-1-3-查询语句中创建表并加载数据（As-Select）\"><a href=\"#5-1-3-查询语句中创建表并加载数据（As-Select）\" class=\"headerlink\" title=\"5.1.3 查询语句中创建表并加载数据（As Select）\"></a><strong><strong><strong>5.1.3 查询语句中创建表并加载数据（</strong></strong></strong><strong>As Select</strong><strong><strong><strong>）</strong></strong></strong></h4><p>详见 4.5.1 章创建表。</p>\n<p>根据查询结果创建表（查询的结果会添加到新创建的表中）</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table if not exists student3</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">as select id, name from student;</span></p></td></tr></tbody></table>\n\n<h4 id=\"5-1-4-创建表时通过-Location-指定加载数据路径\"><a href=\"#5-1-4-创建表时通过-Location-指定加载数据路径\" class=\"headerlink\" title=\"5.1.4 创建表时通过 Location 指定加载数据路径\"></a><strong><strong><strong>5.1.4 创建表时通过</strong></strong> <strong><strong>Location</strong></strong> <strong><strong>指定加载数据路径</strong></strong></strong></h4><p><strong><strong>1）上传数据到</strong></strong> <strong><strong>hdfs</strong></strong> <strong><strong>上</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; dfs -mkdir /student;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; dfs -put </span><span style=\"color:#000000;\">/usr/local/soft/data</span><span style=\"color:#000000;\">s/student.txt /student;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>2）创建表，并指定在</strong></strong> <strong><strong>hdfs</strong></strong> <strong><strong>上的位置</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; create </span><span style=\"color:#000000;\">external table if not exists student5(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">id int, name string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">row format delimited fields terminated by '\\t'</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">location '/student;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>3）查询数据</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select * from student5;</span></p></td></tr></tbody></table>\n\n<h4 id=\"5-1-5-Import-数据到指定-Hive-表中\"><a href=\"#5-1-5-Import-数据到指定-Hive-表中\" class=\"headerlink\" title=\"5.1.5 Import 数据到指定 Hive 表中\"></a><strong><strong><strong>5.1.5 Import 数据到指定</strong></strong> <strong><strong>Hive</strong></strong> <strong><strong>表中</strong></strong></strong></h4><p>注意：先用 export 导出后，再将数据导入。 </p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; import table student2</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">from '/user/hive/warehouse/export/student';</span></p></td></tr></tbody></table>\n\n<h3 id=\"5-2-数据导出\"><a href=\"#5-2-数据导出\" class=\"headerlink\" title=\"5.2 数据导出\"></a><strong><strong><strong>5.2 数据导出</strong></strong></strong></h3><h4 id=\"5-2-1-Insert-导出\"><a href=\"#5-2-1-Insert-导出\" class=\"headerlink\" title=\"5.2.1 Insert 导出\"></a><strong><strong><strong>5.2.1 Insert</strong></strong> <strong><strong>导出</strong></strong></strong></h4><table border=\"1\" cellspacing=\"0\" style=\"margin-left:6.75pt;\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; insert overwrite local directory</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">'</span><span style=\"color:#000000;\">/usr/local/soft/data</span><span style=\"color:#000000;\">export/student'</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select * from student;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>1）将查询的结果导出到本地</strong></strong></p>\n<p><strong><strong>2）将查询的结果格式化导出到本地</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive(default)&gt;insert overwrite local directory</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">'</span><span style=\"color:#000000;\">/usr/local/soft/data</span><span style=\"color:#000000;\">export/student1'</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">ROW FORMAT DELIMITED FIELDS TERMINATED BY '\\t'</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select * from student;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>3）将查询的结果导出到</strong></strong> <strong><strong>HDFS</strong></strong> <strong><strong>上</strong><strong><strong><strong>(</strong></strong></strong><strong>没有</strong></strong> <strong><strong>local)</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; insert overwrite directory '/user/atguigu/student2'</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">ROW FORMAT DELIMITED FIELDS TERMINATED BY '\\t'</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select * from student;</span></p></td></tr></tbody></table>\n\n<h4 id=\"5-2-2-Hadoop-命令导出到本地\"><a href=\"#5-2-2-Hadoop-命令导出到本地\" class=\"headerlink\" title=\"5.2.2 Hadoop 命令导出到本地\"></a><strong><strong><strong>5.2.2 Hadoop</strong></strong> <strong><strong>命令导出到本地</strong></strong></strong></h4><table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; dfs -get /user/hive/warehouse/student/student.txt</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">/usr/local/soft/data</span><span style=\"color:#000000;\">/export/student3.txt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<h4 id=\"5-2-3-Hive-Shell-命令导出\"><a href=\"#5-2-3-Hive-Shell-命令导出\" class=\"headerlink\" title=\"5.2.3 Hive Shell 命令导出\"></a><strong><strong><strong>5.2.3 Hive Shell</strong></strong> <strong><strong>命令导出</strong></strong></strong></h4><p><strong><strong>基本语法：（hive -f&#x2F;-e 执行语句或者脚本</strong></strong> <strong><strong>&gt; file</strong>****<strong>）</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">[root@master hive]$ bin/hive -e 'select * from default.student;' &gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">/usr/local/soft/data</span><span style=\"color:#000000;\">export/student4.txt;</span></p></td></tr></tbody></table>\n\n<h4 id=\"5-2-4-Export-导出到-HDFS-上\"><a href=\"#5-2-4-Export-导出到-HDFS-上\" class=\"headerlink\" title=\"5.2.4 Export 导出到 HDFS 上\"></a><strong><strong><strong>5.2.4 Export</strong></strong> <strong><strong>导出到</strong></strong> <strong><strong>HDFS</strong></strong> <strong><strong>上</strong></strong></strong></h4><table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">(defahiveult)&gt; export table default.student</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">to '/user/hive/warehouse/export/student';</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<p>export 和 import 主要用于两个 Hadoop 平台集群之间 Hive 表迁移。</p>\n<h4 id=\"5-2-5-Sqoop-导出\"><a href=\"#5-2-5-Sqoop-导出\" class=\"headerlink\" title=\"5.2.5 Sqoop 导出\"></a><strong><strong><strong>5.2.5 Sqoop</strong></strong> <strong><strong>导出</strong></strong></strong></h4><p>安装参考：<a href=\"https://blog.csdn.net/cjwfinal/article/details/120422227\" title=\"Sqoop安装_小白文的博客-CSDN博客_sqoop安装\">Sqoop安装_小白文的博客-CSDN博客_sqoop安装</a></p>\n<p>使用参考：<a href=\"https://blog.csdn.net/healthsun/article/details/128309135\" title=\"sqoop导入mysql数据到Hive的各种方案_mysql数据导入到hive_海阔天空&amp;沫语的博客-CSDN博客\">sqoop导入mysql数据到Hive的各种方案_mysql数据导入到hive_海阔天空&amp;沫语的博客-CSDN博客</a> </p>\n<h4 id=\"5-2-6-清除表中数据（Truncate）\"><a href=\"#5-2-6-清除表中数据（Truncate）\" class=\"headerlink\" title=\"5.2.6 清除表中数据（Truncate）\"></a><strong><strong><strong>5.2.6</strong></strong> <strong><strong>清除表中数据（</strong></strong></strong><strong>Truncate</strong><strong><strong><strong>）</strong></strong></strong></h4><p>注意：Truncate 只能删除管理表，不能删除外部表中数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; truncate table student;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<h2 id=\"第-6-章-查询\"><a href=\"#第-6-章-查询\" class=\"headerlink\" title=\"第 6 章 查询\"></a><strong><strong><strong>第 6 章 查询</strong></strong></strong></h2><p><a href=\"https://cwiki.apache.org/confluence/display/Hive/LanguageManual+Select\">https://cwiki.apache.org/confluence/display/Hive/LanguageManual+Select</a></p>\n<p>查询语句语法：</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">SELECT [ALL | DISTINCT] select_expr, select_expr, ...</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">FROM table_reference</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">[WHERE where_condition]</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">[GROUP BY col_list]</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">[ORDER BY col_list]</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">[CLUSTER BY col_list</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">| [DISTRIBUTE BY col_list] [SORT BY col_list]</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">]</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">[LIMIT number]</span></p></td></tr></tbody></table>\n\n<h3 id=\"6-1-基本查询（Select…From）\"><a href=\"#6-1-基本查询（Select…From）\" class=\"headerlink\" title=\"6.1 基本查询（Select…From）\"></a><strong><strong><strong>6.1 基本查询（Select…From）</strong></strong></strong></h3><h4 id=\"6-1-1-全表和特定列查询\"><a href=\"#6-1-1-全表和特定列查询\" class=\"headerlink\" title=\"6.1.1 全表和特定列查询\"></a><strong><strong><strong>6.1.1 全表和特定列查询</strong></strong></strong></h4><p><strong><strong>0）数据准备</strong></strong></p>\n<p>（0）原始数据</p>\n<p>dept:</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">10 ACCOUNTING 1700</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">20 RESEARCH 1800</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">30 SALES 1900</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">40 OPERATIONS 1700</span></p></td></tr></tbody></table>\n\n<p>emp：</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7369 SMITH CLERK 7902 1980-12-17 800.00 20</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7499 ALLEN SALESMAN 7698 1981-2-20 1600.00 300.00 30</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7521 WARD SALESMAN 7698 1981-2-22 1250.00 500.00 30</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7566 JONES MANAGER 7839 1981-4-2 2975.00 20</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7654 MARTIN SALESMAN 7698 1981-9-28 1250.00 1400.00 30</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7698 BLAKE MANAGER 7839 1981-5-1 2850.00 30</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7782 CLARK MANAGER 7839 1981-6-9 2450.00 10</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7788 SCOTT ANALYST 7566 1987-4-19 3000.00 20</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7839 KING PRESIDENT 1981-11-17 5000.00 10</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7844 TURNER SALESMAN 7698 1981-9-8 1500.00 0.00 30</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7876 ADAMS CLERK 7788 1987-5-23 1100.00 20</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7900 JAMES CLERK 7698 1981-12-3 950.00 30</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7902 FORD ANALYST 7566 1981-12-3 3000.00 20</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">7934 MILLER CLERK 7782 1982-1-23 1300.00 10</span></p></td></tr></tbody></table>\n\n<p>（1）创建部门表</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table if not exists dept(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">deptno int,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">dname string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">loc int</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">row format delimited fields terminated by '\\t';</span></p></td></tr></tbody></table>\n\n<p>（2）创建员工表</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table if not exists emp(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">empno int,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">ename string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">job string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">mgr int,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hiredate string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">sal double,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">comm double,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">deptno int)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">row format delimited fields terminated by '\\t';</span></p></td></tr></tbody></table>\n\n<p>（3）导入数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">load data local inpath '</span><span style=\"color:#000000;\">/usr/local/soft/data</span><span style=\"color:#000000;\">s/dept.txt' into table</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">dept;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">load data local inpath '</span><span style=\"color:#000000;\">/usr/local/soft/data</span><span style=\"color:#000000;\">s/emp.txt' into table emp;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>1）全表查询</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select * from emp;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select empno,ename,job,mgr,hiredate,sal,comm,deptno from emp ;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>2）选择特定列查询</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select empno, ename from emp;</span></p></td></tr></tbody></table>\n\n<p>注意：</p>\n<p>（1）SQL 语言大小写不敏感。</p>\n<p>（2）SQL 可以写在一行或者多行</p>\n<p>（3）关键字不能被缩写也不能分行</p>\n<p>（4）各子句一般要分行写。</p>\n<p>（5）使用缩进提高语句的可读性。</p>\n<h4 id=\"6-1-2-列别名\"><a href=\"#6-1-2-列别名\" class=\"headerlink\" title=\"6.1.2 列别名\"></a><strong><strong><strong>6.1.2</strong></strong> <strong><strong>列别名</strong></strong></strong></h4><p><strong><strong>1</strong>****<strong>）重命名一个列</strong></strong></p>\n<p><strong><strong>2</strong>****<strong>）便于计算</strong></strong></p>\n<p><strong><strong>3</strong><strong><strong><strong>）紧跟列名，也可以在列名和别名之间加入关键字‘</strong></strong></strong><strong>AS</strong>****<strong>’</strong></strong></p>\n<p><strong><strong>4</strong>****<strong>）案例实操</strong></strong></p>\n<p>查询名称和部门</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select ename AS name, deptno dn from emp;</span></p></td></tr></tbody></table>\n\n<h4 id=\"6-1-3-算术运算符\"><a href=\"#6-1-3-算术运算符\" class=\"headerlink\" title=\"6.1.3 算术运算符\"></a><strong><strong><strong>6.1.3 算术运算符</strong></strong></strong></h4><p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/c78de353f84fbc84bad2931aa48070da.png\"></p>\n<h4 id=\"6-1-4-常用函数\"><a href=\"#6-1-4-常用函数\" class=\"headerlink\" title=\"6.1.4 常用函数\"></a><strong><strong><strong>6.1.4</strong></strong> <strong><strong>常用函数</strong></strong></strong></h4><p><strong><strong>1）求总行数（count）</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select count(*) cnt from emp;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>2）求工资的最大值（</strong><strong><strong><strong>max</strong></strong></strong><strong>）</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select max(sal) max_sal from emp;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>3）求工资的最小值（</strong><strong><strong><strong>min</strong></strong></strong><strong>）</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select min(sal) min_sal from emp;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>4</strong><strong><strong><strong>）求工资的总和（</strong></strong></strong><strong>sum</strong>****<strong>）</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select sum(sal) sum_sal from emp;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>5</strong><strong><strong><strong>）求工资的平均值（</strong></strong></strong><strong>avg</strong>****<strong>）</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select avg(sal) avg_sal from emp;</span></p></td></tr></tbody></table>\n\n<h4 id=\"6-1-5-Limit-语句\"><a href=\"#6-1-5-Limit-语句\" class=\"headerlink\" title=\"6.1.5 Limit 语句\"></a><strong><strong><strong>6.1.5 Limit 语句</strong></strong></strong></h4><p>典型的查询会返回多行数据。LIMIT 子句用于限制返回的行数。</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select * from emp limit 5;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select * from emp limit 2;</span></p></td></tr></tbody></table>\n\n<h4 id=\"6-1-6-Where-语句\"><a href=\"#6-1-6-Where-语句\" class=\"headerlink\" title=\"6.1.6 Where 语句\"></a><strong><strong><strong>6.1.6 Where 语句</strong></strong></strong></h4><p><strong><strong>1）使用 WHERE 子句，将不满足条件的行过滤掉</strong></strong></p>\n<p><strong><strong>2）WHERE 子句紧随 FROM 子句</strong></strong></p>\n<p><strong><strong>3）案例实操</strong></strong></p>\n<p>查询出薪水大于 1000 的所有员工</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select * from emp where sal &gt;1000;</span></p></td></tr></tbody></table>\n\n<p>注意：where 子句中不能使用字段别名</p>\n<h4 id=\"6-1-7-比较运算符（Between-In-Is-Null）\"><a href=\"#6-1-7-比较运算符（Between-In-Is-Null）\" class=\"headerlink\" title=\"6.1.7 比较运算符（Between&#x2F;In&#x2F; Is Null）\"></a><strong><strong><strong>6.1.7 比较运算符（</strong></strong></strong><strong>Between&#x2F;In&#x2F; Is Null</strong><strong><strong><strong>）</strong></strong></strong></h4><p><strong><strong>1）下面表中描述了谓词操作符，这些操作符同样可以用于 JOIN…ON 和 HAVING 语句中</strong></strong></p>\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/3a3a5b67e7ad2df025afaa7c57572a0f.png\"></p>\n<h4 id=\"6-1-8-Like-和-RLike\"><a href=\"#6-1-8-Like-和-RLike\" class=\"headerlink\" title=\"6.1.8 Like 和 RLike\"></a><strong><strong><strong>6.1.8 Like 和 RLike</strong></strong></strong></h4><p><strong><strong>1）使用 LIKE 运算选择类似的值</strong></strong></p>\n<p><strong><strong>2）选择条件可以包含字符或数字:</strong></strong></p>\n<p>% 代表零个或多个字符(任意个字符)。</p>\n<p>_ 代表一个字符</p>\n<p><strong><strong>3）</strong>****<strong>RLIKE</strong></strong> <strong><strong>子句</strong></strong></p>\n<p>RLIKE 子句是 Hive 中这个功能的一个扩展，其可以通过 Java 的正则表达式这个更强大的语言来指定匹配条件</p>\n<h4 id=\"6-1-9-逻辑运算符（And-Or-Not）\"><a href=\"#6-1-9-逻辑运算符（And-Or-Not）\" class=\"headerlink\" title=\"6.1.9 逻辑运算符（And&#x2F;Or&#x2F;Not）\"></a><strong><strong><strong>6.1.9 逻辑运算符（</strong></strong></strong><strong>And&#x2F;Or&#x2F;Not</strong><strong><strong><strong>）</strong></strong></strong></h4><p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/411382f7b56b8ffa1599ec82e92f2045.png\"></p>\n<h3 id=\"6-2-分组\"><a href=\"#6-2-分组\" class=\"headerlink\" title=\"6.2 分组\"></a><strong><strong><strong>6.2 分组</strong></strong></strong></h3><h4 id=\"6-2-1-Group-By-语句\"><a href=\"#6-2-1-Group-By-语句\" class=\"headerlink\" title=\"6.2.1 Group By 语句\"></a><strong><strong><strong>6.2.1 Group By 语句</strong></strong></strong></h4><p>GROUP BY 语句通常会和聚合函数一起使用，按照一个或者多个列队结果进行分组，然后对每个组执行聚合操作。</p>\n<h4 id=\"6-2-2-Having-语句\"><a href=\"#6-2-2-Having-语句\" class=\"headerlink\" title=\"6.2.2 Having 语句\"></a><strong><strong><strong>6.2.2 Having</strong></strong> <strong><strong>语句</strong></strong></strong></h4><p><strong><strong>1）having 与 where 不同点</strong></strong></p>\n<p>（1）where 后面不能写分组函数，而 having 后面可以使用分组函数。</p>\n<p>（2）having 只用于 group by 分组统计语句。 </p>\n<h3 id=\"6-3-Join-语句\"><a href=\"#6-3-Join-语句\" class=\"headerlink\" title=\"6.3 Join 语句\"></a><strong><strong><strong>6.3 Join 语句</strong></strong></strong></h3><h4 id=\"6-3-1-等值-Join\"><a href=\"#6-3-1-等值-Join\" class=\"headerlink\" title=\"6.3.1 等值 Join\"></a><strong><strong><strong>6.3.1 等值 Join</strong></strong></strong></h4><p>Hive 支持通常的 SQL JOIN 语句。</p>\n<h4 id=\"6-3-2-表的别名\"><a href=\"#6-3-2-表的别名\" class=\"headerlink\" title=\"6.3.2 表的别名\"></a><strong><strong><strong>6.3.2 表的别名</strong></strong></strong></h4><p><strong><strong>1）好处</strong></strong></p>\n<p>（1）使用别名可以简化查询。</p>\n<p>（2）使用表名前缀可以提高执行效率。</p>\n<h4 id=\"6-3-3-内连接\"><a href=\"#6-3-3-内连接\" class=\"headerlink\" title=\"6.3.3 内连接\"></a><strong><strong><strong>6.3.3 内连接</strong></strong></strong></h4><table border=\"1\" cellspacing=\"0\" style=\"margin-left:6.75pt;\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select e.empno, e.ename, d.deptno from emp e join dept d on e.deptno = d.deptno;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<p>内连接：只有进行连接的两个表中都存在与连接条件相匹配的数据才会被保留下来。</p>\n<h4 id=\"6-3-4-左外连接\"><a href=\"#6-3-4-左外连接\" class=\"headerlink\" title=\"6.3.4 左外连接\"></a><strong><strong><strong>6.3.4 左外连接</strong></strong></strong></h4><p>左外连接：JOIN 操作符左边表中符合 WHERE 子句的所有记录将会被返回。</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select e.empno, e.ename, d.deptno from emp e left join</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">dept d on e.deptno = d.deptno;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<h4 id=\"6-3-5-右外连接\"><a href=\"#6-3-5-右外连接\" class=\"headerlink\" title=\"6.3.5 右外连接\"></a><strong><strong><strong>6.3.5 右外连接</strong></strong></strong></h4><p>右外连接：JOIN 操作符右边表中符合 WHERE 子句的所有记录将会被返回。</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select e.empno, e.ename, d.deptno from emp e right join</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">dept d on e.deptno = d.deptno;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<h4 id=\"6-3-6-满外连接\"><a href=\"#6-3-6-满外连接\" class=\"headerlink\" title=\"6.3.6 满外连接\"></a><strong><strong><strong>6.3.6 满外连接</strong></strong></strong></h4><p>满外连接：将会返回所有表中符合 WHERE 语句条件的所有记录。如果任一表的指定字段没有符合条件的值的话，那么就使用 NULL 值替代。 </p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select e.empno, e.ename, d.deptno from emp e full join</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">dept d on e.deptno = d.deptno;</span></p></td></tr></tbody></table>\n\n<h4 id=\"6-3-7-多表连接\"><a href=\"#6-3-7-多表连接\" class=\"headerlink\" title=\"6.3.7 多表连接\"></a><strong><strong><strong>6.3.7 多表连接</strong></strong></strong></h4><p>注意：连接 n 个表，至少需要 n-1 个连接条件。例如：连接三个表，至少需要两个连接条件。</p>\n<p>数据准备</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1700 Beijing</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1800 London</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1900 Tokyo</span></p></td></tr></tbody></table>\n\n<p><strong><strong>1）创建位置表</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table if not exists location(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">loc int,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">loc_name string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">row format delimited fields terminated by '\\t';</span></p></td></tr></tbody></table>\n\n<p><strong><strong>2）导入数据</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; load data local inpath '</span><span style=\"color:#000000;\">/usr/local/soft/data</span><span style=\"color:#000000;\">s/location.txt'</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">into table location;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>3</strong>****<strong>）多表连接查询</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt;SELECT e.ename, d.dname, l.loc_name</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">FROM emp e</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">JOIN dept d</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">ON d.deptno = e.deptno</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">JOIN location l</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">ON d.loc = l.loc;</span></p></td></tr></tbody></table>\n\n<p>大多数情况下，Hive 会对每对 JOIN 连接对象启动一个 MapReduce 任务。本例中会首先 启动一个 MapReduce job 对表 e 和表 d 进行连接操作，然后会再启动一个MapReduce job 将第一个 MapReduce job 的输出和表 l;进行连接操作。</p>\n<p>注意：为什么不是表 d 和表 l 先进行连接操作呢？这是因为 Hive 总是按照从左到右的顺序执行的。</p>\n<p>优化：当对 3 个或者更多表进行 join 连接时，如果每个 on 子句都使用相同的连接键的话，那么只会产生一个 MapReduce job。</p>\n<h4 id=\"6-3-8-笛卡尔积\"><a href=\"#6-3-8-笛卡尔积\" class=\"headerlink\" title=\"6.3.8 笛卡尔积\"></a><strong><strong><strong>6.3.8 笛卡尔积</strong></strong></strong></h4><p><strong><strong>1）笛卡尔集会在下面条件下产生</strong></strong></p>\n<p>（1）省略连接条件</p>\n<p>（2）连接条件无效</p>\n<p>（3）所有表中的所有行互相连接</p>\n<p><strong><strong>2）案例实操</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select empno, dname from emp, dept;</span></p></td></tr></tbody></table>\n\n<h3 id=\"6-4-排序\"><a href=\"#6-4-排序\" class=\"headerlink\" title=\"6.4 排序\"></a><strong><strong><strong>6.4 排序</strong></strong></strong></h3><h4 id=\"6-4-1-全局排序（Order-By）\"><a href=\"#6-4-1-全局排序（Order-By）\" class=\"headerlink\" title=\"6.4.1 全局排序（Order By）\"></a><strong><strong><strong>6.4.1 全局排序（Order By）</strong></strong></strong></h4><p>Order By：全局排序，只有一个 Reducer</p>\n<p><strong><strong>1）使用 ORDER BY 子句排序</strong></strong></p>\n<p>ASC（ascend）: 升序（默认）</p>\n<p>DESC（descend）: 降序</p>\n<p><strong><strong>2）ORDER BY</strong></strong> <strong><strong>子句在</strong></strong> <strong><strong>SELECT</strong></strong> <strong><strong>语句的结尾</strong></strong></p>\n<p><strong><strong>3</strong>****<strong>）案例实操</strong></strong></p>\n<p>（1）查询员工信息按工资升序排列</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select * from emp order by sal;</span></p></td></tr></tbody></table>\n\n<p>（2）查询员工信息按工资降序排列</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select * from emp order by sal desc;</span></p></td></tr></tbody></table>\n\n<h4 id=\"6-4-2-按照别名排序\"><a href=\"#6-4-2-按照别名排序\" class=\"headerlink\" title=\"**6.4.2 按照别名排序 **\"></a>**<strong><strong>6.4.2 按照别名排序</strong></strong> **</h4><p>按照员工薪水的 2 倍排序</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select ename, sal*2 twosal from emp order by twosal;</span></p></td></tr></tbody></table>\n\n<h4 id=\"6-4-3-多个列排序\"><a href=\"#6-4-3-多个列排序\" class=\"headerlink\" title=\"6.4.3 多个列排序\"></a><strong><strong><strong>6.4.3 多个列排序</strong></strong></strong></h4><p>按照部门和工资升序排序</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select ename, deptno, sal from emp order by deptno, sal;</span></p></td></tr></tbody></table>\n\n<h4 id=\"6-4-4-每个-Reduce-内部排序（Sort-By）\"><a href=\"#6-4-4-每个-Reduce-内部排序（Sort-By）\" class=\"headerlink\" title=\"6.4.4 每个 Reduce 内部排序（Sort By）\"></a><strong><strong><strong>6.4.4 每个</strong></strong> <strong><strong>Reduce</strong></strong> <strong><strong>内部排序（</strong></strong></strong><strong>Sort By</strong><strong><strong><strong>）</strong></strong></strong></h4><p>Sort By：对于大规模的数据集 order by 的效率非常低。在很多情况下，并不需要全局排序，此时可以使用 sort by。</p>\n<p>Sort by 为每个 reducer 产生一个排序文件。每个 Reducer 内部进行排序，对全局结果集 来说不是排序。</p>\n<p><strong><strong>1）设置 reduce 个数</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; set mapreduce.job.reduces=3;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>2）查看设置</strong></strong> <strong><strong>reduce</strong></strong> <strong><strong>个数</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; set mapreduce.job.reduces;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>3）根据部门编号降序查看员工信息</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select * from emp sort by deptno desc;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>4）将查询结果导入到文件中（按照部门编号降序排序）</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; insert overwrite local directory</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">'</span><span style=\"color:#000000;\">/usr/local/soft/data</span><span style=\"color:#000000;\">/sortby-result'</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select * from emp sort by deptno desc;</span></p></td></tr></tbody></table>\n\n<h4 id=\"6-4-5-分区（Distribute-By）\"><a href=\"#6-4-5-分区（Distribute-By）\" class=\"headerlink\" title=\"6.4.5 分区（Distribute By）\"></a><strong><strong><strong>6.4.5 分区（</strong></strong></strong><strong>Distribute By</strong><strong><strong><strong>）</strong></strong></strong></h4><p>Distribute By：</p>\n<p>在有些情况下，我们需要控制某个特定行应该到哪个 reducer，通常是为了进行后续的聚集操作。<strong><strong>distribute by</strong></strong> 子句可以做这件事。<strong><strong>distribute by</strong></strong> 类似 MR 中 partition（自定义分区），进行分区，结合 sort by 使用。 对于 distribute by 进行测试，一定要分配多 reduce 进行处理，否则无法看到 distribute by 的效果。</p>\n<p><strong><strong>1）案例实操：</strong></strong></p>\n<p>（1）先按照部门编号分区，再按照员工编号降序排序。</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; set mapreduce.job.reduces=3;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; insert overwrite local directory</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">'</span><span style=\"color:#000000;\">/usr/local/soft/data</span><span style=\"color:#000000;\">/distribute-result' select * from emp distribute by</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">deptno sort by empno desc;</span></p></td></tr></tbody></table>\n\n<p>注意： </p>\n<p>➢ distribute by 的分区规则是根据分区字段的 hash 码与 reduce 的个数进行模除后，</p>\n<p>余数相同的分到一个区。</p>\n<p>➢ Hive 要求 DISTRIBUTE BY 语句要写在 SORT BY 语句之前。</p>\n<h4 id=\"6-4-6-Cluster-By\"><a href=\"#6-4-6-Cluster-By\" class=\"headerlink\" title=\"6.4.6 Cluster By\"></a><strong><strong><strong>6.4.6 Cluster By</strong></strong></strong></h4><p>当 distribute by 和 sorts by 字段相同时，可以使用 cluster by 方式。</p>\n<p>cluster by 除了具有 distribute by 的功能外还兼具 sort by 的功能。但是排序只能是升序排序，不能指定排序规则为 ASC 或者 DESC。</p>\n<p>（1）以下两种写法等价</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select * from emp cluster by deptno;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select * from emp distribute by deptno sort by deptno;</span></p></td></tr></tbody></table>\n\n<p>注意：按照部门编号分区，不一定就是固定死的数值，可以是 20 号和 30 号部门分到一 个分区里面去。</p>\n<h2 id=\"第-7-章-分区表和分桶表\"><a href=\"#第-7-章-分区表和分桶表\" class=\"headerlink\" title=\"第 7 章 分区表和分桶表\"></a><strong><strong><strong>第 7 章 分区表和分桶表</strong></strong></strong></h2><h3 id=\"7-1-分区表\"><a href=\"#7-1-分区表\" class=\"headerlink\" title=\"7.1 分区表\"></a><strong><strong><strong>7.1 分区表</strong></strong></strong></h3><p>分区表实际上就是对应一个 HDFS 文件系统上的独立的文件夹，该文件夹下是该分区所 有的数据文件。Hive 中的分区就是分目录，把一个大的数据集根据业务需要分割成小的数据集。在查询时通过 WHERE 子句中的表达式选择查询所需要的指定的分区，这样的查询效率会提高很多</p>\n<h4 id=\"7-1-1-分区表基本操作\"><a href=\"#7-1-1-分区表基本操作\" class=\"headerlink\" title=\"7.1.1 分区表基本操作\"></a><strong><strong><strong>7.1.1 分区表基本操作</strong></strong></strong></h4><p><strong><strong>1）引入分区表（需要根据日期对日志进行管理, 通过部门信息模拟）</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">dept_202</span><span style=\"color:#000000;\">2</span><span style=\"color:#000000;\">0</span><span style=\"color:#000000;\">810</span><span style=\"color:#000000;\">.log</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">dept_202</span><span style=\"color:#000000;\">20811</span><span style=\"color:#000000;\">.log</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">dept_202</span><span style=\"color:#000000;\">20812</span><span style=\"color:#000000;\">.log</span></p></td></tr></tbody></table>\n\n<p><strong><strong>2）创建分区表语法</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; create table dept_partition(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">deptno int, dname string, loc string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">partitioned by (day string)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">row format delimited fields terminated by '\\t';</span></p></td></tr></tbody></table>\n\n<p>注意：分区字段不能是表中已经存在的数据，可以将分区字段看作表的伪列。</p>\n<p><strong><strong>3）加载数据到分区表中</strong></strong></p>\n<p>（1） <strong><strong>数据准备</strong></strong></p>\n<p>dept_20220810.log</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">10 &nbsp;ACCOUNTING &nbsp;1700</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">20 &nbsp;RESEARCH &nbsp;&nbsp;&nbsp;1800</span></p></td></tr></tbody></table>\n\n<p>dept_20220811.log</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">30 &nbsp;SALES &nbsp;&nbsp;1900</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">40 &nbsp;OPERATIONS &nbsp;1700</span></p></td></tr></tbody></table>\n\n<p>dept_20220812.log</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">50 &nbsp;TEST &nbsp;&nbsp;&nbsp;2000</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">60 &nbsp;DEV 1900</span></p></td></tr></tbody></table>\n\n<p>（2） <strong><strong>加载数据</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; load data local inpath</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">'/</span><span style=\"color:#000000;\">usr</span><span style=\"color:#000000;\">/</span><span style=\"color:#000000;\">local</span><span style=\"color:#000000;\">/</span><span style=\"color:#000000;\">soft</span><span style=\"color:#000000;\">/</span><span style=\"color:#000000;\">data</span><span style=\"color:#000000;\">/dept_202</span><span style=\"color:#000000;\">2</span><span style=\"color:#000000;\">0</span><span style=\"color:#000000;\">810</span><span style=\"color:#000000;\">.log' into table dept_partition</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">partition(day='202</span><span style=\"color:#000000;\">2</span><span style=\"color:#000000;\">0</span><span style=\"color:#000000;\">810</span><span style=\"color:#000000;\">');</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; load data local inpath</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">'/</span><span style=\"color:#000000;\">usr</span><span style=\"color:#000000;\">/</span><span style=\"color:#000000;\">local</span><span style=\"color:#000000;\">/</span><span style=\"color:#000000;\">soft</span><span style=\"color:#000000;\">/</span><span style=\"color:#000000;\">data</span><span style=\"color:#000000;\">/dept_202</span><span style=\"color:#000000;\">20811</span><span style=\"color:#000000;\">.log' into table dept_partition</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">partition(day='202</span><span style=\"color:#000000;\">20811</span><span style=\"color:#000000;\">');</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; load data local inpath</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">'/</span><span style=\"color:#000000;\">usr</span><span style=\"color:#000000;\">/</span><span style=\"color:#000000;\">local</span><span style=\"color:#000000;\">/</span><span style=\"color:#000000;\">soft</span><span style=\"color:#000000;\">/</span><span style=\"color:#000000;\">data</span><span style=\"color:#000000;\">/dept_202</span><span style=\"color:#000000;\">20812</span><span style=\"color:#000000;\">.log' into table dept_partition</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">partition(day='202</span><span style=\"color:#000000;\">20812</span><span style=\"color:#000000;\">');</span></p></td></tr></tbody></table>\n\n<p>注意：分区表加载数据时，必须指定分区</p>\n<p><strong><strong>4）查询分区表中数据</strong></strong></p>\n<p>单分区查询</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select * from dept_partition where day='202</span><span style=\"color:#000000;\">2</span><span style=\"color:#000000;\">0</span><span style=\"color:#000000;\">810</span><span style=\"color:#000000;\">';</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<p>多分区联合查询</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">union</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select * from dept_partition where day='202</span><span style=\"color:#000000;\">2</span><span style=\"color:#000000;\">0</span><span style=\"color:#000000;\">811</span><span style=\"color:#000000;\">'</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">union</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select * from dept_partition where day='202</span><span style=\"color:#000000;\">20812</span><span style=\"color:#000000;\">';</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select * from dept_partition where day='202</span><span style=\"color:#000000;\">2</span><span style=\"color:#000000;\">0</span><span style=\"color:#000000;\">810</span><span style=\"color:#000000;\">'</span>&nbsp;<span style=\"color:#000000;\">or</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">day='202</span><span style=\"color:#000000;\">2</span><span style=\"color:#000000;\">0</span><span style=\"color:#000000;\">811</span><span style=\"color:#000000;\">'</span>&nbsp;<span style=\"color:#000000;\">or day='202</span><span style=\"color:#000000;\">20812</span><span style=\"color:#000000;\">';</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<p><strong><strong>5）增加分区</strong></strong></p>\n<p>创建单个分区</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; alter table dept_partition add partition(day='202</span><span style=\"color:#000000;\">20813</span><span style=\"color:#000000;\">');</span></p></td></tr></tbody></table>\n\n<p>同时创建多个分区</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; alter table dept_partition add partition(day='202</span><span style=\"color:#000000;\">20814</span><span style=\"color:#000000;\">')</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">partition(day='202</span><span style=\"color:#000000;\">20815</span><span style=\"color:#000000;\">');</span></p></td></tr></tbody></table>\n\n<p><strong><strong>6）删除分区</strong></strong></p>\n<p>删除单个分区</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; alter table dept_partition drop partition (day='202</span><span style=\"color:#000000;\">20815</span><span style=\"color:#000000;\">');</span></p></td></tr></tbody></table>\n\n<p>同时删除多个分区</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; alter table dept_partition drop partition</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">(day='202</span><span style=\"color:#000000;\">20813</span><span style=\"color:#000000;\">'), partition(day='202</span><span style=\"color:#000000;\">20814</span><span style=\"color:#000000;\">');</span></p></td></tr></tbody></table>\n\n<p><strong><strong>7）查看分区表有多少分区</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive&gt; show partitions dept_partition;</span><span style=\"color:#000000;\">&nbsp;//推荐这种方式（直接从元数据中获取分区信息）</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive&gt;select distinct pt from students_pt; // 不推荐</span></p></td></tr></tbody></table>\n\n<p><strong><strong>8）查看分区表结构</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive&gt; desc formatted dept_partition;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\"># Partition Information</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\"># col_name data_type comment</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">month string</span></p></td></tr></tbody></table>\n\n<h4 id=\"7-1-2-二级分区\"><a href=\"#7-1-2-二级分区\" class=\"headerlink\" title=\"7.1.2 二级分区\"></a><strong><strong><strong>7.1.2 二级分区</strong></strong></strong></h4><p>思考: 如何一天的日志数据量也很大，如何再将数据拆分? </p>\n<p><strong><strong>1）创建二级分区表</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; create table dept_partition2(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">deptno int, dname string, loc string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">partitioned by (day string, hour string)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">row format delimited fields terminated by '\\t';</span></p></td></tr></tbody></table>\n\n<p><strong><strong>2）正常的加载数据</strong></strong></p>\n<p>（1）加载数据到二级分区表中</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; load data local inpath</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">'/</span><span style=\"color:#000000;\">usr</span><span style=\"color:#000000;\">/</span><span style=\"color:#000000;\">local</span><span style=\"color:#000000;\">/</span><span style=\"color:#000000;\">soft</span><span style=\"color:#000000;\">/</span><span style=\"color:#000000;\">data</span><span style=\"color:#000000;\">/dept_202</span><span style=\"color:#000000;\">2</span><span style=\"color:#000000;\">0</span><span style=\"color:#000000;\">810</span><span style=\"color:#000000;\">.log' into table</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">dept_partition2 partition(day='202</span><span style=\"color:#000000;\">2</span><span style=\"color:#000000;\">0</span><span style=\"color:#000000;\">810</span><span style=\"color:#000000;\">', hour='12');</span></p></td></tr></tbody></table>\n\n<p>（2）查询分区数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select * from dept_partition2 where day='202</span><span style=\"color:#000000;\">2</span><span style=\"color:#000000;\">0</span><span style=\"color:#000000;\">810</span><span style=\"color:#000000;\">' and</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hour='12';</span></p></td></tr></tbody></table>\n\n<p><strong><strong>3）把数据直接上传到分区目录上，让分区表和数据产生关联的三种方式</strong></strong></p>\n<p>（1）方式一：上传数据后修复</p>\n<p>上传数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; dfs -mkdir -p</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">/user/hive/warehouse/mydb.db/dept_partition2/day=202</span><span style=\"color:#000000;\">20810</span><span style=\"color:#000000;\">/hour=13;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; dfs -put /</span><span style=\"color:#000000;\">usr</span><span style=\"color:#000000;\">/</span><span style=\"color:#000000;\">local</span><span style=\"color:#000000;\">/</span><span style=\"color:#000000;\">soft</span><span style=\"color:#000000;\">/</span><span style=\"color:#000000;\">data</span><span style=\"color:#000000;\">/dept_202</span><span style=\"color:#000000;\">20810</span><span style=\"color:#000000;\">.log</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">/user/hive/warehouse/mydb.db/dept_partition2/day=202</span><span style=\"color:#000000;\">20810</span><span style=\"color:#000000;\">/hour=13;</span></p></td></tr></tbody></table>\n\n<p>查询数据（查询不到刚上传的数据）</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select * from dept_partition2 where day='202</span><span style=\"color:#000000;\">20810</span><span style=\"color:#000000;\">' and</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hour='13';</span></p></td></tr></tbody></table>\n\n<p>执行修复命令</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive&gt; msck repair table dept_partition2;</span></p></td></tr></tbody></table>\n\n<p>再次查询数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select * from dept_partition2 where day='202</span><span style=\"color:#000000;\">20810</span><span style=\"color:#000000;\">' and</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hour='13';</span></p></td></tr></tbody></table>\n\n<p>（2）方式二：上传数据后添加分区</p>\n<p>上传数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; dfs -mkdir -p</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">/user/hive/warehouse/mydb.db/dept_partition2/day=202</span><span style=\"color:#000000;\">2</span><span style=\"color:#000000;\">0</span><span style=\"color:#000000;\">81</span><span style=\"color:#000000;\">1/hour=14;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; dfs -put /</span><span style=\"color:#000000;\">usr</span><span style=\"color:#000000;\">/</span><span style=\"color:#000000;\">local</span><span style=\"color:#000000;\">/</span><span style=\"color:#000000;\">soft</span><span style=\"color:#000000;\">/</span><span style=\"color:#000000;\">data</span><span style=\"color:#000000;\">/dept_202</span><span style=\"color:#000000;\">2</span><span style=\"color:#000000;\">0</span><span style=\"color:#000000;\">81</span><span style=\"color:#000000;\">1.log</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">/user/hive/warehouse/mydb.db/dept_partition2/day=2202</span><span style=\"color:#000000;\">2</span><span style=\"color:#000000;\">0</span><span style=\"color:#000000;\">81</span><span style=\"color:#000000;\">1/hour=14;</span></p></td></tr></tbody></table>\n\n<p>执行添加分区</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; alter table dept_partition2 add</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">partition(day='2202</span><span style=\"color:#000000;\">2</span><span style=\"color:#000000;\">0</span><span style=\"color:#000000;\">81</span><span style=\"color:#000000;\">1',hour='14');</span></p></td></tr></tbody></table>\n\n<p>查询数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select * from dept_partition2 where day='2202</span><span style=\"color:#000000;\">2</span><span style=\"color:#000000;\">0</span><span style=\"color:#000000;\">81</span><span style=\"color:#000000;\">1' and</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hour='14';</span></p></td></tr></tbody></table>\n\n<p>（3）方式三：创建文件夹后 load 数据到分区</p>\n<p>创建目录</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; dfs -mkdir -p</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">/user/hive/warehouse/mydb.db/dept_partition2/day=2202</span><span style=\"color:#000000;\">2</span><span style=\"color:#000000;\">0</span><span style=\"color:#000000;\">81</span><span style=\"color:#000000;\">1/hour=15;</span></p></td></tr></tbody></table>\n\n<p>上传数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; load data local inpath</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">'/</span><span style=\"color:#000000;\">usr</span><span style=\"color:#000000;\">/</span><span style=\"color:#000000;\">local</span><span style=\"color:#000000;\">/</span><span style=\"color:#000000;\">soft</span><span style=\"color:#000000;\">/</span><span style=\"color:#000000;\">data</span><span style=\"color:#000000;\">/dept_2202</span><span style=\"color:#000000;\">2</span><span style=\"color:#000000;\">0</span><span style=\"color:#000000;\">81</span><span style=\"color:#000000;\">1.log' into table</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">dept_partition2 partition(day='2202</span><span style=\"color:#000000;\">2</span><span style=\"color:#000000;\">0</span><span style=\"color:#000000;\">81</span><span style=\"color:#000000;\">1',hour='15');</span></p></td></tr></tbody></table>\n\n<p>查询数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select * from dept_partition2 where day='2202</span><span style=\"color:#000000;\">2</span><span style=\"color:#000000;\">0</span><span style=\"color:#000000;\">81</span><span style=\"color:#000000;\">1' and</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hour='15';</span></p></td></tr></tbody></table>\n\n<h4 id=\"7-1-3-动态分区调整\"><a href=\"#7-1-3-动态分区调整\" class=\"headerlink\" title=\"7.1.3 动态分区调整\"></a><strong><strong><strong>7.1.3 动态分区调整</strong></strong></strong></h4><p>关系型数据库中，对分区表 Insert 数据时候，数据库自动会根据分区字段的值，将数据插入到相应的分区中，Hive 中也提供了类似的机制，即动态分区(Dynamic Partition)，只不过，使用 Hive 的动态分区，需要进行相应的配置。 </p>\n<p><strong><strong>1</strong>****<strong>）开启动态分区参数设置</strong></strong></p>\n<p>（1）开启动态分区功能（默认 true，开启）</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive.exec.dynamic.partition=true</span></p></td></tr></tbody></table>\n\n<p>（2）设置为非严格模式（动态分区的模式，默认 strict，表示必须指定至少一个分区为静态分区，nonstrict 模式表示允许所有的分区字段都可以使用动态分区。） </p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive.exec.dynamic.partition.mode=nonstrict</span></p></td></tr></tbody></table>\n\n<p>（3）在所有执行 MR 的节点上，最大一共可以创建多少个动态分区。默认 1000</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive.exec.max.dynamic.partitions=1000</span></p></td></tr></tbody></table>\n\n<p>（4）在每个执行 MR 的节点上，最大可以创建多少个动态分区。该参数需要根据实际 的数据来设定。比如：源数据中包含了一年的数据，即 day 字段有 365 个值，那么该参数就需要设置成大于 365，如果使用默认值 100，则会报错。 </p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive.exec.max.dynamic.partitions.pernode=100</span></p></td></tr></tbody></table>\n\n<p>（5）整个 MR Job 中，最大可以创建多少个 HDFS 文件。默认 100000</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive.exec.max.created.files=100000</span></p></td></tr></tbody></table>\n\n<p>（6）当有空分区生成时，是否抛出异常。一般不需要设置。默认 false</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive.error.on.empty.partition=false</span></p></td></tr></tbody></table>\n\n<p><strong><strong>2）案例实操</strong></strong></p>\n<p>需求：将 dept 表中的数据按照地区（loc 字段），插入到目标表 dept_partition 的相应分区中。</p>\n<p>（1）创建目标分区表</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; create table dept_partition_dy(id int, name string)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">partitioned by (loc int) row format delimited fields terminated by '\\t';</span></p></td></tr></tbody></table>\n\n<p>（2）设置动态分区</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">set hive.exec.dynamic.partition.mode = nonstrict;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; insert into table dept_partition_dy partition(loc) select deptno, dname, loc from dept;</span></p></td></tr></tbody></table>\n\n<p>（3）查看目标分区表的分区情况</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; show partitions dept_partition;</span></p></td></tr></tbody></table>\n\n<p>思考：目标分区表是如何匹配到分区字段的？</p>\n<h3 id=\"7-2-分桶表\"><a href=\"#7-2-分桶表\" class=\"headerlink\" title=\"7.2 分桶表\"></a><strong><strong><strong>7.2 分桶表</strong></strong></strong></h3><p>分区提供一个隔离数据和优化查询的便利方式。不过，并非所有的数据集都可形成合理 的分区。对于一张表或者分区，Hive 可以进一步组织成桶，也就是更为细粒度的数据范围 划分。分桶是将数据集分解成更容易管理的若干部分的另一个技术。 </p>\n<p>分区针对的是数据的存储路径；分桶针对的是数据文件。</p>\n<p><strong><strong>1）先创建分桶表</strong></strong></p>\n<p>（1）数据准备</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1001 &nbsp;&nbsp;&nbsp;ss1</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1002 &nbsp;&nbsp;&nbsp;ss2</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1003 &nbsp;&nbsp;&nbsp;ss3</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1004 &nbsp;&nbsp;&nbsp;ss4</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1005 &nbsp;&nbsp;&nbsp;ss5</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1006 &nbsp;&nbsp;&nbsp;ss6</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1007 &nbsp;&nbsp;&nbsp;ss7</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1008 &nbsp;&nbsp;&nbsp;ss8</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1009 &nbsp;&nbsp;&nbsp;ss9</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1010 &nbsp;&nbsp;&nbsp;ss10</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1011 &nbsp;&nbsp;&nbsp;ss11</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1012 &nbsp;&nbsp;&nbsp;ss12</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1013 &nbsp;&nbsp;&nbsp;ss13</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1014 &nbsp;&nbsp;&nbsp;ss14</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1015 &nbsp;&nbsp;&nbsp;ss15</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1016 &nbsp;&nbsp;&nbsp;ss16</span></p></td></tr></tbody></table>\n\n<p>（2）创建分桶表</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table stu_buck(id int, name string)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">clustered by(id)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">into 4 buckets</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">row format delimited fields terminated by '\\t';</span></p></td></tr></tbody></table>\n\n<p>（3）查看表结构</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; desc formatted stu_buck;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Num Buckets: 4</span></p></td></tr></tbody></table>\n\n<p>（4）导入数据到分桶表中，load 的方式</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; load data inpath '/student.txt' into table stu_buck;</span></p></td></tr></tbody></table>\n\n<p>（5）查看创建的分桶表中是否分成 4 个桶</p>\n<p>（6）查询分桶的数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive(default)&gt; select * from stu_buck;</span></p></td></tr></tbody></table>\n\n<p>（7）分桶规则：</p>\n<p>根据结果可知：Hive 的分桶采用对分桶字段的值进行哈希，然后除以桶的个数求余的方式决定该条记录存放在哪个桶当中</p>\n<p><strong><strong>2</strong><strong><strong><strong>）分桶表操作需要注意的事项</strong></strong></strong></strong>:****</p>\n<p>（1）reduce 的个数设置为-1,让 Job 自行决定需要用多少个 reduce 或者将 reduce 的个数设置为大于等于分桶表的桶数</p>\n<p>（2）从 hdfs 中 load 数据到分桶表中，避免本地文件找不到问题</p>\n<p>（3）不要使用本地模式</p>\n<p><strong><strong>3</strong><strong><strong><strong>）</strong></strong></strong><strong>insert</strong></strong> <strong><strong>方式将数据导入分桶表</strong></strong> </p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive(default)&gt;insert into table stu_buck select * from student_insert;</span></p></td></tr></tbody></table>\n\n<h3 id=\"7-3-抽样查询\"><a href=\"#7-3-抽样查询\" class=\"headerlink\" title=\"7.3 抽样查询\"></a><strong><strong><strong>7.3 抽样查询</strong></strong></strong></h3><p>对于非常大的数据集，有时用户需要使用的是一个具有代表性的查询结果而不是全部结果。Hive 可以通过对表进行抽样来满足这个需求。</p>\n<p>语法: TABLESAMPLE(BUCKET x OUT OF y)</p>\n<p>查询表 stu_buck 中的数据。</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select * from stu_buck tablesample(bucket 1 out of 4 on</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">id);</span></p></td></tr></tbody></table>\n\n<p>注意：x 的值必须小于等于 y 的值，否则</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">FAILED: SemanticException [Error 10061]: Numerator should not be bigger</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">than denominator in sample clause for table stu_buck</span></p></td></tr></tbody></table>\n\n<h2 id=\"第-8-章-函数\"><a href=\"#第-8-章-函数\" class=\"headerlink\" title=\"第 8 章 函数\"></a><strong><strong><strong>第 8 章 函数</strong></strong></strong></h2><h3 id=\"8-1-系统内置函数\"><a href=\"#8-1-系统内置函数\" class=\"headerlink\" title=\"8.1 系统内置函数\"></a><strong><strong><strong>8.1</strong></strong> <strong><strong>系统内置函数</strong></strong></strong></h3><p><strong><strong>1）查看系统自带的函数</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive&gt; show functions;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>2）显示自带的函数的用法</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive&gt; desc function upper;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>3）详细显示自带的函数的用法</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive&gt; desc function extended upper;</span></p></td></tr></tbody></table>\n\n<h3 id=\"8-2-常用内置函数\"><a href=\"#8-2-常用内置函数\" class=\"headerlink\" title=\"8.2 常用内置函数\"></a><strong><strong><strong>8.2 常用内置函数</strong></strong></strong></h3><h4 id=\"8-2-1-空字段赋值\"><a href=\"#8-2-1-空字段赋值\" class=\"headerlink\" title=\"8.2.1 空字段赋值\"></a><strong><strong><strong>8.2.1</strong></strong> <strong><strong>空字段赋值</strong></strong></strong></h4><p><strong><strong>1）函数说明</strong></strong></p>\n<p>NVL：给值为 NULL 的数据赋值，它的格式是 NVL( value，default_value)。它的功能是如果 value 为 NULL，则 NVL 函数返回 default_value 的值，否则返回 value 的值，如果两个参数 都为 NULL ，则返回 NULL。</p>\n<p><strong><strong>2）数据准备：采用员工表</strong></strong></p>\n<p><strong><strong>3</strong>****<strong>）查询：如果员工的</strong></strong> <strong><strong>comm</strong></strong> <strong><strong>为</strong></strong> <strong><strong>NULL</strong><strong><strong><strong>，则用</strong></strong></strong><strong>-1</strong></strong> <strong><strong>代替</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select comm,nvl(comm, -1) from emp;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>4）查询：如果员工的</strong></strong> <strong><strong>comm</strong></strong> <strong><strong>为</strong></strong> <strong><strong>NULL</strong>****<strong>，则用领导</strong></strong> <strong><strong>id</strong></strong> <strong><strong>代替</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select comm, nvl(comm,mgr) from emp;</span></p></td></tr></tbody></table>\n\n<h4 id=\"8-2-2-CASE-WHEN-THEN-ELSE-END\"><a href=\"#8-2-2-CASE-WHEN-THEN-ELSE-END\" class=\"headerlink\" title=\"8.2.2 CASE WHEN THEN ELSE END\"></a><strong><strong><strong>8.2.2 CASE WHEN THEN ELSE END</strong></strong></strong></h4><p><strong><strong>1）数据准备</strong></strong><img src=\"https://i-blog.csdnimg.cn/blog_migrate/bfe2f393fd0fd8d8f20d6d0d2d658ce4.png\"></p>\n<p><strong><strong>2）需求</strong></strong></p>\n<p>求出不同部门男女各多少人。结果如下： </p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">dept_Id 男 女</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">A 2 1</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">B 1 2</span></p></td></tr></tbody></table>\n\n<p><strong><strong>3）创建本地</strong></strong> <strong><strong>emp_sex.txt</strong>****<strong>，导入数据</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">[root@master datas]</span><span style=\"color:#000000;\">#</span><span style=\"color:#000000;\">&nbsp;vi</span><span style=\"color:#000000;\">m</span><span style=\"color:#000000;\">&nbsp;emp_sex.txt</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">悟空 A 男</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">大海 A 男</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">宋宋 B 男</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">凤姐 A 女</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">婷姐 B 女</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">婷婷 B 女</span></p></td></tr></tbody></table>\n\n<p><strong><strong>4</strong>****<strong>）创建</strong></strong> <strong><strong>hive</strong></strong> <strong><strong>表并导入数据</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table emp_sex(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">name string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">dept_id string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">sex string)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">row format delimited fields terminated by \"\\t\";</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">load data local inpath '</span><span style=\"color:#000000;\">/usr/local/soft/data</span><span style=\"color:#000000;\">emp_sex.txt' into table</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">emp_sex;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>5</strong>****<strong>）按需求查询数据</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">dept_id,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">sum(case sex when '</span><span style=\"color:#000000;\">男</span><span style=\"color:#000000;\">' then 1 else 0 end) male_count,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">sum(case sex when '</span><span style=\"color:#000000;\">女</span><span style=\"color:#000000;\">' then 1 else 0 end) female_count</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">from emp_sex</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">group by dept_id;</span></p></td></tr></tbody></table>\n\n<h4 id=\"8-2-3-行转列\"><a href=\"#8-2-3-行转列\" class=\"headerlink\" title=\"8.2.3 行转列\"></a><strong><strong><strong>8.2.3</strong></strong> <strong><strong>行转列</strong></strong></strong></h4><p><strong><strong>1）相关函数说明</strong></strong></p>\n<p>CONCAT(string A&#x2F;col, string B&#x2F;col…)：返回输入字符串连接后的结果，支持任意个输入字符串;</p>\n<p>CONCAT_WS(separator, str1, str2,…)：它是一个特殊形式的 CONCAT()。第一个参数剩余参 数间的分隔符。分隔符可以是与剩余参数一样的字符串。如果分隔符是 NULL，返回值也将 为 NULL。这个函数会跳过分隔符参数后的任何 NULL 和空字符串。分隔符将被加到被连接的字符串之间;</p>\n<p>注意: CONCAT_WS must be “string or array&lt;string&gt;</p>\n<p>COLLECT_SET(col)：函数只接受基本数据类型，它的主要作用是将某字段的值进行去重汇总，产生 Array 类型字段。</p>\n<p><strong><strong>2）数据准备</strong></strong><img src=\"https://i-blog.csdnimg.cn/blog_migrate/5e207af456be81b756dd8177f3e120df.png\"></p>\n<p><strong><strong>3）需求</strong></strong></p>\n<p>把星座和血型一样的人归类到一起。结果如下：</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">射手座</span><span style=\"color:#000000;\">,A </span><span style=\"color:#000000;\">大海</span><span style=\"color:#000000;\">|</span><span style=\"color:#000000;\">凤姐</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">白羊座</span><span style=\"color:#000000;\">,A </span><span style=\"color:#000000;\">孙悟空</span><span style=\"color:#000000;\">|</span><span style=\"color:#000000;\">猪八戒</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">白羊座</span><span style=\"color:#000000;\">,B </span><span style=\"color:#000000;\">宋宋</span><span style=\"color:#000000;\">|</span><span style=\"color:#000000;\">苍老师</span></p></td></tr></tbody></table>\n\n<p><strong><strong>4）创建本地</strong></strong> <strong><strong>constellation.txt</strong>****<strong>，导入数据</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">[root@master datas]# vim constellation.txt</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">孙悟空 白羊座 A</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">大海 射手座 A</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">宋宋 白羊座 B</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">猪八戒 白羊座 A</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">凤姐 射手座 A</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">苍老师 白羊座 B</span></p></td></tr></tbody></table>\n\n<p><strong><strong>5）创建</strong></strong> <strong><strong>hive</strong></strong> <strong><strong>表并导入数据</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table person_info(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">name string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">constellation string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">blood_type string)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">row format delimited fields terminated by \"</span><span style=\"color:#000000;\">,</span><span style=\"color:#000000;\">\";</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">load data local inpath \"</span><span style=\"color:#000000;\">/usr/local/soft/data/constellation.txt</span><span style=\"color:#000000;\">\" into table person_info;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>6）按需求查询数据</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">SELECT</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">t1.c_b,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">CONCAT_WS(\"|\",collect_set(t1.name))</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">FROM (</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">SELECT</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">NAME,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">CONCAT</span><span style=\"color:#000000;\">_WS</span><span style=\"color:#000000;\">(',',constellation,blood_type) c_b</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">FROM person_info</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">)t1</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">GROUP BY t1.c_b</span></p></td></tr></tbody></table>\n\n<p>使用<a href=\"https://so.csdn.net/so/search?q=concat&spm=1001.2101.3001.7020\" title=\"concat\">concat</a>（）函数做字符串的拼接；</p>\n<p>使用concat_ws（）和collect_set（）进行合并行</p>\n<p>将上面列表中一个user可能会占用多行转换为每个user占一行的目标表格式，实际是“列转行”</p>\n<p>collect_set的作用：</p>\n<p>（1）去重，对group by后面的user进行去重</p>\n<p>（2）对group by以后属于同一user的形成一个集合，结合concat_ws对集合中元素使用，进行分隔形成<a href=\"https://so.csdn.net/so/search?q=%E5%AD%97%E7%AC%A6%E4%B8%B2&spm=1001.2101.3001.7020\" title=\"字符串\">字符串</a></p>\n<h4 id=\"8-2-4-列转行\"><a href=\"#8-2-4-列转行\" class=\"headerlink\" title=\"8.2.4 列转行\"></a><strong><strong><strong>8.2.4</strong></strong> <strong><strong>列转行</strong></strong></strong></h4><p><strong><strong>1）函数说明</strong></strong></p>\n<p>EXPLODE(col)：将 hive 一列中复杂的 Array 或者 Map 结构拆分成多行。</p>\n<p>LATERAL VIEW</p>\n<p>用法：LATERAL VIEW udtf(expression) tableAlias AS columnAlias</p>\n<p>解释：用于和 split, explode 等 UDTF 一起使用，它能够将一列数据拆成多行数据，在此基础上可以对拆分后的数据进行聚合。</p>\n<p><strong><strong>2）数据准备</strong></strong><img src=\"https://i-blog.csdnimg.cn/blog_migrate/9eaa5f1625e20917c933e5ec5728000c.png\"></p>\n<p><strong><strong>3）需求</strong></strong></p>\n<p>将电影分类中的数组数据展开。结果如下：</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">《疑犯追踪</span><span style=\"color:#000000;\">》 &nbsp;&nbsp;&nbsp;</span><span style=\"color:#000000;\">悬疑</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">《疑犯追踪》 &nbsp;&nbsp;&nbsp;动作</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">《疑犯追踪》 &nbsp;&nbsp;&nbsp;科幻</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">《疑犯追踪》 &nbsp;&nbsp;&nbsp;剧情</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">《Lie to me》 &nbsp;&nbsp;悬疑</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">《Lie to me》 &nbsp;&nbsp;警匪</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">《Lie to me》 &nbsp;&nbsp;动作</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">《Lie to me》 &nbsp;&nbsp;心理</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">《Lie to me》 &nbsp;&nbsp;剧情</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">《战狼 2》 &nbsp;战争</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">《战狼 2》 &nbsp;动作</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">《战狼 2》 &nbsp;灾难</span></p></td></tr></tbody></table>\n\n<p><strong><strong>4）创建本地</strong></strong> <strong><strong>movie.txt</strong>****<strong>，导入数据</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">[root@master datas]# vi movie_info.txt</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">《疑犯追踪》 悬疑,动作,科幻,剧情</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">《Lie to me》悬疑,警匪,动作,心理,剧情</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">《战狼 2》 战争,动作,灾难</span></p></td></tr></tbody></table>\n\n<p><strong><strong>5）创建</strong></strong> <strong><strong>hive</strong></strong> <strong><strong>表并导入数据</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table movie_info(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">movie string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">category string)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">row format delimited fields terminated by \"\\t\";</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">load data local inpath \"</span><span style=\"color:#000000;\">/usr/local/soft/data</span><span style=\"color:#000000;\">/movie.txt\" into table</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">movie_info;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>6）按需求查询数据</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">SELECT</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">movie,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">category_name</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">FROM</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">movie_info</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">lateral VIEW</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">explode(split(category,\",\")) movie_info_tmp AS category_name;</span></p></td></tr></tbody></table>\n\n<h4 id=\"8-2-5-窗口函数（开窗函数）\"><a href=\"#8-2-5-窗口函数（开窗函数）\" class=\"headerlink\" title=\"8.2.5 窗口函数（开窗函数）\"></a><strong><strong><strong>8.2.5</strong></strong> <strong><strong>窗口函数（开窗函数）</strong></strong></strong></h4><p><strong><strong>1）相关函数说明</strong></strong></p>\n<p>OVER()：指定分析函数工作的数据窗口大小，这个数据窗口大小可能会随着行的变而变化。</p>\n<p>CURRENT ROW：当前行</p>\n<p>n PRECEDING：往前 n 行数据</p>\n<p>n FOLLOWING：往后 n 行数据</p>\n<p>UNBOUNDED：起点，</p>\n<p>UNBOUNDED PRECEDING 表示从前面的起点，</p>\n<p>UNBOUNDED FOLLOWING 表示到后面的终点</p>\n<p>LAG(col,n,default_val)：往前第 n 行数据</p>\n<p>LEAD(col,n, default_val)：往后第 n 行数据</p>\n<p>NTILE(n)：把有序窗口的行分发到指定数据的组中，各个组有编号，编号从 1 开始，对于每一行，NTILE 返回此行所属的组的编号。注意：n 必须为 int 类型。</p>\n<p><strong><strong>2）数据准备：</strong><strong><strong><strong>name</strong></strong></strong><strong>，</strong><strong><strong><strong>orderdate</strong></strong></strong><strong>，</strong>****<strong>cost</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">jack,2017-01-01,10</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">tony,2017-01-02,15</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">jack,2017-02-03,23</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">tony,2017-01-04,29</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">jack,2017-01-05,46</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">jack,2017-04-06,42</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">tony,2017-01-07,50</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">jack,2017-01-08,55</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">mart,2017-04-08,62</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">mart,2017-04-09,68</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">neil,2017-05-10,12</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">mart,2017-04-11,75</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">neil,2017-06-12,80</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">mart,2017-04-13,94</span></p></td></tr></tbody></table>\n\n<p><strong><strong>3）需求</strong></strong></p>\n<p>（1）查询在 2017 年 4 月份购买过的顾客及总人数</p>\n<p>（2）查询顾客的购买明细及月购买总额</p>\n<p>（3）上述的场景, 将每个顾客的 cost 按照日期进行累加</p>\n<p>（4）查询每个顾客上次的购买时间</p>\n<p>（5）查询前 20%时间的订单信息</p>\n<p><strong><strong>4）创建本地</strong></strong> <strong><strong>business.txt</strong>****<strong>，导入数据</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">[root@master datas]$ vi business.txt</span></p></td></tr></tbody></table>\n\n<p><strong><strong>5）创建</strong></strong> <strong><strong>hive</strong></strong> <strong><strong>表并导入数据</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table business(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">name string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">orderdate string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">cost int</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">) ROW FORMAT DELIMITED FIELDS TERMINATED BY ',';</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">load data local inpath \"</span><span style=\"color:#000000;\">/usr/local/soft/data</span><span style=\"color:#000000;\">/business.txt\" into table</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">business;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>6）按需求查询数据</strong></strong></p>\n<p>（1） 查询在 2017 年 4 月份购买过的顾客及总人数</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select name,count(*) over ()</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">from business</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">where substring(orderdate,1,7) = '2017-04'</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">group by name;</span></p></td></tr></tbody></table>\n\n<p>（2） 查询顾客的购买明细及月购买总额</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select name,orderdate,cost,sum(cost) over(partition by month(orderdate))</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">from business;</span></p></td></tr></tbody></table>\n\n<p>（3） 将每个顾客的 cost 按照日期进行累加</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select name,orderdate,cost,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">sum(cost) over() as sample1,--</span><span style=\"color:#000000;\">所有行相加</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">sum(cost) over(partition by name) as sample2,--</span><span style=\"color:#000000;\">按 </span><span style=\"color:#000000;\">name </span><span style=\"color:#000000;\">分组，组内数据相加</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">sum(cost) over(partition by name order by orderdate) as sample3,--</span><span style=\"color:#000000;\">按 </span><span style=\"color:#000000;\">name</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">分组，组内数据累加</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">sum(cost) over(partition by name order by orderdate rows between</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">UNBOUNDED PRECEDING and current row ) as sample4 ,--</span><span style=\"color:#000000;\">和 </span><span style=\"color:#000000;\">sample3 </span><span style=\"color:#000000;\">一样</span><span style=\"color:#000000;\">,</span><span style=\"color:#000000;\">由起点到</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">当前行的聚合</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">sum(cost) over(partition by name order by orderdate rows between 1</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">PRECEDING and current row) as sample5, --</span><span style=\"color:#000000;\">当前行和前面一行做聚合</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">sum(cost) over(partition by name order by orderdate rows between 1</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">PRECEDING AND 1 FOLLOWING ) as sample6,--</span><span style=\"color:#000000;\">当前行和前边一行及后面一行</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">sum(cost) over(partition by name order by orderdate rows between current</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">row and UNBOUNDED FOLLOWING ) as sample7 --</span><span style=\"color:#000000;\">当前行及后面所有行</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">from business;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<p>rows 必须跟在 order by 子句之后，对排序的结果进行限制，使用固定的行数来限制分区中的数据行数量</p>\n<p>（4） 查看顾客上次的购买时间</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select name,orderdate,cost,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">lag(orderdate,1,'1900-01-01') over(partition by name order by orderdate )</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">as time1, lag(orderdate,2) over (partition by name order by orderdate) as</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">time2</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">from business;</span></p></td></tr></tbody></table>\n\n<p>（5） 查询前 20%时间的订单信息</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select * from (</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select name,orderdate,cost, ntile(5) over(order by orderdate) sorted</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">from business</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">) t</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">where sorted = 1;</span></p></td></tr></tbody></table>\n\n<h4 id=\"8-2-6-Rank\"><a href=\"#8-2-6-Rank\" class=\"headerlink\" title=\"8.2.6 Rank\"></a><strong><strong><strong>8.2.6 Rank</strong></strong></strong></h4><p><strong><strong>1）函数说明</strong></strong></p>\n<p>RANK() 排序相同时会重复，总数不会变</p>\n<p>DENSE_RANK() 排序相同时会重复，总数会减少</p>\n<p>ROW_NUMBER() 会根据顺序计算</p>\n<p><strong><strong>2）数据准备</strong></strong></p>\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/d5ec88265bb60708d9a186e2a9de25d2.png\"></p>\n<p><strong><strong>3）需求</strong></strong></p>\n<p>计算每门学科成绩排名。</p>\n<p><strong><strong>4）创建本地</strong></strong> <strong><strong>score.txt</strong>****<strong>，导入数据</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">[</span><span style=\"color:#000000;\">root</span><span style=\"color:#000000;\">@</span><span style=\"color:#000000;\">master</span><span style=\"color:#000000;\">&nbsp;datas]$ vi score.txt</span></p></td></tr></tbody></table>\n\n<p><strong><strong>5）创建</strong></strong> <strong><strong>hive</strong></strong> <strong><strong>表并导入数据</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table score(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">name string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">subject string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">score int)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">row format delimited fields terminated by \"\\t\";</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">load data local inpath '/</span><span style=\"color:#000000;\">usr</span><span style=\"color:#000000;\">/</span><span style=\"color:#000000;\">local/soft</span><span style=\"color:#000000;\">/data/score.txt' into table score;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>6）按需求查询数据</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select name,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">subject,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">score,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">rank() over(partition by subject order by score desc) rp,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">dense_rank() over(partition by subject order by score desc) drp,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">row_number() over(partition by subject order by score desc) rmp</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">from score;</span></p></td></tr></tbody></table>\n\n<p>扩展：求出每门学科前三名的学生？</p>\n<h4 id=\"8-4-自定义函数\"><a href=\"#8-4-自定义函数\" class=\"headerlink\" title=\"8.4 自定义函数****\"></a><strong><strong><strong>8.4 自定义</strong></strong></strong><strong>函数</strong>****</h4><p>学习网址：<a href=\"https://www.cnblogs.com/sx66/p/12039552.html\">https://www.cnblogs.com/sx66/p/12039552.html</a></p>\n<p>****1.****<strong><strong>UDF：一进一出</strong></strong></p>\n<p>（1）创建maven项目，并加入依赖</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&lt;dependency&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;groupId&gt;org.apache.hive&lt;/groupId&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;artifactId&gt;hive-exec&lt;/artifactId&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;version&gt;1.2.1&lt;/version&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/dependency&gt;</span></p></td></tr></tbody></table>\n\n<p>（2）编写代码，继承org.apache.hadoop.hive.ql.exec.UDF，实现evaluate方法，在evaluate方法中实现自己的逻辑</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">import org.apache.hadoop.hive.ql.exec.UDF;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">public class HiveUDF extends UDF {<!-- --></span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;// hadoop =&gt; #hadoop$</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;public String evaluate(String col1) {<!-- --></span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;// 给传进来的数据 左边加上 # 号 右边加上 $</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String result = \"#\" + col1 + \"$\";</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return result;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">}</span></p></td></tr></tbody></table>\n\n<p>（3）打成jar包并上传至Linux虚拟机</p>\n<p>（4） 在hive shell中，使用 add jar 路径将jar包作为资源添加到hive环境中</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">add jar /usr/local/soft/jars/HiveUDF2-1.0.jar;</span></p></td></tr></tbody></table>\n\n<p>（5）使用jar包资源注册一个临时函数，fxxx1是你的函数名，’MyUDF’是主类名</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create temporary function fxxx1 as 'MyUDF';</span></p></td></tr></tbody></table>\n\n<p>（6）使用函数名处理数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select fxx1(name) as fxx_name from students limit 10;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">#施笑槐$</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">#吕金鹏$</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">#单乐蕊$</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">#葛德曜$</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">#宣谷芹$</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">#边昂雄$</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">#尚孤风$</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">#符半双$</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">#沈德昌$</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">#羿彦昌$</span></p></td></tr></tbody></table>\n\n<p>****2.****<strong><strong>UDTF：一进多出</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive(default)&gt; select myudtf(\"hello,world,hadoop,hive\", \",\");</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hello</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">world</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hadoop</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive</span></p></td></tr></tbody></table>\n\n<p>方法二：自定UDTF</p>\n<ol>\n<li>代码</li>\n</ol>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">package com.shujia.hive_function;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">import org.apache.hadoop.hive.ql.exec.UDFArgumentException;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">import org.apache.hadoop.hive.ql.metadata.HiveException;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">import org.apache.hadoop.hive.ql.udf.generic.GenericUDTF;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspectorFactory;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">import org.apache.hadoop.hive.serde2.objectinspector.StructObjectInspector;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">import org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">import java.util.ArrayList;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">import java.util.List;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">public class HiveUDTF extends GenericUDTF {<!-- --></span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;private ArrayList&lt;String&gt; outList = new ArrayList&lt;&gt;();</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;@Override</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;public StructObjectInspector initialize(StructObjectInspector argOIs)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throws UDFArgumentException {<!-- --></span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//1.定义输出数据的列名和类型</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List&lt;String&gt; fieldNames = new ArrayList&lt;&gt;();</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List&lt;ObjectInspector&gt; fieldOIs = new ArrayList&lt;&gt;();</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//2.添加输出数据的列名和类型</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fieldNames.add(\"lineToWord\");</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fieldOIs.add(PrimitiveObjectInspectorFactory.javaStringObjectInspector);</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ObjectInspectorFactory.getStandardStructObjectInspector(fieldNames,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fieldOIs);</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;@Override</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;public void process(Object[] args) throws HiveException {<!-- --></span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//1.获取原始数据</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String arg = args[0].toString();</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//2.获取数据传入的第二个参数，此处为分隔符</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String splitKey = args[1].toString();</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//3.将原始数据按照传入的分隔符进行切分</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String[] fields = arg.split(splitKey);</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//4.遍历切分后的结果，并写出</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (String field : fields) {<!-- --></span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//集合为复用的，首先清空集合</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outList.clear();</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//将每一个单词添加至集合</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outList.add(field);</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//将集合内容写出</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forward(outList);</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;@Override</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;public void close() throws HiveException {<!-- --></span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">}</span></p></td></tr></tbody></table>\n\n<ol>\n<li>SQL</li>\n</ol>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select my_udtf(\"key1:value1,key2:value2,key3:value3\");</span></p></td></tr></tbody></table>\n\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">字段：id,col1,col2,col3,col4,col5,col6,col7,col8,col9,col10,col11,col12 共13列</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">数据：</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">a,1,2,3,4,5,6,7,8,9,10,11,12</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">b,11,12,13,14,15,16,17,18,19,20,21,22</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">c,21,22,23,24,25,26,27,28,29,30,31,32</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">转成3列：id,hours,value</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">例如：</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">a,1,2,3,4,5,6,7,8,9,10,11,12</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">a,0时,1</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">a,2时,2</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">a,4时,3</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">a,6时,4</span></p></td></tr></tbody></table>\n\n<table border=\"1\" cellspacing=\"0\" style=\"margin-left:6.75pt;\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table udtfData(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;id string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;,col1 string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;,col2 string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;,col3 string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;,col4 string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;,col5 string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;,col6 string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;,col7 string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;,col8 string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;,col9 string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;,col10 string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;,col11 string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;,col12 string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">)row format delimited fields terminated by ',';</span></p></td></tr></tbody></table>\n\n<p>代码：</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">import org.apache.hadoop.hive.ql.exec.UDFArgumentException;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">import org.apache.hadoop.hive.ql.metadata.HiveException;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">import org.apache.hadoop.hive.ql.udf.generic.GenericUDTF;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspectorFactory;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">import org.apache.hadoop.hive.serde2.objectinspector.StructObjectInspector;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">import org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">import java.util.ArrayList;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">public class HiveUDTF2 extends GenericUDTF {<!-- --></span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;@Override</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;public StructObjectInspector initialize(StructObjectInspector argOIs) throws UDFArgumentException {<!-- --></span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ArrayList&lt;String&gt; filedNames = new ArrayList&lt;String&gt;();</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ArrayList&lt;ObjectInspector&gt; fieldObj = new ArrayList&lt;ObjectInspector&gt;();</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filedNames.add(\"col1\");</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fieldObj.add(PrimitiveObjectInspectorFactory.javaStringObjectInspector);</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filedNames.add(\"col2\");</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fieldObj.add(PrimitiveObjectInspectorFactory.javaStringObjectInspector);</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return ObjectInspectorFactory.getStandardStructObjectInspector(filedNames, fieldObj);</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;public void process(Object[] objects) throws HiveException {<!-- --></span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int hours = 0;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for (Object obj : objects) {<!-- --></span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hours = hours + 1;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String col = obj.toString();</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ArrayList&lt;String&gt; cols = new ArrayList&lt;String&gt;();</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cols.add(hours + \"时\");</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cols.add(col);</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;forward(cols);</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;public void close() throws HiveException {<!-- --></span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;}</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">}</span></p></td></tr></tbody></table>\n\n<p>添加jar资源:</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">add jar /usr/local/soft/HiveUDF2-1.0.jar;</span></p></td></tr></tbody></table>\n\n<p>注册udtf函数：</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create temporary function my_udtf as 'MyUDTF';</span></p></td></tr></tbody></table>\n\n<p>SQL:</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select id,hours,value from udtfData lateral view my_udtf(col1,col2,col3,col4,col5,col6,col7,col8,col9,col10,col11,col12) t as hours,value ;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>连续登陆问题</strong></strong></p>\n<p>在电商、物流和银行可能经常会遇到这样的需求：统计用户连续交易的总额、连续登陆天数、连续登陆开始和结束时间、间隔天数等</p>\n<p><strong><strong>数据：</strong></strong></p>\n<p>注意：每个用户每天可能会有多条记录</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">id</span> <span style=\"color:#000000;\">datestr</span> <span style=\"color:#000000;\">&nbsp;&nbsp;amount</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1,2019-02-08,6214.23</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1,2019-02-08,6247.32</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1,2019-02-09,85.63</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1,2019-02-09,967.36</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1,2019-02-10,85.69</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1,2019-02-12,769.85</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1,2019-02-13,943.86</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1,2019-02-14,538.42</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1,2019-02-15,369.76</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1,2019-02-16,369.76</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1,2019-02-18,795.15</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1,2019-02-19,715.65</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1,2019-02-21,537.71</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">2,2019-02-08,6214.23</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">2,2019-02-08,6247.32</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">2,2019-02-09,85.63</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">2,2019-02-09,967.36</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">2,2019-02-10,85.69</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">2,2019-02-12,769.85</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">2,2019-02-13,943.86</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">2,2019-02-14,943.18</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">2,2019-02-15,369.76</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">2,2019-02-18,795.15</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">2,2019-02-19,715.65</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">2,2019-02-21,537.71</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">3,2019-02-08,6214.23</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">3,2019-02-08,6247.32</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">3,2019-02-09,85.63</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">3,2019-02-09,967.36</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">3,2019-02-10,85.69</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">3,2019-02-12,769.85</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">3,2019-02-13,943.86</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">3,2019-02-14,276.81</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">3,2019-02-15,369.76</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">3,2019-02-16,369.76</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">3,2019-02-18,795.15</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">3,2019-02-19,715.65</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">3,2019-02-21,537.71</span></p></td></tr></tbody></table>\n\n<p><strong><strong>建表语句</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table deal_tb(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;id string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;,datestr string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;,amount string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">)row format delimited fields terminated by ',';</span></p></td></tr></tbody></table>\n\n<p><strong><strong>计算逻辑</strong></strong></p>\n<p>（1）先按用户和日期分组求和，使每个用户每天只有一条数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select &nbsp;id</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,datestr</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,sum(amount) as sum_amount</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;from deal_tb</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;group by id,datestr</span></p></td></tr></tbody></table>\n\n<p>（2）根据用户ID分组按日期排序，将日期和分组序号相减得到连续登陆的开始日期，如果开始日期相同说明连续登陆</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;select &nbsp;tt1.id</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,tt1.datestr</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,tt1.sum_amount</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,date_sub(tt1.datestr,rn) as grp</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;from(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select &nbsp;t1.id</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,t1.datestr</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,t1.sum_amount</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,row_number() over(partition by id order by datestr) as rn</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from(</span></p><p style=\"margin-left:.0001pt;text-align:left;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#000000;\">select &nbsp;id</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,datestr</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,sum(amount) as sum_amount</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from deal_tb</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;group by id,datestr</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) t1</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;) tt1</span></p></td></tr></tbody></table>\n\n<p>（3）统计用户连续交易的总额、连续登陆天数、连续登陆开始和结束时间、间隔天数</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select &nbsp;ttt1.id</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,ttt1.grp</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,round(sum(ttt1.sum_amount),2) as sc_sum_amount</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,count(1) as sc_days</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,min(ttt1.datestr) as sc_start_date</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,max(ttt1.datestr) as sc_end_date</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,datediff(ttt1.grp,lag(ttt1.grp,1) over(partition by ttt1.id order by ttt1.grp)) as iv_days</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">from(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;select &nbsp;tt1.id</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,tt1.datestr</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,tt1.sum_amount</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,date_sub(tt1.datestr,rn) as grp</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;from(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select &nbsp;t1.id</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,t1.datestr</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,t1.sum_amount</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,row_number() over(partition by id order by datestr) as rn</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select &nbsp;id</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,datestr</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,sum(amount) as sum_amount</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from deal_tb</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;group by id,datestr</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;) t1</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&nbsp;&nbsp;&nbsp;&nbsp;) tt1</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">) ttt1</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">group by ttt1.id,ttt1.grp;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>结果</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1</span> <span style=\"color:#000000;\">2019-02-07</span> <span style=\"color:#000000;\">13600.23</span> <span style=\"color:#000000;\">3</span> <span style=\"color:#000000;\">2019-02-08</span> <span style=\"color:#000000;\">2019-02-10 NULL</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1</span> <span style=\"color:#000000;\">2019-02-08</span> <span style=\"color:#000000;\">2991.650</span> <span style=\"color:#000000;\">5</span> <span style=\"color:#000000;\">2019-02-12</span> <span style=\"color:#000000;\">2019-02-16</span> <span style=\"color:#000000;\">1</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1</span> <span style=\"color:#000000;\">2019-02-09</span> <span style=\"color:#000000;\">1510.8</span> <span style=\"color:#000000;\">2</span> <span style=\"color:#000000;\">2019-02-18</span> <span style=\"color:#000000;\">2019-02-19</span> <span style=\"color:#000000;\">1</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1</span> <span style=\"color:#000000;\">2019-02-10</span> <span style=\"color:#000000;\">537.71</span> <span style=\"color:#000000;\">1</span> <span style=\"color:#000000;\">2019-02-21</span> <span style=\"color:#000000;\">2019-02-21</span> <span style=\"color:#000000;\">1</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">2</span> <span style=\"color:#000000;\">2019-02-07</span> <span style=\"color:#000000;\">13600.23</span> <span style=\"color:#000000;\">3</span> <span style=\"color:#000000;\">2019-02-08</span> <span style=\"color:#000000;\">2019-02-10 NULL</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">2</span> <span style=\"color:#000000;\">2019-02-08</span> <span style=\"color:#000000;\">3026.649</span> <span style=\"color:#000000;\">4</span> <span style=\"color:#000000;\">2019-02-12</span> <span style=\"color:#000000;\">2019-02-15</span> <span style=\"color:#000000;\">1</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">2</span> <span style=\"color:#000000;\">2019-02-10</span> <span style=\"color:#000000;\">1510.8</span> <span style=\"color:#000000;\">2</span> <span style=\"color:#000000;\">2019-02-18</span> <span style=\"color:#000000;\">2019-02-19</span> <span style=\"color:#000000;\">2</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">2</span> <span style=\"color:#000000;\">2019-02-11</span> <span style=\"color:#000000;\">537.71</span> <span style=\"color:#000000;\">1</span> <span style=\"color:#000000;\">2019-02-21</span> <span style=\"color:#000000;\">2019-02-21</span> <span style=\"color:#000000;\">1</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">3</span> <span style=\"color:#000000;\">2019-02-07</span> <span style=\"color:#000000;\">13600.23</span> <span style=\"color:#000000;\">3</span> <span style=\"color:#000000;\">2019-02-08</span> <span style=\"color:#000000;\">2019-02-10 NULL</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">3</span> <span style=\"color:#000000;\">2019-02-08</span> <span style=\"color:#000000;\">2730.04</span> <span style=\"color:#000000;\">5</span> <span style=\"color:#000000;\">2019-02-12</span> <span style=\"color:#000000;\">2019-02-16</span> <span style=\"color:#000000;\">1</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">3</span> <span style=\"color:#000000;\">2019-02-09</span> <span style=\"color:#000000;\">1510.8</span> <span style=\"color:#000000;\">2</span> <span style=\"color:#000000;\">2019-02-18</span> <span style=\"color:#000000;\">2019-02-19</span> <span style=\"color:#000000;\">1</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">3</span> <span style=\"color:#000000;\">2019-02-10</span> <span style=\"color:#000000;\">537.71</span> <span style=\"color:#000000;\">1</span> <span style=\"color:#000000;\">2019-02-21</span> <span style=\"color:#000000;\">2019-02-21</span> <span style=\"color:#000000;\">1</span></p></td></tr></tbody></table>\n\n<h2 id=\"第-9章-压缩和存储\"><a href=\"#第-9章-压缩和存储\" class=\"headerlink\" title=\"第 9章 压缩和存储\"></a><strong><strong><strong>第 9章 压缩和存储</strong></strong></strong></h2><h3 id=\"9-1-Hadoop-压缩配置\"><a href=\"#9-1-Hadoop-压缩配置\" class=\"headerlink\" title=\"9.1 Hadoop 压缩配置\"></a><strong><strong><strong>9.1 Hadoop 压缩配置</strong></strong></strong></h3><h4 id=\"9-1-1-MR-支持的压缩编码\"><a href=\"#9-1-1-MR-支持的压缩编码\" class=\"headerlink\" title=\"9.1.1 MR 支持的压缩编码\"></a><strong><strong><strong>9.1.1 MR</strong></strong> <strong><strong>支持的压缩编码</strong></strong></strong></h4><p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/416126ec7862e5267cf2561b40cef54b.png\"></p>\n<p>为了支持多种压缩&#x2F;解压缩算法，Hadoop 引入了编码&#x2F;解码器，如下表所示：</p>\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/3345d6fcb8eba530c58b9d6ecdf7cbe6.png\"></p>\n<p>压缩性能的比较：<img src=\"https://i-blog.csdnimg.cn/blog_migrate/4ddde085e5121c3e763e2c7c8249fae8.png\"></p>\n<p><a href=\"http://google.github.io/snappy/\">http://google.github.io/snappy/</a></p>\n<p>On a single core of a Core i7 processor in 64-bit mode, Snappy compresses at about 250</p>\n<p>MB&#x2F;sec or more and decompresses at about 500 MB&#x2F;sec or more.</p>\n<h4 id=\"9-1-2-压缩参数配置\"><a href=\"#9-1-2-压缩参数配置\" class=\"headerlink\" title=\"9.1.2 压缩参数配置\"></a><strong><strong><strong>9.1.2 压缩参数配置</strong></strong></strong></h4><p>要在 Hadoop 中启用压缩，可以配置如下参数（mapred-site.xml 文件中）：<img src=\"https://i-blog.csdnimg.cn/blog_migrate/051ce983931fcf689df3da41df889d18.png\"></p>\n<h3 id=\"9-2-开启-Map-输出阶段压缩（MR-引擎）\"><a href=\"#9-2-开启-Map-输出阶段压缩（MR-引擎）\" class=\"headerlink\" title=\"9.2 开启 Map 输出阶段压缩（MR** 引擎）**\"></a><strong><strong><strong>9.2 开启</strong></strong> <strong><strong>Map</strong></strong> <strong><strong>输出阶段压缩（</strong></strong></strong><strong>MR</strong>** <strong><strong>引擎）</strong></strong>**</h3><p>开启 map 输出阶段压缩可以减少 job 中 map 和 Reduce task 间数据传输量。具体配置如下：</p>\n<p><strong><strong>1）案例实操：</strong></strong></p>\n<p>（1）开启 hive 中间传输数据压缩功能</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt;set hive.exec.compress.intermediate=true;</span></p></td></tr></tbody></table>\n\n<p>（2）开启 mapreduce 中 map 输出压缩功能</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt;set mapreduce.map.output.compress=true;</span></p></td></tr></tbody></table>\n\n<p>（3）设置 mapreduce 中 map 输出数据的压缩方式</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt;set mapreduce.map.output.compress.codec=</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">org.apache.hadoop.io.compress.SnappyCodec;</span></p></td></tr></tbody></table>\n\n<p>（4）执行查询语句</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select count(ename) name from emp;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>9.3 开启 Reduce 输出阶段压缩</strong></strong></p>\n<p>当 Hive 将 输 出 写 入 到 表 中 时 ， 输出内容同样可以进行压缩。属性hive.exec.compress.output控制着这个功能。用户可能需要保持默认设置文件中的默认值false，这样默认的输出就是非压缩的纯文本文件了。用户可以通过在查询语句或执行脚本中设置这个值为 true，来开启输出结果压缩功能。</p>\n<p><strong><strong>1）案例实操：</strong></strong></p>\n<p>（1）开启 hive 最终输出数据压缩功能</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt;set hive.exec.compress.output=true;</span></p></td></tr></tbody></table>\n\n<p>（2）开启 mapreduce 最终输出数据压缩</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt;set mapreduce.output.fileoutputformat.compress=true;</span></p></td></tr></tbody></table>\n\n<p>（3）设置 mapreduce 最终数据输出压缩方式</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; set mapreduce.output.fileoutputformat.compress.codec =</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">org.apache.hadoop.io.compress.SnappyCodec;</span></p></td></tr></tbody></table>\n\n<p>（4）设置 mapreduce 最终数据输出压缩为块压缩</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; set</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">mapreduce.output.fileoutputformat.compress.type=BLOCK;</span></p></td></tr></tbody></table>\n\n<p>（5）测试一下输出结果是否是压缩文件</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; insert overwrite local directory</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">'/opt/module/data/distribute-result' select * from emp distribute by</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">deptno sort by empno desc;</span></p></td></tr></tbody></table>\n\n<h3 id=\"9-4-文件存储格式\"><a href=\"#9-4-文件存储格式\" class=\"headerlink\" title=\"9.4 文件存储格式\"></a><strong><strong><strong>9.4 文件存储格式</strong></strong></strong></h3><p>Hive 支持的存储数据的格式主要有：TEXTFILE 、SEQUENCEFILE、ORC、PARQUET</p>\n<h4 id=\"9-4-1-列式存储和行式存储\"><a href=\"#9-4-1-列式存储和行式存储\" class=\"headerlink\" title=\"9.4.1 列式存储和行式存储\"></a><strong><strong><strong>9.4.1 列式存储和行式存储</strong></strong></strong></h4><p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/d7983c84ca269eb1e09606a973a8c75a.png\"></p>\n<p>如图所示左边为逻辑表，右边第一个为行式存储，第二个为列式存储。</p>\n<p><strong><strong>1）行存储的特点</strong></strong></p>\n<p>查询满足条件的一整行数据的时候，列存储则需要去每个聚集的字段找到对应的每个列的值，行存储只需要找到其中一个值，其余的值都在相邻地方，所以此时行存储查询的速度更快。</p>\n<p><strong><strong>2）列存储的特点</strong></strong></p>\n<p>因为每个字段的数据聚集存储，在查询只需要少数几个字段的时候，能大大减少读取的</p>\n<p>数据量；每个字段的数据类型一定是相同的，列式存储可以针对性的设计更好的设计压缩算法。</p>\n<p>TEXTFILE 和 SEQUENCEFILE 的存储格式都是基于行存储的；</p>\n<p>ORC 和 PARQUET 是基于列式存储的。</p>\n<h4 id=\"9-4-2-TextFile-格式\"><a href=\"#9-4-2-TextFile-格式\" class=\"headerlink\" title=\"9.4.2 TextFile 格式\"></a><strong><strong><strong>9.4.2 TextFile 格式</strong></strong></strong></h4><p>默认格式，数据不做压缩，磁盘开销大，数据解析开销大。可结合 Gzip、Bzip2使用，但使用 Gzip 这种方式，hive 不会对数据进行切分，从而无法对数据进行并行操作。</p>\n<h4 id=\"9-4-3-Orc-格式\"><a href=\"#9-4-3-Orc-格式\" class=\"headerlink\" title=\"9.4.3 Orc 格式\"></a><strong><strong><strong>9.4.3 Orc 格式</strong></strong></strong></h4><p>Orc (Optimized Row Columnar)是 Hive 0.11 版里引入的新的存储格式。</p>\n<p>如下图所示可以看到每个 Orc 文件由 1 个或多个 stripe 组成，每个stripe 一般为 HDFS的块大小，每一个 stripe 包含多条记录，这些记录按照列进行独立存储，对应到 Parquet中的 row group 的概念。每个 Stripe 里有三部分组成，分别是 Index Data，Row Data，Stripe Footer：</p>\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/60f0aa6ef0786a9ebca712932db4e357.png\"></p>\n<p>1）Index Data：一个轻量级的 index，默认是每隔 1W 行做一个索引。这里做的索引应该只是记录某行的各字段在 Row Data 中的 offset。</p>\n<p>2）Row Data：存的是具体的数据，先取部分行，然后对这些行按列进行存储。对每个列进行了编码，分成多个 Stream 来存储。</p>\n<p>3）Stripe Footer：存的是各个 Stream 的类型，长度等信息。每个文件有一个 File Footer，这里面存的是每个 Stripe 的行数，每个 Column 的数据类型信息等；每个文件的尾部是一个 PostScript，这里面记录了整个文件的压缩类型以及FileFooter 的长度信息等。在读取文件时，会 seek 到文件尾部读 PostScript，从里面解析到File Footer 长度，再读 FileFooter，从里面解析到各个 Stripe 信息，再读各个 Stripe，即从后往前读</p>\n<h4 id=\"9-4-4-Parquet-格式\"><a href=\"#9-4-4-Parquet-格式\" class=\"headerlink\" title=\"9.4.4 Parquet 格式\"></a><strong><strong><strong>9.4.4 Parquet 格式</strong></strong></strong></h4><p>Parquet 文件是以二进制方式存储的，所以是不可以直接读取的，文件中包括该文件的</p>\n<p>数据和元数据，因此 Parquet 格式文件是自解析的。</p>\n<p>（1）行组(Row Group)：每一个行组包含一定的行数，在一个 HDFS 文件中至少存储一</p>\n<p>个行组，类似于 orc 的 stripe 的概念。</p>\n<p>（2）列块(Column Chunk)：在一个行组中每一列保存在一个列块中，行组中的所有列连续的存储在这个行组文件中。一个列块中的值都是相同类型的，不同的列块可能使用不同的算法进行压缩。</p>\n<p>（3）页(Page)：每一个列块划分为多个页，一个页是最小的编码的单位，在同一个列块的不同页可能使用不同的编码方式。</p>\n<p>通常情况下，在存储 Parquet 数据的时候会按照 Block 大小设置行组的大小，由于一般 情况下每一个 Mapper 任务处理数据的最小单位是一个 Block，这样可以把每一个行组由一个 Mapper 任务处理，增大任务执行并行度。Parquet 文件的格式。</p>\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/4ca8c3e179abaf66a70bf40faa528496.png\"></p>\n<p>上图展示了一个 Parquet 文件的内容，一个文件中可以存储多个行组，文件的首位都是 该文件的 Magic Code，用于校验它是否是一个 Parquet 文件，Footer length 记录了文件元数据的大小，通过该值和文件长度可以计算出元数据的偏移量，文件的元数据中包括每一个行组的元数据信息和该文件存储数据的 Schema 信息。除了文件中每一个行组的元数据，每一 页的开始都会存储该页的元数据，在 Parquet 中，有三种类型的页：数据页、字典页和索引 页。数据页用于存储当前行组中该列的值，字典页存储该列值的编码字典，每一个列块中最多包含一个字典页，索引页用来存储当前行组下该列的索引，目前 Parquet 中还不支持索引页</p>\n<h4 id=\"9-4-5-主流文件存储格式对比实验\"><a href=\"#9-4-5-主流文件存储格式对比实验\" class=\"headerlink\" title=\"9.4.5 主流文件存储格式对比实验\"></a><strong><strong><strong>9.4.5 主流文件存储格式对比实验</strong></strong></strong></h4><p>从存储文件的压缩比和查询速度两个角度对比。</p>\n<p>存储文件的压缩比测试：</p>\n<p><strong><strong>1）测试数据</strong></strong></p>\n<p>Log.txt 见文档</p>\n<p><strong><strong>2）TextFile</strong></strong></p>\n<p>（1）创建表，存储数据格式为 TEXTFILE</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table log_text (</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">track_time string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">url string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">session_id string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">referer string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">ip string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">end_user_id string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">city_id string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">row format delimited fields terminated by '\\t'</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">stored as textfile;</span></p></td></tr></tbody></table>\n\n<p>（2）向表中加载数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; load data local inpath '/opt/module/hive/datas/log.data'</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">into table log_text ;</span></p></td></tr></tbody></table>\n\n<p>（3）查看表中数据大小</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; dfs -du -h /user/hive/warehouse/log_text;</span></p></td></tr></tbody></table>\n\n<p>18.13 M &#x2F;user&#x2F;hive&#x2F;warehouse&#x2F;log_text&#x2F;log.data</p>\n<p><strong><strong>3）ORC</strong></strong></p>\n<p>（1）创建表，存储数据格式为 ORC</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table log_orc(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">track_time string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">url string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">session_id string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">referer string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">ip string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">end_user_id string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">city_id string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">row format delimited fields terminated by '\\t'</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">stored as orc</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">tblproperties(\"orc.compress\"=\"NONE\"); -- </span><span style=\"color:#000000;\">设置 </span><span style=\"color:#000000;\">orc </span><span style=\"color:#000000;\">存储不使用压缩</span></p></td></tr></tbody></table>\n\n<p>（2）向表中加载数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; insert into table log_orc select * from log_text;</span></p></td></tr></tbody></table>\n\n<p>（3）查看表中数据大小</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; dfs -du -h /user/hive/warehouse/log_orc/ ;</span></p></td></tr></tbody></table>\n\n<p>7.7 M &#x2F;user&#x2F;hive&#x2F;warehouse&#x2F;log_orc&#x2F;000000_0</p>\n<p><strong><strong>4）Parquet</strong></strong></p>\n<p>（1）创建表，存储数据格式为 parquet</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table log_parquet(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">track_time string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">url string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">session_id string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">referer string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">ip string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">end_user_id string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">city_id string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">row format delimited fields terminated by '\\t'</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">stored as parquet;</span></p></td></tr></tbody></table>\n\n<p>（2）向表中加载数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; insert into table log_parquet select * from log_text;</span></p></td></tr></tbody></table>\n\n<p>（3）查看表中数据大小</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; dfs -du -h /user/hive/warehouse/log_parquet/;</span></p></td></tr></tbody></table>\n\n<p>13.1 M &#x2F;user&#x2F;hive&#x2F;warehouse&#x2F;log_parquet&#x2F;000000_0</p>\n<p>存储文件的对比总结：</p>\n<p>ORC &gt; Parquet &gt; textFile</p>\n<p>存储文件的查询速度测试：</p>\n<p>（1）TextFile</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; insert overwrite local directory</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">'/opt/module/data/log_text' select substring(url,1,4) from log_text;</span></p></td></tr></tbody></table>\n\n<p>（2）ORC</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; insert overwrite local directory</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">'/opt/module/data/log_orc' select substring(url,1,4) from log_orc;</span></p></td></tr></tbody></table>\n\n<p>（3）Parquet</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; insert overwrite local directory</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">'/opt/module/data/log_parquet' select substring(url,1,4) from</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">log_parquet;</span></p></td></tr></tbody></table>\n\n<p>存储文件的查询速度总结：查询速度相近。</p>\n<h3 id=\"9-5-存储和压缩结合\"><a href=\"#9-5-存储和压缩结合\" class=\"headerlink\" title=\"9.5 存储和压缩结合\"></a><strong><strong><strong>9.5 存储和压缩结合</strong></strong></strong></h3><h4 id=\"9-5-1-测试存储和压缩\"><a href=\"#9-5-1-测试存储和压缩\" class=\"headerlink\" title=\"9.5.1 测试存储和压缩\"></a><strong><strong><strong>9.5.1 测试存储和压缩</strong></strong></strong></h4><p>官网： <a href=\"https://cwiki.apache.org/confluence/display/Hive/LanguageManual+ORC\">https://cwiki.apache.org/confluence/display/Hive/LanguageManual+ORC</a></p>\n<p>ORC 存储方式的压缩：<img src=\"https://i-blog.csdnimg.cn/blog_migrate/e0c76fe2157bf8858eecf09904a1f14a.png\"></p>\n<p>注意：所有关于 ORCFile 的参数都是在 HQL 语句的 TBLPROPERTIES 字段里面出现</p>\n<p><strong><strong>1）创建一个 ZLIB 压缩的 ORC 存储方式</strong></strong></p>\n<p>（1）建表语句</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table log_orc_zlib(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">track_time string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">url string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">session_id string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">referer string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">ip string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">end_user_id string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">city_id string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">row format delimited fields terminated by '\\t'</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">stored as orc</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">tblproperties(\"orc.compress\"=\"ZLIB\");</span></p></td></tr></tbody></table>\n\n<p>（2）插入数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">insert into log_orc_zlib select * from log_text;</span></p></td></tr></tbody></table>\n\n<p>（3）查看插入后数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; dfs -du -h /user/hive/warehouse/log_orc_zlib/ ;</span></p></td></tr></tbody></table>\n\n<p>2.78 M &#x2F;user&#x2F;hive&#x2F;warehouse&#x2F;log_orc_none&#x2F;000000_0</p>\n<p><strong><strong>2）创建一个 SNAPPY 压缩的 ORC 存储方式</strong></strong></p>\n<p>（1）建表语句</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table log_orc_snappy(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">track_time string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">url string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">session_id string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">referer string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">ip string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">end_user_id string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">city_id string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">row format delimited fields terminated by '\\t'</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">stored as orc</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">tblproperties(\"orc.compress\"=\"SNAPPY\");</span></p></td></tr></tbody></table>\n\n<p>（2）插入数据 </p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">insert into log_orc_snappy select * from log_text;</span></p></td></tr></tbody></table>\n\n<p>（3）查看插入后数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; dfs -du -h /user/hive/warehouse/log_orc_snappy/;</span></p></td></tr></tbody></table>\n\n<p>3.75 M &#x2F;user&#x2F;hive&#x2F;warehouse&#x2F;log_orc_snappy&#x2F;000000_0</p>\n<p>ZLIB 比 Snappy 压缩的还小。原因是 ZLIB 采用的是 deflate 压缩算法。比 snappy 压缩的 压缩率高。</p>\n<p><strong><strong>3）创建一个 SNAPPY 压缩的 parquet 存储方式</strong></strong></p>\n<p>（1）建表语句</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table log_parquet_snappy(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">track_time string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">url string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">session_id string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">referer string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">ip string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">end_user_id string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">city_id string</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">row format delimited fields terminated by '\\t'</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">stored as parquet</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">tblproperties(\"parquet.compression\"=\"SNAPPY\");</span></p></td></tr></tbody></table>\n\n<p>（2）插入数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">insert into log_parquet_snappy select * from log_text;</span></p></td></tr></tbody></table>\n\n<p>（3）查看插入后数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; dfs -du -h /user/hive/warehouse/log_parquet_snappy/;</span></p></td></tr></tbody></table>\n\n<p>6.39 MB &#x2F;user&#x2F;hive&#x2F;warehouse&#x2F; log_parquet_snappy &#x2F;000000_0</p>\n<p><strong><strong>4）存储方式和压缩总结</strong></strong></p>\n<p>在实际的项目开发当中，hive 表的数据存储格式一般选择：orc 或 parquet。压缩方式一 般选择 snappy，lzo。</p>\n<h2 id=\"第10章-企业级调优\"><a href=\"#第10章-企业级调优\" class=\"headerlink\" title=\"第10章 企业级调优\"></a><strong><strong><strong>第10章 企业级调优</strong></strong></strong></h2><h3 id=\"10-1-执行计划（Explain）\"><a href=\"#10-1-执行计划（Explain）\" class=\"headerlink\" title=\"10.1 执行计划（Explain）\"></a><strong><strong><strong>10.1 执行计划（Explain）</strong></strong></strong></h3><p><strong><strong>1)</strong></strong> <strong><strong>基本语法</strong></strong></p>\n<p><strong><strong>EXPLAIN [EXTENDED | DEPENDENCY | AUTHORIZATION] query</strong></strong></p>\n<p><strong><strong>2）案例操作</strong></strong></p>\n<p>（1）查看下面这条语句的执行计划</p>\n<p>没有生成 MR 任务的</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; explain select * from emp;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Explain</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">STAGE DEPENDENCIES:</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Stage-0 is a root stage</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">STAGE PLANS:</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Stage: Stage-0</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Fetch Operator</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">limit: -1</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Processor Tree:</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">TableScan</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">alias: emp</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Statistics: Num rows: 1 Data size: 7020 Basic stats: COMPLETE</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Column stats: NONE</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Select Operator</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">expressions: empno (type: int), ename (type: string), job</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">(type: string), mgr (type: int), hiredate (type: string), sal (type:</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">double), comm (type: double), deptno (type: int)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">_col6, _col7</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Statistics: Num rows: 1 Data size: 7020 Basic stats: COMPLETE</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Column stats: NONE</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">ListSink</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<p>有生成 MR 任务的</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; explain select deptno, avg(sal) avg_sal from emp group by</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">deptno;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Explain</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">STAGE DEPENDENCIES:</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Stage-1 is a root stage</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Stage-0 depends on stages: Stage-1</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">STAGE PLANS:</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Stage: Stage-1</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Map Reduce</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Map Operator Tree:</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">TableScan</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">alias: emp</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Statistics: Num rows: 1 Data size: 7020 Basic stats: COMPLETE</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Column stats: NONE</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Select Operator</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">expressions: sal (type: double), deptno (type: int)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">outputColumnNames: sal, deptno</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Statistics: Num rows: 1 Data size: 7020 Basic stats: COMPLETE</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Column stats: NONE</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Group By Operator</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">aggregations: sum(sal), count(sal)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">keys: deptno (type: int)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">mode: hash</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">outputColumnNames: _col0, _col1, _col2</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Statistics: Num rows: 1 Data size: 7020 Basic stats:</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">COMPLETE Column stats: NONE</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Reduce Output Operator</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">key expressions: _col0 (type: int)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">sort order: +</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Map-reduce partition columns: _col0 (type: int)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Statistics: Num rows: 1 Data size: 7020 Basic stats:</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">COMPLETE Column stats: NONE</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">value expressions: _col1 (type: double), _col2 (type:</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">bigint)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Execution mode: vectorized</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Reduce Operator Tree:</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Group By Operator</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">aggregations: sum(VALUE._col0), count(VALUE._col1)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">keys: KEY._col0 (type: int)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">mode: mergepartial</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">outputColumnNames: _col0, _col1, _col2</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Statistics: Num rows: 1 Data size: 7020 Basic stats: COMPLETE</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Column stats: NONE</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Select Operator</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">expressions: _col0 (type: int), (_col1 / _col2) (type: double)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">outputColumnNames: _col0, _col1</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Statistics: Num rows: 1 Data size: 7020 Basic stats: COMPLETE</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Column stats: NONE</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">File Output Operator</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">compressed: false</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Statistics: Num rows: 1 Data size: 7020 Basic stats: COMPLETE</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Column stats: NONE</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">table:</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">input format:</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">org.apache.hadoop.mapred.SequenceFileInputFormat</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">output format:</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Stage: Stage-0</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Fetch Operator</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">limit: -1</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Processor Tree:</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">ListSink</span></p></td></tr></tbody></table>\n\n<p>（2）查看详细执行计划</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; explain extended select * from emp;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; explain extended select deptno, avg(sal) avg_sal from emp</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">group by deptno;</span></p></td></tr></tbody></table>\n\n<h3 id=\"10-2-Fetch-抓取\"><a href=\"#10-2-Fetch-抓取\" class=\"headerlink\" title=\"10.2 Fetch 抓取\"></a><strong><strong><strong>10.2 Fetch 抓取</strong></strong></strong></h3><p>Fetch 抓取是指，Hive 中对某些情况的查询可以不必使用 MapReduce 计算。例如：SELECT * FROM employees;在这种情况下，Hive 可以简单地读取 employee 对应的存储目录下的文件，然后输出查询结果到控制台。</p>\n<p>在 hive-default.xml.template 文件中 hive.fetch.task.conversion 默认是 more，老版本 hive 默认是 minimal，该属性修改为 more 以后，在全局查找、字段查找、limit 查找等都不走mapreduce。</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&lt;property&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&lt;name&gt;hive.fetch.task.conversion&lt;/name&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&lt;value&gt;more&lt;/value&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&lt;description&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Expects one of [none, minimal, more].</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Some select queries can be converted to single FETCH task minimizing</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">latency.</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Currently the query should be single sourced not having any subquery</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">and should not have any aggregations or distincts (which incurs RS),</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">lateral views and joins.</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">0. none : disable hive.fetch.task.conversion</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">1. minimal : SELECT STAR, FILTER on partition columns, LIMIT only</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">2. more : SELECT, FILTER, LIMIT only (support TABLESAMPLE and</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">virtual columns)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&lt;/description&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&lt;/property</span></p></td></tr></tbody></table>\n\n<p><strong><strong>1）案例实操：</strong></strong></p>\n<p>（1）把 hive.fetch.task.conversion 设置成 none，然后执行查询语句，都会执行 mapreduce程序。 </p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; set hive.fetch.task.conversion=none;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select * from emp;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select ename from emp;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select ename from emp limit 3;</span></p></td></tr></tbody></table>\n\n<p>（2）把 hive.fetch.task.conversion 设置成 more，然后执行查询语句，如下查询方式都不会执行 mapreduce 程序。</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; set hive.fetch.task.conversion=more;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select * from emp;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select ename from emp;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select ename from emp limit 3;</span></p></td></tr></tbody></table>\n\n<h3 id=\"10-3-本地模式\"><a href=\"#10-3-本地模式\" class=\"headerlink\" title=\"10.3 本地模式\"></a><strong><strong><strong>10.3 本地模式</strong></strong></strong></h3><p>大多数的 Hadoop Job 是需要 Hadoop 提供的完整的可扩展性来处理大数据集的。不过，有时 Hive 的输入数据量是非常小的。在这种情况下，为查询触发执行任务消耗的时间可能会比实际 job 的执行时间要多的多。对于大多数这种情况，Hive 可以通过本地模式在单台机器上处理所有的任务。对于小数据集，执行时间可以明显被缩短。</p>\n<p>用户可以通过设置 hive.exec.mode.local.auto 的值为 true，来让 Hive 在适当的时候自动启动这个优化。</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">set hive.exec.mode.local.auto=true; //</span><span style=\"color:#000000;\">开启本地 </span><span style=\"color:#000000;\">mr</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">//</span><span style=\"color:#000000;\">设置 </span><span style=\"color:#000000;\">local mr </span><span style=\"color:#000000;\">的最大输入数据量，当输入数据量小于这个值时采用 </span><span style=\"color:#000000;\">local mr </span><span style=\"color:#000000;\">的方式，默认</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">为 </span><span style=\"color:#000000;\">134217728</span><span style=\"color:#000000;\">，即 </span><span style=\"color:#000000;\">128M</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">set hive.exec.mode.local.auto.inputbytes.max=50000000;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">//</span><span style=\"color:#000000;\">设置 </span><span style=\"color:#000000;\">local mr </span><span style=\"color:#000000;\">的最大输入文件个数，当输入文件个数小于这个值时采用 </span><span style=\"color:#000000;\">local mr </span><span style=\"color:#000000;\">的方式，默</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">认为 </span><span style=\"color:#000000;\">4</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">set hive.exec.mode.local.auto.input.files.max=10;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>1）案例实操：</strong></strong></p>\n<p>（2）关闭本地模式（默认是关闭的），并执行查询语句</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select count(*) from emp group by deptno;</span></p></td></tr></tbody></table>\n\n<h3 id=\"10-4-表的优化\"><a href=\"#10-4-表的优化\" class=\"headerlink\" title=\"10.4 表的优化\"></a><strong><strong><strong>10.4 表的优化</strong></strong></strong></h3><h4 id=\"10-4-1-小表大表-Join（MapJOIN）\"><a href=\"#10-4-1-小表大表-Join（MapJOIN）\" class=\"headerlink\" title=\"10.4.1 小表大表 Join（MapJOIN）\"></a><strong><strong><strong>10.4.1 小表大表 Join（MapJOIN）</strong></strong></strong></h4><p>将 key 相对分散，并且数据量小的表放在 join 的左边，可以使用 map join 让小的维度表先进内存。在 map 端完成 join。</p>\n<p>实际测试发现：新版的 hive 已经对小表 JOIN 大表和大表 JOIN 小表进行了优化。小表放在左边和右边已经没有区别。</p>\n<p>案例实操</p>\n<p><strong><strong>1）需求介绍</strong></strong></p>\n<p>测试大表 JOIN 小表和小表 JOIN 大表的效率</p>\n<p><strong><strong>2）开启 MapJoin 参数设置</strong></strong></p>\n<p>（1）设置自动选择 Mapjoin</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">set hive.auto.convert.join = true; </span><span style=\"color:#000000;\">默认为 </span><span style=\"color:#000000;\">true</span></p></td></tr></tbody></table>\n\n<p>（2）大表小表的阈值设置（默认 25M 以下认为是小表）：</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">set hive.mapjoin.smalltable.filesize = 25000000;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>3）</strong>****<strong>MapJoin</strong></strong> <strong><strong>工作机制</strong></strong></p>\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/62d78a6f540768f6c00aa8c52f51c88d.png\"></p>\n<p><strong><strong>4）建大表、小表和</strong></strong> <strong><strong>JOIN</strong></strong> <strong><strong>后表的语句</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">// </span><span style=\"color:#000000;\">创建大表</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table bigtable(id bigint, t bigint, uid string, keyword string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">url_rank int, click_num int, click_url string) row format delimited</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">fields terminated by '\\t';</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">// </span><span style=\"color:#000000;\">创建小表</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table smalltable(id bigint, t bigint, uid string, keyword string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">url_rank int, click_num int, click_url string) row format delimited</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">fields terminated by '\\t';</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">// </span><span style=\"color:#000000;\">创建 </span><span style=\"color:#000000;\">join </span><span style=\"color:#000000;\">后表的语句</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table jointable(id bigint, t bigint, uid string, keyword string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">url_rank int, click_num int, click_url string) row format delimited</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">fields terminated by '\\t';</span></p></td></tr></tbody></table>\n\n<p><strong><strong>5）分别向大表和小表中导入数据</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; load data local inpath '/opt/module/data/bigtable' into</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">table bigtable;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt;load data local inpath '/opt/module/data/smalltable' into</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">table smalltable;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>6）小表</strong></strong> <strong><strong>JOIN</strong></strong> <strong><strong>大表语句</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">insert overwrite table jointable</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select b.id, b.t, b.uid, b.keyword, b.url_rank, b.click_num, b.click_url</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">from smalltable s</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">join bigtable b</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">on b.id = s.id;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>7）大表</strong></strong> <strong><strong>JOIN</strong></strong> <strong><strong>小表语句</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">insert overwrite table jointable</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select b.id, b.t, b.uid, b.keyword, b.url_rank, b.click_num, b.click_url</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">from bigtable b</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">join smalltable s</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">on s.id = b.id;</span></p></td></tr></tbody></table>\n\n<h4 id=\"10-4-2-大表-Join-大表\"><a href=\"#10-4-2-大表-Join-大表\" class=\"headerlink\" title=\"10.4.2 大表 Join 大表\"></a><strong><strong><strong>10.4.2 大表 Join 大表</strong></strong></strong></h4><p><strong><strong>1）空 KEY 过滤</strong></strong></p>\n<p>有时 join 超时是因为某些 key 对应的数据太多，而相同 key 对应的数据都会发送到相同的 reducer 上，从而导致内存不够。此时我们应该仔细分析这些异常的 key，很多情况下，这些 key 对应的数据是异常数据，我们需要在 SQL 语句中进行过滤。例如 key 对应的字段为空，操作如下：</p>\n<p>案例实操</p>\n<p>（1）配置历史服务器</p>\n<p>配置 mapred-site.xml</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&lt;property&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&lt;name&gt;mapreduce.jobhistory.address&lt;/name&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&lt;value&gt;hadoop102:10020&lt;/value&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&lt;/property&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&lt;property&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&lt;name&gt;mapreduce.jobhistory.webapp.address&lt;/name&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&lt;value&gt;hadoop102:19888&lt;/value&gt;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">&lt;/property&gt;</span></p></td></tr></tbody></table>\n\n<p>启动历史服务器</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">sbin/mr-jobhistory-daemon.sh start historyserver</span></p></td></tr></tbody></table>\n\n<p>（2）创建原始数据空 id 表</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">// </span><span style=\"color:#000000;\">创建空 </span><span style=\"color:#000000;\">id </span><span style=\"color:#000000;\">表</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table nullidtable(id bigint, t bigint, uid string, keyword string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">url_rank int, click_num int, click_url string) row format delimited</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">fields terminated by '\\t';</span></p></td></tr></tbody></table>\n\n<p>（3）分别加载原始数据和空 id 数据到对应表中</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; load data local inpath '/opt/module/data/nullid' into</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">table nullidtable;</span></p></td></tr></tbody></table>\n\n<p>（4）测试不过滤空 id</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; insert overwrite table jointable select n.* from</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">nullidtable n left join bigtable o on n.id = o.id;</span></p></td></tr></tbody></table>\n\n<p>（5）测试过滤空 id</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; insert overwrite table jointable select n.* from (select</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">* from nullidtable where id is not null) n left join bigtable o on n.id = o.id;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>2）空 key 转换</strong></strong></p>\n<p>有时虽然某个 key 为空对应的数据很多，但是相应的数据不是异常数据，必须要包含在join 的结果中，此时我们可以表 a 中 key 为空的字段赋一个随机的值，使得数据随机均匀地分不到不同的 reducer 上。例如：</p>\n<p>案例实操：</p>\n<p>不随机分布空 null 值：</p>\n<p>（1）设置 5 个 reduce 个数</p>\n<p>set mapreduce.job.reduces &#x3D; 5;</p>\n<p>（2）JOIN 两张表</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">insert overwrite table jointable</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select n.* from nullidtable n left join bigtable b on n.id = b.id;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<p>结果：如下图所示，可以看出来，出现了数据倾斜，某些 reducer 的资源消耗远大于其他 reducer。</p>\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/b00fc2842421f90aaf565537019e855d.png\">随机分布空 null 值</p>\n<p>（1）设置 5 个 reduce 个数</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">set mapreduce.job.reduces = 5;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<p>（2）JOIN 两张表</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">insert overwrite table jointable</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select n.* from nullidtable n full join bigtable o on</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">nvl(n.id,rand()) = o.id;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"></p></td></tr></tbody></table>\n\n<p>结果：如下图所示，可以看出来，消除了数据倾斜，负载均衡 reducer 的资源消耗</p>\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/78c9cf378012a19e05632dae469cbacd.png\"></p>\n<p><strong><strong>3）SMB(Sort Merge Bucket join)</strong></strong></p>\n<p>（1）创建第二张大表</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table bigtable2(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">id bigint,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">t bigint,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">uid string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">keyword string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">url_rank int,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">click_num int,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">click_url string)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">row format delimited fields terminated by '\\t';</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">load data local inpath '/opt/module/data/bigtable' into table bigtable2;</span></p></td></tr></tbody></table>\n\n<p>测试大表直接 JOIN</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">insert overwrite table jointable</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select b.id, b.t, b.uid, b.keyword, b.url_rank, b.click_num, b.click_url</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">from bigtable s</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">join bigtable2 b</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">on b.id = s.id;</span></p></td></tr></tbody></table>\n\n<p>（2）创建分通表 1,桶的个数不要超过可用 CPU 的核数</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table bigtable_buck1(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">id bigint,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">t bigint,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">uid string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">keyword string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">url_rank int,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">click_num int,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">click_url string)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">clustered by(id)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">sorted by(id)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">into 6 buckets</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">row format delimited fields terminated by '\\t';</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">load data local inpath '/opt/module/data/bigtable' into table</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">bigtable_buck1;</span></p></td></tr></tbody></table>\n\n<p>（3）创建分通表 2,桶的个数不要超过可用 CPU 的核数</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">create table bigtable_buck2(</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">id bigint,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">t bigint,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">uid string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">keyword string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">url_rank int,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">click_num int,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">click_url string)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">clustered by(id)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">sorted by(id)</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">into 6 buckets</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">row format delimited fields terminated by '\\t';</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">load data local inpath '/opt/module/data/bigtable' into table</span></p></td></tr></tbody></table>\n\n<p>（4）设置参数</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">set hive.optimize.bucketmapjoin = true;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">set hive.optimize.bucketmapjoin.sortedmerge = true;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">set</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive.input.format=org.apache.hadoop.hive.ql.io.BucketizedHiveInputFormat;</span></p></td></tr></tbody></table>\n\n<p>（5）测试</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">insert overwrite table jointable</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">select b.id, b.t, b.uid, b.keyword, b.url_rank, b.click_num, b.click_url</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">from bigtable_buck1 s</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">join bigtable_buck2 b</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">on b.id = s.id;</span></p></td></tr></tbody></table>\n\n<h4 id=\"10-4-3-Group-By\"><a href=\"#10-4-3-Group-By\" class=\"headerlink\" title=\"10.4.3 Group By\"></a><strong><strong><strong>10.4.3 Group By</strong></strong></strong></h4><p>默认情况下，Map 阶段同一 Key 数据分发给一个 reduce，当一个 key 数据过大时就倾斜了。</p>\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/b0a3224084dadfc2abecaedfbaf730ef.png\"></p>\n<p>并不是所有的聚合操作都需要在 Reduce 端完成，很多聚合操作都可以先在 Map 端进行 部分聚合，最后在 Reduce 端得出最终结果。</p>\n<p><strong><strong>1）开启 Map 端聚合参数设置</strong></strong></p>\n<p>（1）是否在 Map 端进行聚合，默认为 True</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">set hive.map.aggr = true</span></p></td></tr></tbody></table>\n\n<p>（2）在 Map 端进行聚合操作的条目数目</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">set hive.groupby.mapaggr.checkinterval = 100000</span></p></td></tr></tbody></table>\n\n<p>（3）有数据倾斜的时候进行负载均衡（默认是 false）</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">set hive.groupby.skewindata = true</span></p></td></tr></tbody></table>\n\n<p>当选项设定为 true，生成的查询计划会有两个 MR Job。第一个 MR Job 中，Map 的输出 结果会随机分布到 Reduce 中，每个 Reduce 做部分聚合操作，并输出结果，这样处理的结果是相同的 Group By Key 有可能被分发到不同的 Reduce 中，从而达到负载均衡的目的；第二个 MR Job 再根据预处理的数据结果按照 Group By Key 分布到 Reduce 中（这个过程可以保证相同的 Group By Key 被分布到同一个 Reduce 中），最后完成最终的聚合操作。</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select deptno from emp group by deptno;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Stage-Stage-1: Map: 1 Reduce: 5 Cumulative CPU: 23.68 sec HDFS Read:</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">19987 HDFS Write: 9 SUCCESS</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Total MapReduce CPU Time Spent: 23 seconds 680 msec</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">OK</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">deptno</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">10</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">20</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">30</span></p></td></tr></tbody></table>\n\n<p>优化以后</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; set hive.groupby.skewindata = true;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select deptno from emp group by deptno;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Stage-Stage-1: Map: 1 Reduce: 5 Cumulative CPU: 28.53 sec HDFS Read:</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">18209 HDFS Write: 534 SUCCESS</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Stage-Stage-2: Map: 1 Reduce: 5 Cumulative CPU: 38.32 sec HDFS Read:</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">15014 HDFS Write: 9 SUCCESS</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Total MapReduce CPU Time Spent: 1 minutes 6 seconds 850 msec</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">OK</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">deptno</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">10</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">20</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">30</span></p></td></tr></tbody></table>\n\n<h4 id=\"10-4-4-Count-Distinct-去重统计\"><a href=\"#10-4-4-Count-Distinct-去重统计\" class=\"headerlink\" title=\"10.4.4 Count(Distinct) 去重统计\"></a><strong><strong><strong>10.4.4 Count(Distinct) 去重统计</strong></strong></strong></h4><p>数据量小的时候无所谓，数据量大的情况下，由于 COUNT DISTINCT 操作需要用一个Reduce Task 来完成，这一个 Reduce 需要处理的数据量太大，就会导致整个 Job 很难完成，一般 COUNT DISTINCT 使用先 GROUP BY 再 COUNT 的方式替换,但是需要注意 group by 造成的数据倾斜问题.</p>\n<p>1）<strong><strong>案例实操</strong></strong></p>\n<p>（1）创建一张大表</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; create table bigtable(id bigint, time bigint, uid string,</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">keyword</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">string, url_rank int, click_num int, click_url string) row format</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">delimited</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">fields terminated by '\\t';</span></p></td></tr></tbody></table>\n\n<p>（2）加载数据</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; load data local inpath '/opt/module/data/bigtable' into</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">table bigtable;</span></p></td></tr></tbody></table>\n\n<p>（3）设置 5 个 reduce 个数</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">set mapreduce.job.reduces = 5;</span></p></td></tr></tbody></table>\n\n<p>（4）执行去重 id 查询</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select count(distinct id) from bigtable;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Stage-Stage-1: Map: 1 Reduce: 1 Cumulative CPU: 7.12 sec HDFS Read:</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">120741990 HDFS Write: 7 SUCCESS</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Total MapReduce CPU Time Spent: 7 seconds 120 msec</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">OK</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">c0</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">100001</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Time taken: 23.607 seconds, Fetched: 1 row(s)</span></p></td></tr></tbody></table>\n\n<p>（5）采用 GROUP by 去重 id</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select count(id) from (select id from bigtable group by</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">id) a;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Stage-Stage-1: Map: 1 Reduce: 5 Cumulative CPU: 17.53 sec HDFS Read:</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">120752703 HDFS Write: 580 SUCCESS</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Stage-Stage-2: Map: 1 Reduce: 1 Cumulative CPU: 4.29 sec2 HDFS Read:</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">9409 HDFS Write: 7 SUCCESS</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Total MapReduce CPU Time Spent: 21 seconds 820 msec</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">OK</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">_c0</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">100001</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Time taken: 50.795 seconds, Fetched: 1 row(s)</span></p></td></tr></tbody></table>\n\n<p>虽然会多用一个 Job 来完成，但在数据量大的情况下，这个绝对是值得的。</p>\n<h4 id=\"10-4-5-笛卡尔积\"><a href=\"#10-4-5-笛卡尔积\" class=\"headerlink\" title=\"10.4.5 笛卡尔积\"></a><strong><strong><strong>10.4.5 笛卡尔积</strong></strong></strong></h4><p>尽量避免笛卡尔积，join 的时候不加 on 条件，或者无效的 on 条件，Hive 只能使用 1 个reducer 来完成笛卡尔积。</p>\n<h4 id=\"10-4-6-行列过滤\"><a href=\"#10-4-6-行列过滤\" class=\"headerlink\" title=\"10.4.6 行列过滤\"></a><strong><strong><strong>10.4.6 行列过滤</strong></strong></strong></h4><p>列处理：在 SELECT 中，只拿需要的列，如果有分区，尽量使用分区过滤，少用 SELECT *。</p>\n<p>行处理：在分区剪裁中，当使用外关联时，如果将副表的过滤条件写在 Where 后面，那么就会先全表关联，之后再过滤，比如：</p>\n<p>案例实操：</p>\n<p><strong><strong>1）测试先关联两张表，再用 where 条件过滤</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select o.id from bigtable b</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">join bigtable o on o.id = b.id</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">where o.id &lt;= 10;</span></p></td></tr></tbody></table>\n\n<p>Time taken: 34.406 seconds, Fetched: 100 row(s)</p>\n<p><strong><strong>2）通过子查询后，再关联表</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select b.id from bigtable b</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">join (select id from bigtable where id &lt;= 10) o on b.id = o.id;</span></p></td></tr></tbody></table>\n\n<p>Time taken: 30.058 seconds, Fetched: 100 row(s)</p>\n<h4 id=\"10-4-7-分区\"><a href=\"#10-4-7-分区\" class=\"headerlink\" title=\"10.4.7 分区\"></a><strong><strong><strong>10.4.7 分区</strong></strong></strong></h4><p>详见 7.1 章。</p>\n<h4 id=\"10-4-8-分桶\"><a href=\"#10-4-8-分桶\" class=\"headerlink\" title=\"10.4.8 分桶\"></a><strong><strong><strong>10.4.8 分桶</strong></strong></strong></h4><p>详见 7.2 章。</p>\n<h3 id=\"10-5-合理设置-Map-及-Reduce-数\"><a href=\"#10-5-合理设置-Map-及-Reduce-数\" class=\"headerlink\" title=\"10.5 合理设置 Map 及 Reduce 数\"></a><strong><strong><strong>10.5 合理设置 Map 及 Reduce 数</strong></strong></strong></h3><p><strong><strong>1）</strong></strong>通常情况下，作业会通过 input 的目录产生一个或者多个 map 任务。</p>\n<p>主要的决定因素有：input 的文件总个数，input 的文件大小，集群设置的文件块大小。</p>\n<p><strong><strong>2）</strong></strong>是不是 map 数越多越好？</p>\n<p>答案是否定的。如果一个任务有很多小文件（远远小于块大小 128m），则每个小文件也会被当做一个块，用一个 map 任务来完成，而一个 map 任务启动和初始化的时间远远大于逻辑处理的时间，就会造成很大的资源浪费。而且，同时可执行的 map 数是受限的。</p>\n<p><strong><strong>3）</strong></strong>是不是保证每个 map 处理接近 128m 的文件块，就高枕无忧了？</p>\n<p>答案也是不一定。比如有一个 127m 的文件，正常会用一个 map 去完成，但这个文件只针对上面的问题 2 和 3，我们需要采取两种方式来解决：即减少 map 数和增加 map 数；</p>\n<h3 id=\"10-5-1-复杂文件增加-Map-数\"><a href=\"#10-5-1-复杂文件增加-Map-数\" class=\"headerlink\" title=\"10.5.1 复杂文件增加 Map 数\"></a><strong><strong><strong>10.5.1 复杂文件增加 Map 数</strong></strong></strong></h3><p>当 input 的文件都很大，任务逻辑复杂，map 执行非常慢的时候，可以考虑增加 Map 数，来使得每个 map 处理的数据量减少，从而提高任务的执行效率。</p>\n<p>增加 map 的方法为：根据</p>\n<p>computeSliteSize(Math.max(minSize,Math.min(maxSize,blocksize)))&#x3D;blocksize&#x3D;128M 公式，</p>\n<p>调整 maxSize 最大值。让 maxSize 最大值低于 blocksize 就可以增加 map 的个数。</p>\n<p>案例实操：</p>\n<p><strong><strong>1）执行查询</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select count(*) from emp;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Hadoop job information for Stage-1: number of mappers: 1; number of</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">reducers: 1</span></p></td></tr></tbody></table>\n\n<p><strong><strong>2）设置最大切片值为</strong></strong> <strong><strong>100</strong></strong> <strong><strong>个字节</strong></strong></p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; set mapreduce.input.fileinputformat.split.maxsize=100;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive (default)&gt; select count(*) from emp;</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">Hadoop job information for Stage-1: number of mappers: 6; number of</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">reducers: 1</span></p></td></tr></tbody></table>\n\n<h4 id=\"10-5-2-小文件进行合并\"><a href=\"#10-5-2-小文件进行合并\" class=\"headerlink\" title=\"10.5.2 小文件进行合并\"></a><strong><strong><strong>10.5.2 小文件进行合并</strong></strong></strong></h4><p><strong><strong>1）</strong></strong>在 map 执行前合并小文件，减少 map 数：CombineHiveInputFormat 具有对小文件进行合 并的功能（系统默认的格式）。HiveInputFormat 没有对小文件合并功能。</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">set hive.input.format=</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">org.apache.hadoop.hive.ql.io.CombineHiveInputFormat;</span></p></td></tr></tbody></table>\n\n<p><strong><strong>2）</strong></strong>在 Map-Reduce 的任务结束时合并小文件的设置：</p>\n<p>在 map-only 任务结束时合并小文件，默认 true</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">SET hive.merge.mapfiles = true;</span></p></td></tr></tbody></table>\n\n<p>在 map-reduce 任务结束时合并小文件，默认 false</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">SET hive.merge.mapredfiles = true;</span></p></td></tr></tbody></table>\n\n<p>合并文件的大小，默认 256M</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">SET hive.merge.size.per.task = 268435456;</span></p></td></tr></tbody></table>\n\n<p>当输出文件的平均大小小于该值时，启动一个独立的 map-reduce 任务进行文件 merge</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">SET hive.merge.smallfiles.avgsize = 16777216;</span></p></td></tr></tbody></table>\n\n<h4 id=\"10-5-3-合理设置-Reduce-数\"><a href=\"#10-5-3-合理设置-Reduce-数\" class=\"headerlink\" title=\"10.5.3 合理设置 Reduce 数\"></a><strong><strong><strong>10.5.3 合理设置 Reduce 数</strong></strong></strong></h4><p><strong><strong>1）调整 reduce 个数方法一</strong></strong></p>\n<p>（1）每个 Reduce 处理的数据量默认是 256MB</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive.exec.reducers.bytes.per.reducer=256000000</span></p></td></tr></tbody></table>\n\n<p>（2）每个任务最大的 reduce 数，默认为 1009</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">hive.exec.reducers.max=1009</span></p></td></tr></tbody></table>\n\n<p>（3）计算 reducer 数的公式</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">N=min(参数 </span><span style=\"color:#000000;\">2</span><span style=\"color:#000000;\">，总输入数据量</span><span style=\"color:#000000;\">/</span><span style=\"color:#000000;\">参数 </span><span style=\"color:#000000;\">1)</span></p></td></tr></tbody></table>\n\n<p><strong><strong>2）调整 reduce 个数方法二</strong></strong></p>\n<p>在 hadoop 的 mapred-default.xml 文件中修改</p>\n<table border=\"1\" cellspacing=\"0\" style=\"margin-left:6.75pt;\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">set mapreduce.job.reduces = 15;</span></p></td></tr></tbody></table>\n\n<p>设置每个 job 的 Reduce 个数</p>\n<p><strong><strong>3）reduce 个数并不是越多越好</strong></strong></p>\n<p>（1）过多的启动和初始化 reduce 也会消耗时间和资源；</p>\n<p>（2）另外，有多少个 reduce，就会有多少个输出文件，如果生成了很多个小文件，那么如果这些小文件作为下一个任务的输入，则也会出现小文件过多的问题；</p>\n<p>在设置 reduce 个数的时候也需要考虑这两个原则：处理大数据量利用合适的 reduce 数；使单个 reduce 任务处理数据量大小要合适；</p>\n<h3 id=\"10-6-并行执行\"><a href=\"#10-6-并行执行\" class=\"headerlink\" title=\"10.6 并行执行\"></a><strong><strong><strong>10.6 并行执行</strong></strong></strong></h3><p>Hive 会将一个查询转化成一个或者多个阶段。这样的阶段可以是 MapReduce 阶段、抽样阶段、合并阶段、limit 阶段。或者 Hive 执行过程中可能需要的其他阶段。默认情况下，Hive 一次只会执行一个阶段。不过，某个特定的 job 可能包含众多的阶段，而这些阶段可能并非完全互相依赖的，也就是说有些阶段是可以并行执行的，这样可能使得整个 job 的执行时间缩短。不过，如果有更多的阶段可以并行执行，那么 job 可能就越快完成。</p>\n<p>通过设置参数 hive.exec.parallel 值为 true，就可以开启并发执行。不过，在共享集群中，需要注意下，如果 job 中并行阶段增多，那么集群利用率就会增加。</p>\n<table border=\"1\" cellspacing=\"0\"><tbody><tr><td style=\"vertical-align:top;width:426.1pt;\"><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">set hive.exec.parallel=true; //打开任务并行执行</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">set hive.exec.parallel.thread.number=16; //</span><span style=\"color:#000000;\">同一个 </span><span style=\"color:#000000;\">sql </span><span style=\"color:#000000;\">允许最大并行度，默认为</span></p><p style=\"margin-left:.0001pt;text-align:left;\"><span style=\"color:#000000;\">8</span><span style=\"color:#000000;\">。</span></p></td></tr></tbody></table>\n\n<p>当然，得是在系统资源比较空闲的时候才有优势，否则，没资源，并行也起不来。</p>\n<h3 id=\"10-7-严格模式\"><a href=\"#10-7-严格模式\" class=\"headerlink\" title=\"10.7 严格模式\"></a><strong><strong><strong>10.7 严格模式</strong></strong></strong></h3><p>Hive 可以通过设置防止一些危险操作：</p>\n<p><strong><strong>1）分区表不使用分区过滤</strong></strong></p>\n<p>将 hive.strict.checks.no.partition.filter 设置为 true 时，对于分区表，除非 where 语句中含有分区字段过滤条件来限制范围，否则不允许执行。换句话说，就是用户不允许扫描所有分区。进行这个限制的原因是，通常分区表都拥有非常大的数据集，而且数据增加迅速。没有进行分区限制的查询可能会消耗令人不可接受的巨大资源来处理这个表。</p>\n<p><strong><strong>2）使用 order by 没有 limit 过滤</strong></strong></p>\n<p>将 hive.strict.checks.orderby.no.limit 设置为 true 时，对于使用了 order by 语句的查询，要 求必须使用 limit 语句。因为 order by 为了执行排序过程会将所有的结果数据分发到同一个Reducer 中进行处理，强制要求用户增加这个 LIMIT 语句可以防止 Reducer 额外执行很长一段时间。</p>\n<p><strong><strong>3）笛卡尔积</strong></strong></p>\n<p>将 hive.strict.checks.cartesian.product 设置为 true 时，会限制笛卡尔积的查询。对关系型数据库非常了解的用户可能期望在 执行 JOIN 查询的时候不使用 ON 语句而是使用 where 语句，这样关系数据库的执行优化器就可以高效地将 WHERE 语句转化成那个 ON 语句。不幸的是，Hive 并不会执行这种优化，因此，如果表足够大，那么这个查询就会出现不可控的情况。</p>\n<h3 id=\"10-8-JVM-重用\"><a href=\"#10-8-JVM-重用\" class=\"headerlink\" title=\"10.8 JVM 重用\"></a><strong><strong><strong>10.8 JVM 重用</strong></strong></strong></h3><h3 id=\"10-9-压缩\"><a href=\"#10-9-压缩\" class=\"headerlink\" title=\"10.9 压缩\"></a><strong><strong><strong>10.9 压缩</strong></strong></strong></h3><p>Article link： <a href=\"https://tqgoblin.site/post/csdn/Hive%E8%AF%A6%E8%A7%A3/\">https://tqgoblin.site/post/csdn/Hive详解/</a> <div align=left> Author：<a href=\"https://www.tqgoblin.site\"> Stephen </a> </div></p>\n","text":" 目录 第1章 Hive基本概念 1.1 什么是Hive 1.2 Hive的优缺点 1.2.1 优点 1.2.2 缺点 1.3 Hive架构原理 1.4 Hiv...","permalink":"/post/csdn/Hive详解","photos":[],"count_time":{"symbolsCount":"80k","symbolsTime":"1:13"},"categories":[{"name":"大数据","slug":"大数据","count":7,"path":"api/categories/大数据.json"}],"tags":[{"name":"hive","slug":"hive","count":1,"path":"api/tags/hive.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC1%E7%AB%A0-Hive%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">第1章** Hive基本概念******</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-%E4%BB%80%E4%B9%88%E6%98%AFHive\"><span class=\"toc-text\">1.1 什么是Hive</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-Hive%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9\"><span class=\"toc-text\">1.2 Hive的优缺点</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-1-%E4%BC%98%E7%82%B9\"><span class=\"toc-text\">1.2.1 优点</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-2-%E7%BC%BA%E7%82%B9\"><span class=\"toc-text\">1.2.2 缺点</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-3-Hive%E6%9E%B6%E6%9E%84%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">1.3 Hive架构原理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-4-Hive%E5%92%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E6%AF%94%E8%BE%83\"><span class=\"toc-text\">1.4 Hive和数据库比较</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-4-1-%E6%9F%A5%E8%AF%A2%E8%AF%AD%E8%A8%80\"><span class=\"toc-text\">1.4.1 查询语言</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-4-2-%E6%95%B0%E6%8D%AE%E6%9B%B4%E6%96%B0\"><span class=\"toc-text\">1.4.2 数据更新</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-4-3-%E6%89%A7%E8%A1%8C%E5%BB%B6%E8%BF%9F\"><span class=\"toc-text\">1.4.3 执行延迟</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-4-4-%E6%95%B0%E6%8D%AE%E8%A7%84%E6%A8%A1\"><span class=\"toc-text\">1.4.4 数据规模</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC2%E7%AB%A0-Hive%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">第2章 Hive安装</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-Hive%E7%9A%84%E5%AE%89%E8%A3%85%E5%9C%B0%E5%9D%80\"><span class=\"toc-text\">2.1 Hive的安装地址</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-Hive%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">2.2 Hive安装部署</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%E5%B0%86%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E5%AF%BC%E5%85%A5Hive%E6%A1%88%E4%BE%8B\"><span class=\"toc-text\">2.3 将本地文件导入Hive案例</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-MySql%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">2.4 MySql安装</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-5-Hive-%E5%85%83%E6%95%B0%E6%8D%AE%E9%85%8D%E7%BD%AE%E5%88%B0-MySql\"><span class=\"toc-text\">2.5 Hive 元数据配置到** MySql******</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-5-1-%E9%A9%B1%E5%8A%A8%E6%8B%B7%E8%B4%9D\"><span class=\"toc-text\">2.5.1 驱动拷贝</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-5-2-%E9%85%8D%E7%BD%AE-Metastore-%E5%88%B0-MySql\"><span class=\"toc-text\">2.5.2 配置** Metastore 到 MySql******</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-5-3-%E5%A4%9A%E7%AA%97%E5%8F%A3%E5%90%AF%E5%8A%A8-Hive-%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">2.5.3 多窗口启动** Hive 测试******</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-6-HiveJDBC%E8%AE%BF%E9%97%AE\"><span class=\"toc-text\">2.6 HiveJDBC访问</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-6-1-%E5%90%AF%E5%8A%A8-hiveserver2-%E6%9C%8D%E5%8A%A1\"><span class=\"toc-text\">2.6.1 启动 hiveserver2 服务</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-6-2-%E5%90%AF%E5%8A%A8-beeline\"><span class=\"toc-text\">2.6.2 启动 beeline</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-6-3-%E8%BF%9E%E6%8E%A5-hiveserver2\"><span class=\"toc-text\">2.6.3 连接** hiveserver2******</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-7-Hive%E5%B8%B8%E7%94%A8%E4%BA%A4%E4%BA%92%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">2.7 Hive常用交互命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-8-Hive%E5%85%B6%E4%BB%96%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">2.8 Hive其他命令操作</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-9-Hive%E5%B8%B8%E8%A7%81%E5%B1%9E%E6%80%A7%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">2.9 Hive常见属性配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-9-1-Hive-%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E4%BD%8D%E7%BD%AE%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">2.9.1 Hive 数据仓库位置配置</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-9-2-%E6%9F%A5%E8%AF%A2%E5%90%8E%E4%BF%A1%E6%81%AF%E6%98%BE%E7%A4%BA%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">2.9.2 查询后信息显示配置</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-9-3-Hive-%E8%BF%90%E8%A1%8C%E6%97%A5%E5%BF%97%E4%BF%A1%E6%81%AF%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">2.9.3 Hive 运行日志信息配置</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-9-4-%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">2.9.4 参数配置方式</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC3-%E7%AB%A0-Hive%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">第3 章 Hive数据类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-%E9%9B%86%E5%90%88%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">3.2 集合数据类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3-%E7%B1%BB%E5%9E%8B%E8%BD%AC%E5%8C%96\"><span class=\"toc-text\">3.3 类型转化</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC4%E7%AB%A0-DDL%E6%95%B0%E6%8D%AE%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">第4章 DDL数据定义</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1-%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">4.1 创建数据库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">4.2 查询数据库</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-1-%E6%98%BE%E7%A4%BA%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">4.2.1 显示数据库</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-2-%E6%9F%A5%E7%9C%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%A6%E6%83%85\"><span class=\"toc-text\">4.2.2 查看数据库详情</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-3-%E5%88%87%E6%8D%A2%E5%BD%93%E5%89%8D%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">4.2.3 切换当前数据库</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-3-%E4%BF%AE%E6%94%B9%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">4.3 修改数据库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-4-%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">4.4 删除数据库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-5-%E5%88%9B%E5%BB%BA%E8%A1%A8\"><span class=\"toc-text\">4.5 创建表</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-5-1-%E7%AE%A1%E7%90%86%E8%A1%A8\"><span class=\"toc-text\">4.5.1 管理表</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-5-2-%E5%A4%96%E9%83%A8%E8%A1%A8\"><span class=\"toc-text\">4.5.2 外部表</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-5-3-%E7%AE%A1%E7%90%86%E8%A1%A8%E4%B8%8E%E5%A4%96%E9%83%A8%E8%A1%A8%E7%9A%84%E4%BA%92%E7%9B%B8%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">4.5.3 管理表与外部表的互相转换</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-6-%E4%BF%AE%E6%94%B9%E8%A1%A8\"><span class=\"toc-text\">4.6 修改表</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-6-1-%E9%87%8D%E5%91%BD%E5%90%8D%E8%A1%A8\"><span class=\"toc-text\">4.6.1 重命名表</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-6-2-%E5%A2%9E%E5%8A%A0%E3%80%81%E4%BF%AE%E6%94%B9%E5%92%8C%E5%88%A0%E9%99%A4%E8%A1%A8%E5%88%86%E5%8C%BA\"><span class=\"toc-text\">4.6.2 增加、修改和删除表分区</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-6-3-%E5%A2%9E%E5%8A%A0-%E4%BF%AE%E6%94%B9-%E6%9B%BF%E6%8D%A2%E5%88%97%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">4.6.3 增加**&#x2F;修改&#x2F;**替换列信息</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-7-%E5%88%A0%E9%99%A4%E8%A1%A8\"><span class=\"toc-text\">4.7 删除表</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC5%E7%AB%A0-DML-%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">第5章 DML 数据操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-1-%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5\"><span class=\"toc-text\">5.1 数据导入</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-1-1-%E5%90%91%E8%A1%A8%E4%B8%AD%E8%A3%85%E8%BD%BD%E6%95%B0%E6%8D%AE%EF%BC%88Load%EF%BC%89\"><span class=\"toc-text\">5.1.1 向表中装载数据（Load）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-1-2-%E9%80%9A%E8%BF%87%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5%E5%90%91%E8%A1%A8%E4%B8%AD%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE%EF%BC%88Insert%EF%BC%89\"><span class=\"toc-text\">5.1.2 通过查询语句向表中插入数据（Insert）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-1-3-%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5%E4%B8%AD%E5%88%9B%E5%BB%BA%E8%A1%A8%E5%B9%B6%E5%8A%A0%E8%BD%BD%E6%95%B0%E6%8D%AE%EF%BC%88As-Select%EF%BC%89\"><span class=\"toc-text\">5.1.3 查询语句中创建表并加载数据（As Select）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-1-4-%E5%88%9B%E5%BB%BA%E8%A1%A8%E6%97%B6%E9%80%9A%E8%BF%87-Location-%E6%8C%87%E5%AE%9A%E5%8A%A0%E8%BD%BD%E6%95%B0%E6%8D%AE%E8%B7%AF%E5%BE%84\"><span class=\"toc-text\">5.1.4 创建表时通过 Location 指定加载数据路径</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-1-5-Import-%E6%95%B0%E6%8D%AE%E5%88%B0%E6%8C%87%E5%AE%9A-Hive-%E8%A1%A8%E4%B8%AD\"><span class=\"toc-text\">5.1.5 Import 数据到指定 Hive 表中</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-2-%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA\"><span class=\"toc-text\">5.2 数据导出</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-2-1-Insert-%E5%AF%BC%E5%87%BA\"><span class=\"toc-text\">5.2.1 Insert 导出</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-2-2-Hadoop-%E5%91%BD%E4%BB%A4%E5%AF%BC%E5%87%BA%E5%88%B0%E6%9C%AC%E5%9C%B0\"><span class=\"toc-text\">5.2.2 Hadoop 命令导出到本地</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-2-3-Hive-Shell-%E5%91%BD%E4%BB%A4%E5%AF%BC%E5%87%BA\"><span class=\"toc-text\">5.2.3 Hive Shell 命令导出</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-2-4-Export-%E5%AF%BC%E5%87%BA%E5%88%B0-HDFS-%E4%B8%8A\"><span class=\"toc-text\">5.2.4 Export 导出到 HDFS 上</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-2-5-Sqoop-%E5%AF%BC%E5%87%BA\"><span class=\"toc-text\">5.2.5 Sqoop 导出</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5-2-6-%E6%B8%85%E9%99%A4%E8%A1%A8%E4%B8%AD%E6%95%B0%E6%8D%AE%EF%BC%88Truncate%EF%BC%89\"><span class=\"toc-text\">5.2.6 清除表中数据（Truncate）</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC-6-%E7%AB%A0-%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">第 6 章 查询</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-1-%E5%9F%BA%E6%9C%AC%E6%9F%A5%E8%AF%A2%EF%BC%88Select%E2%80%A6From%EF%BC%89\"><span class=\"toc-text\">6.1 基本查询（Select…From）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-1-1-%E5%85%A8%E8%A1%A8%E5%92%8C%E7%89%B9%E5%AE%9A%E5%88%97%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">6.1.1 全表和特定列查询</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-1-2-%E5%88%97%E5%88%AB%E5%90%8D\"><span class=\"toc-text\">6.1.2 列别名</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-1-3-%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">6.1.3 算术运算符</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-1-4-%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">6.1.4 常用函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-1-5-Limit-%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">6.1.5 Limit 语句</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-1-6-Where-%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">6.1.6 Where 语句</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-1-7-%E6%AF%94%E8%BE%83%E8%BF%90%E7%AE%97%E7%AC%A6%EF%BC%88Between-In-Is-Null%EF%BC%89\"><span class=\"toc-text\">6.1.7 比较运算符（Between&#x2F;In&#x2F; Is Null）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-1-8-Like-%E5%92%8C-RLike\"><span class=\"toc-text\">6.1.8 Like 和 RLike</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-1-9-%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6%EF%BC%88And-Or-Not%EF%BC%89\"><span class=\"toc-text\">6.1.9 逻辑运算符（And&#x2F;Or&#x2F;Not）</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-2-%E5%88%86%E7%BB%84\"><span class=\"toc-text\">6.2 分组</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-2-1-Group-By-%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">6.2.1 Group By 语句</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-2-2-Having-%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">6.2.2 Having 语句</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-3-Join-%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">6.3 Join 语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-3-1-%E7%AD%89%E5%80%BC-Join\"><span class=\"toc-text\">6.3.1 等值 Join</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-3-2-%E8%A1%A8%E7%9A%84%E5%88%AB%E5%90%8D\"><span class=\"toc-text\">6.3.2 表的别名</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-3-3-%E5%86%85%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">6.3.3 内连接</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-3-4-%E5%B7%A6%E5%A4%96%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">6.3.4 左外连接</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-3-5-%E5%8F%B3%E5%A4%96%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">6.3.5 右外连接</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-3-6-%E6%BB%A1%E5%A4%96%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">6.3.6 满外连接</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-3-7-%E5%A4%9A%E8%A1%A8%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">6.3.7 多表连接</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-3-8-%E7%AC%9B%E5%8D%A1%E5%B0%94%E7%A7%AF\"><span class=\"toc-text\">6.3.8 笛卡尔积</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-4-%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">6.4 排序</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-4-1-%E5%85%A8%E5%B1%80%E6%8E%92%E5%BA%8F%EF%BC%88Order-By%EF%BC%89\"><span class=\"toc-text\">6.4.1 全局排序（Order By）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-4-2-%E6%8C%89%E7%85%A7%E5%88%AB%E5%90%8D%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">**6.4.2 按照别名排序 **</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-4-3-%E5%A4%9A%E4%B8%AA%E5%88%97%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">6.4.3 多个列排序</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-4-4-%E6%AF%8F%E4%B8%AA-Reduce-%E5%86%85%E9%83%A8%E6%8E%92%E5%BA%8F%EF%BC%88Sort-By%EF%BC%89\"><span class=\"toc-text\">6.4.4 每个 Reduce 内部排序（Sort By）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-4-5-%E5%88%86%E5%8C%BA%EF%BC%88Distribute-By%EF%BC%89\"><span class=\"toc-text\">6.4.5 分区（Distribute By）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6-4-6-Cluster-By\"><span class=\"toc-text\">6.4.6 Cluster By</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC-7-%E7%AB%A0-%E5%88%86%E5%8C%BA%E8%A1%A8%E5%92%8C%E5%88%86%E6%A1%B6%E8%A1%A8\"><span class=\"toc-text\">第 7 章 分区表和分桶表</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-1-%E5%88%86%E5%8C%BA%E8%A1%A8\"><span class=\"toc-text\">7.1 分区表</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#7-1-1-%E5%88%86%E5%8C%BA%E8%A1%A8%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">7.1.1 分区表基本操作</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#7-1-2-%E4%BA%8C%E7%BA%A7%E5%88%86%E5%8C%BA\"><span class=\"toc-text\">7.1.2 二级分区</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#7-1-3-%E5%8A%A8%E6%80%81%E5%88%86%E5%8C%BA%E8%B0%83%E6%95%B4\"><span class=\"toc-text\">7.1.3 动态分区调整</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-2-%E5%88%86%E6%A1%B6%E8%A1%A8\"><span class=\"toc-text\">7.2 分桶表</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-3-%E6%8A%BD%E6%A0%B7%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">7.3 抽样查询</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC-8-%E7%AB%A0-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">第 8 章 函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-1-%E7%B3%BB%E7%BB%9F%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">8.1 系统内置函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-2-%E5%B8%B8%E7%94%A8%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">8.2 常用内置函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#8-2-1-%E7%A9%BA%E5%AD%97%E6%AE%B5%E8%B5%8B%E5%80%BC\"><span class=\"toc-text\">8.2.1 空字段赋值</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#8-2-2-CASE-WHEN-THEN-ELSE-END\"><span class=\"toc-text\">8.2.2 CASE WHEN THEN ELSE END</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#8-2-3-%E8%A1%8C%E8%BD%AC%E5%88%97\"><span class=\"toc-text\">8.2.3 行转列</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#8-2-4-%E5%88%97%E8%BD%AC%E8%A1%8C\"><span class=\"toc-text\">8.2.4 列转行</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#8-2-5-%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0%EF%BC%88%E5%BC%80%E7%AA%97%E5%87%BD%E6%95%B0%EF%BC%89\"><span class=\"toc-text\">8.2.5 窗口函数（开窗函数）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#8-2-6-Rank\"><span class=\"toc-text\">8.2.6 Rank</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#8-4-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">8.4 自定义函数****</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC-9%E7%AB%A0-%E5%8E%8B%E7%BC%A9%E5%92%8C%E5%AD%98%E5%82%A8\"><span class=\"toc-text\">第 9章 压缩和存储</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9-1-Hadoop-%E5%8E%8B%E7%BC%A9%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">9.1 Hadoop 压缩配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#9-1-1-MR-%E6%94%AF%E6%8C%81%E7%9A%84%E5%8E%8B%E7%BC%A9%E7%BC%96%E7%A0%81\"><span class=\"toc-text\">9.1.1 MR 支持的压缩编码</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#9-1-2-%E5%8E%8B%E7%BC%A9%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">9.1.2 压缩参数配置</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9-2-%E5%BC%80%E5%90%AF-Map-%E8%BE%93%E5%87%BA%E9%98%B6%E6%AE%B5%E5%8E%8B%E7%BC%A9%EF%BC%88MR-%E5%BC%95%E6%93%8E%EF%BC%89\"><span class=\"toc-text\">9.2 开启 Map 输出阶段压缩（MR** 引擎）**</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9-4-%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">9.4 文件存储格式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#9-4-1-%E5%88%97%E5%BC%8F%E5%AD%98%E5%82%A8%E5%92%8C%E8%A1%8C%E5%BC%8F%E5%AD%98%E5%82%A8\"><span class=\"toc-text\">9.4.1 列式存储和行式存储</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#9-4-2-TextFile-%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">9.4.2 TextFile 格式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#9-4-3-Orc-%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">9.4.3 Orc 格式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#9-4-4-Parquet-%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">9.4.4 Parquet 格式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#9-4-5-%E4%B8%BB%E6%B5%81%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8%E6%A0%BC%E5%BC%8F%E5%AF%B9%E6%AF%94%E5%AE%9E%E9%AA%8C\"><span class=\"toc-text\">9.4.5 主流文件存储格式对比实验</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9-5-%E5%AD%98%E5%82%A8%E5%92%8C%E5%8E%8B%E7%BC%A9%E7%BB%93%E5%90%88\"><span class=\"toc-text\">9.5 存储和压缩结合</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#9-5-1-%E6%B5%8B%E8%AF%95%E5%AD%98%E5%82%A8%E5%92%8C%E5%8E%8B%E7%BC%A9\"><span class=\"toc-text\">9.5.1 测试存储和压缩</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC10%E7%AB%A0-%E4%BC%81%E4%B8%9A%E7%BA%A7%E8%B0%83%E4%BC%98\"><span class=\"toc-text\">第10章 企业级调优</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10-1-%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92%EF%BC%88Explain%EF%BC%89\"><span class=\"toc-text\">10.1 执行计划（Explain）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10-2-Fetch-%E6%8A%93%E5%8F%96\"><span class=\"toc-text\">10.2 Fetch 抓取</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10-3-%E6%9C%AC%E5%9C%B0%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">10.3 本地模式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10-4-%E8%A1%A8%E7%9A%84%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">10.4 表的优化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#10-4-1-%E5%B0%8F%E8%A1%A8%E5%A4%A7%E8%A1%A8-Join%EF%BC%88MapJOIN%EF%BC%89\"><span class=\"toc-text\">10.4.1 小表大表 Join（MapJOIN）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#10-4-2-%E5%A4%A7%E8%A1%A8-Join-%E5%A4%A7%E8%A1%A8\"><span class=\"toc-text\">10.4.2 大表 Join 大表</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#10-4-3-Group-By\"><span class=\"toc-text\">10.4.3 Group By</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#10-4-4-Count-Distinct-%E5%8E%BB%E9%87%8D%E7%BB%9F%E8%AE%A1\"><span class=\"toc-text\">10.4.4 Count(Distinct) 去重统计</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#10-4-5-%E7%AC%9B%E5%8D%A1%E5%B0%94%E7%A7%AF\"><span class=\"toc-text\">10.4.5 笛卡尔积</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#10-4-6-%E8%A1%8C%E5%88%97%E8%BF%87%E6%BB%A4\"><span class=\"toc-text\">10.4.6 行列过滤</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#10-4-7-%E5%88%86%E5%8C%BA\"><span class=\"toc-text\">10.4.7 分区</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#10-4-8-%E5%88%86%E6%A1%B6\"><span class=\"toc-text\">10.4.8 分桶</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10-5-%E5%90%88%E7%90%86%E8%AE%BE%E7%BD%AE-Map-%E5%8F%8A-Reduce-%E6%95%B0\"><span class=\"toc-text\">10.5 合理设置 Map 及 Reduce 数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10-5-1-%E5%A4%8D%E6%9D%82%E6%96%87%E4%BB%B6%E5%A2%9E%E5%8A%A0-Map-%E6%95%B0\"><span class=\"toc-text\">10.5.1 复杂文件增加 Map 数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#10-5-2-%E5%B0%8F%E6%96%87%E4%BB%B6%E8%BF%9B%E8%A1%8C%E5%90%88%E5%B9%B6\"><span class=\"toc-text\">10.5.2 小文件进行合并</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#10-5-3-%E5%90%88%E7%90%86%E8%AE%BE%E7%BD%AE-Reduce-%E6%95%B0\"><span class=\"toc-text\">10.5.3 合理设置 Reduce 数</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10-6-%E5%B9%B6%E8%A1%8C%E6%89%A7%E8%A1%8C\"><span class=\"toc-text\">10.6 并行执行</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10-7-%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">10.7 严格模式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10-8-JVM-%E9%87%8D%E7%94%A8\"><span class=\"toc-text\">10.8 JVM 重用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10-9-%E5%8E%8B%E7%BC%A9\"><span class=\"toc-text\">10.9 压缩</span></a></li></ol></li></ol>","author":{"name":"Stephen","slug":"blog-author","avatar":"../img/logo.png","link":"/","description":"Love and Share","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Spark详解","uid":"76e2b6bc5d139da0618aa8a268fb05fa","slug":"csdn/Spark详解","date":"2023-02-06T07:47:39.000Z","updated":"2025-02-17T01:58:21.585Z","comments":true,"path":"api/articles/csdn/Spark详解.json","keywords":"Stephen web3","cover":[],"text":" 目录 第1章：Spark概述 1.1 Spark是什么 1.2 Spark and Hadoop 1.3 Spark on Hadoop 1.4 Spark核...","permalink":"/post/csdn/Spark详解","photos":[],"count_time":{"symbolsCount":"52k","symbolsTime":"48 mins."},"categories":[{"name":"大数据","slug":"大数据","count":7,"path":"api/categories/大数据.json"}],"tags":[{"name":"spark","slug":"spark","count":3,"path":"api/tags/spark.json"}],"author":{"name":"Stephen","slug":"blog-author","avatar":"../img/logo.png","link":"/","description":"Love and Share","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Hadoop（部署篇）","uid":"f7e86999f1d4e7aaf5b2a2d3ab660579","slug":"csdn/Hadoop（部署篇）","date":"2023-02-05T15:07:30.000Z","updated":"2025-02-17T01:58:21.594Z","comments":true,"path":"api/articles/csdn/Hadoop（部署篇）.json","keywords":"Stephen web3","cover":[],"text":" 目录 Hadoop三种运行模式 本地运行模式 伪分布式运行模式 完全分布式运行模式（开发重点） Hadoop三种运行模式Hadoop 运行模式包括：本地模式、...","permalink":"/post/csdn/Hadoop（部署篇）","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"大数据","slug":"大数据","count":7,"path":"api/categories/大数据.json"}],"tags":[{"name":"hadoop","slug":"hadoop","count":2,"path":"api/tags/hadoop.json"}],"author":{"name":"Stephen","slug":"blog-author","avatar":"../img/logo.png","link":"/","description":"Love and Share","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}