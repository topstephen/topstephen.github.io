{"title":"在以太坊测试网上部署合约","uid":"0f42ae74b0881a5537a75ba29aedf346","slug":"csdn/在以太坊测试网上部署合约","date":"2024-02-21T12:42:39.000Z","updated":"2025-02-17T03:15:46.321Z","comments":true,"path":"api/articles/csdn/在以太坊测试网上部署合约.json","keywords":"Stephen web3","cover":[],"content":"<link rel=\"stylesheet\" href=\"/owl.css\"><link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><span id=\"more\"></span>\n\n<h2 id=\"在以太坊测试网上部署合约\"><a href=\"#在以太坊测试网上部署合约\" class=\"headerlink\" title=\"在以太坊测试网上部署合约\"></a>在以太坊测试网上部署合约</h2><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>在部署合约之前，您需要确保你的操作系统上已经安装了MetaMask，并熟练掌握其使用方法，以及掌握了部分Solidity基础语法知识。</p>\n<p>如果没有，请移步到下面链接，确保您以及做好了充足的准，开始接下来的合约部署。</p>\n<p>MetaMask的安装及使用：<a href=\"https://blog.csdn.net/m0_73094011/article/details/135854126\">MetaMask安装及使用（全网最全！！！）_sepoliaeth水龙头-CSDN博客</a></p>\n<p>Solidity基础语法知识：<a href=\"https://blog.csdn.net/m0_73094011/article/details/136212378\">Solidity基础（详细易懂！！！）-CSDN博客</a></p>\n<p>值得注意的是！！！</p>\n<p>Remix-Desktop连接MetaMask程序比较繁琐，所以我们将在Remix浏览器版进行我们的部署操作。</p>\n<p>Remix浏览器版：<a href=\"https://remix.ethereum.org/\">Remix - Ethereum IDE</a></p>\n<p>Remix-Desktop我们也讲一下，连接MetaMask的具体方式是，点击左下角的插件管理，搜索wallet connect，再带点击Activate，在弹出来的页面中点击connect to a wallet，然后找到我们的MetaMask钱包，连接上就行。</p>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><p>首先打开浏览器，进入我们的Remix浏览器版：<a href=\"https://remix.ethereum.org/\">Remix - Ethereum IDE</a>（确保你的浏览器已经安装了MetaMask扩展）</p>\n<p>同Remix-Desktop，操作步骤是一样的，我们首先创建一个名字叫SimpleStorage.sol的合约文件，然后粘贴如下代码。</p>\n<p>代码：</p>\n<div class=\"language-solidity\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">solidity</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// SPDX-License-Identifier: MIT</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">pragma</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F07178\">solidity</span><span style=\"color: #BABED8\"> ^0.8.22</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">contract</span><span style=\"color: #FFCB6B\"> SimpleStorage</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// This gets initialized to zero!</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// &lt;- This means that this section is a comment!</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #FFCB6B\">uint256</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> favoriteNumber</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">mapping</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">string</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=&gt;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">uint256</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> nameToFavoriteNumber</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">struct</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">People</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #FFCB6B\">uint256</span><span style=\"color: #BABED8\"> favoriteNumber</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #FFCB6B\">string</span><span style=\"color: #BABED8\"> name</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// uint256[] public favoriteNumbersList;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    People</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> people</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">store</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">uint256</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">_favoriteNumber</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">virtual</span><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        favoriteNumber </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> _favoriteNumber</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #82AAFF\">retrieve</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// view, pure</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">retrieve</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">view</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">returns</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">uint256</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> favoriteNumber</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// calldata, memory, storage</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">addPerson</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FFCB6B\">string</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">memory</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">_name</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">uint</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">_favoriteNumber</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        people</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">push</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">People</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">_favoriteNumber</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> _name</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        nameToFavoriteNumber</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #BABED8\">_name</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> _favoriteNumber</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/97ad9ce434d2d1275cbed1ad07f9e7ef_1739762076591.png\" alt=\"在这里插入图片描述\"></p>\n<p>对于这个SimpleStorage合约。</p>\n<p>我们有一个全局变量favoriteNumber，通过使用store函数，可以往里面存储一个我们喜欢的数字，我们还有一个名为nameToFavoriteNumber的mapping，并且我们还拥有了一个新类型的数组，一种我们创建的名为People的新类型，我们还可以往这些数组和mapping中添加新内容，就用我们创建的这个addPerson函数，这样我们就既能够保存许多个不同的人的favorite number，又能够保存单独一个全局的favorite number，现在我们已经准备好把它发送到一个测试网络上，并让其他人与之互动了。</p>\n<p>当然，一般来说，直到写完测试前不要部署上去，或是直到你做一些非常简单的审核，不过现在让我们先往下走，学习怎么把合约部署到测试网络或者真实网络上，请牢记，测试网完全是人们出于好心而自发运行的，所以哪怕它有点异常，或者没有像我们这里演示的那样工作，没有关系，只要它能与Remix虚拟机（VM）一起工作就行了，但是学习一下如何将这些东西部署到实际的测试网上仍不失为是一次很好的实践活动。</p>\n<p>这里是我们的合约SimpleStorage.sol，编译好了，编译通过后，这里会有一个绿色的小对勾，进入部署选项，现在我们要改变下环境。</p>\n<p>我们正在使用的是Remix VM环境，这是一种虚假的模拟环境，我们现在要转移到lnjected Provider上。</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/0644b2db81a80e667ba79a4033b7628c_1739762076591.png\" alt=\"在这里插入图片描述\"></p>\n<p>接着我们要把 MetaMask或其他Web3钱包，注入到浏览器中以便能够使用，就像我们使用水龙头时做的那样，我们选择一个想要使用的账户，这里我选择了第二个账户（哪个账户都无所谓，重要的是要有ETH测试币）。</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/b76e34c458d268e98e17707daabf37ff_1739762078582.png\" alt=\"在这里插入图片描述\"></p>\n<p>现在我们看到，账户出现在了Remix的ACCOUNT选项中。</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/1d73fd93bc1dad04fe6e63a1627cafae_1739762078582.png\" alt=\"在这里插入图片描述\"></p>\n<p>lnjected Provider意味着我们正在使用·MetaMask或其他 Web3钱包。</p>\n<p>无论lnjected Provider是哪个网络，或者这样说，我们的钱包连接到了哪个网络上就会部署到那个网络上，在本篇文章中，我们选择部署到Sepolia上（SepoliaETH获取方法在文章前言中介绍的MetaMask安装及使用文章里有）。</p>\n<p>当然，你可以根据你的具体情况，进行选择，如果你有其他测试网络的ETH，你可以选择部署在其他网络上。</p>\n<p>这里我们选择Sepolia，为了部署到测试网上，请记住，我们是需要gas的，所以我们需要一些测试用的以太币，或者你可以部署到以太坊主网上，但你最好别这样做。</p>\n<p>所以现在我们就使用Injected Provider，我们可以通过完全相同的步骤，把合约部署到测试网上，就和部署到虚拟机上一样，并且记住，如果你没有足够的gas来部署合约，那么一定要在部署前来查看一下水龙头，所以我们要做的就是相同的事，去点击这个Deploy按钮。</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/366fd8e36e345394fd74d7582b9bf429_1739762078582.png\" alt=\"在这里插入图片描述\"></p>\n<p>但是这一次MetaMask会弹出来，并询问我们是否真的要部署这个合约，这就是我们之前在区块链示例中看到的，给交易签名，我们现在其实就在签署和发送这个交易。</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/e6b9edb3bd03b2319bd3f7119bea4491_1739762078582.png\" alt=\"在这里插入图片描述\"></p>\n<p>这个交易的数据量非常非常庞大，它们就代表着我们刚刚创建的合约，我们可以看到这次交易或者说部署这个合约的所有付款信息。</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/3fb1150df85e2945be9e8e32fd4a7cc6_1739762078582.png\" alt=\"在这里插入图片描述\"></p>\n<p>我们可以看到，部署这个合约将花费大约这么多以太币，再次强调，我们现在处于Sepolia测试网络上，所以这些都是假的以太币，我们继续，点击确认（Confirm）。</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/6c5ba251468867bbeb9f97c19d132483_1739762081502.png\" alt=\"在这里插入图片描述\"></p>\n<p>如果你弹出这个小控制台，在Remix里，你会在短暂的延迟后看到，它会用这个绿色的小对勾，表示合约已经确实是被部署上了。</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/205cc63fa52c39190a53d019ff147c56_1739762081502.png\" alt=\"在这里插入图片描述\"></p>\n<p>我们可以继续复制一下这个交易哈希，并在etherscan上查看这笔交易，稍作延迟后，我们就可以看到这里的交易详情。</p>\n<p><a href=\"https://sepolia.etherscan.io/\">TESTNET Sepolia (ETH) Blockchain Explorer (etherscan.io)</a></p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/35a462cfc1a24a7cf33a0e9beecb85c5_1739762081502.png\" alt=\"在这里插入图片描述\"></p>\n<p>就和我们之前发送以太币的交易详情一样，我们有一个哈希（Hash），有一个状态（status），有区块（Block），有确认区块数（Block Confirmation），还有时间戳（Timestamp），From，就是我们自己，To，是我们刚刚创建的合约的地址，我们这次没有发送任何价值（Value），所以这里是0个以太币，然后当然，我们会看到交易费（Transaction Fee）还有gas价格（Gas Price）。</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/b083e9d729c348c5f80e148cb7a991ea_1739762081502.png\" alt=\"在这里插入图片描述\"></p>\n<p>因为把合约部署到区块链上会修改区块链的状态，所以我们必须为此支付gas，其余的部分在这里也都看得到，正如我们所见，Gas Limit和gas Usage比单纯发送以太币要高得多，这是因为我们把大量数据送到了链上，进而增加了大量的计算量，所以这个数字远远高于单纯发送以太币所需要的21000gas。</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/56641d36bdd880375a470c74713adfce_1739762081502.png\" alt=\"在这里插入图片描述\"></p>\n<p>现在让我们回到Remix拉到下面，可以看到我们的SimpleStorage合约就在这个地址上。</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/326e1e3ec3f421843b07e0e4c42d150c_1739762084663.png\" alt=\"在这里插入图片描述\"></p>\n<hr>\n<p>温馨提示：</p>\n<p>如果，没有看到可以交互的合约，可以手动添加，输入合约地址即可，合约地址，可以看刚才etherscan的交易明细中的To，或者看Remix控制台小绿勾中的To，如果不小心退出后，找不到合约地址的话，可以在etherscan中查账户地址的交易记录，从而找到合约地址。</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/a4fa124de790d3a821f2ada5c93a3104_1739762084663.png\" alt=\"在这里插入图片描述\"></p>\n<hr>\n<p>紧接上面。</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/326e1e3ec3f421843b07e0e4c42d150c_1739762084663.png\" alt=\"在这里插入图片描述\"></p>\n<p>如果我们点击这个copy按钮，然后去到Sepolia etherscan，把地址粘贴到搜索栏里，我们会得到我们刚刚部署的这个合约。</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/b3c123454f70e599794b0712923eb308_1739762084663.png\" alt=\"在这里插入图片描述\"></p>\n<p>并且可以看到它的第一笔交易，也就是这个合约的创建交易，所以这是我们刚刚创建的合约。有一笔交易，它是在合约创建时产生的。</p>\n<p>所以我们现在已经把这个合约创建出来了，并且拥有和使用Remix虚拟机时完全相同的功能，或者说我们的虚假环境，也可说是超级虚假环境，现在我们就可以做一些之前在Remix VM上做过的操作了，只不过这次是在测试网络上。</p>\n<p>你可以看到，如果我点击retrieve，MetaMask不会弹出，这是因为这个蓝色按钮是一个view函数，如果我们看一下people在0处的值，这也是一个view函数所以 MetaMask同样也没有弹出，nameToFavoriteNumber现在还是空的，所以如果我现在输入zhangsan，当然返回是空了，对吧？其实这里我得到了一个返回值0，这是因为mapping初始化每个值的时候使用都是相应的空值，对uint256来说就是0。</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/d52c7abb1735c156760c6a10f4fe6c7e_1739762084663.png\" alt=\"在这里插入图片描述\"></p>\n<p>现在我们可以尝试存储一个favorite number，这一操作会导致区块链被修改，所以MetaMask会弹出来让我们确认以及签署该笔交易，从而修改区块链的状态。</p>\n<p>现在我要存储一个我喜欢的数字749，点击store，MetaMask会弹出来，而接下来我们需要做的就是点击确认（Confirm），点击确认就意味着，我们要签署该交易并把它发送到区块链上以修改状态，所以我们继续，点击确认。</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/7fa3709432642865b3c1226657b285b6_1739762086574.png\" alt=\"在这里插入图片描述\"></p>\n<p>我们现在应该能在etherscan上看到这笔交易了，它可能需要一点时间才能索引或者说实际开始工作，所以请耐心等待一下这些测试网络，这也就是为什么你在构建应用程序时，最好是尽量最后一步再部署到测试网上，因为你会在这一步上等待很长时间，并且这也为运行这些测试网络的人带来了负担，他们纯粹是出于好心才运行这些网络的，所以请尽量把这一步作为你实际搭建应用时的最后一步，对于在这里学习的我们来说，倒是关系不大。</p>\n<p>稍作等待后，我们刷新一下。看起来它正在etherscan上建立索引，etherscan网站仍然在确认这笔交易到底进行到哪里了。</p>\n<p>回来看看Remix，看起来在区块链上，交易其实已经通过了，所以如果我们现在去点击retrieve，可以看到，我们最喜欢的数字确实就是749，当然了，nameToFavoriteNumber和people还是空的。</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/f23c25d9e2cd3f81f49b1adaa81bb4e7_1739762086574.png\" alt=\"在这里插入图片描述\"></p>\n<p>看起来这笔交易已经完成了，etherscan已经把它索引上了。</p>\n<p>现在让我们继续，添加一个人物zhangsan，最喜欢的数字是23，接着我们点people击addPerson，这是个橙色按钮，所以交易会弹出来，因为我们正在修改区块链的状态，我们继续点击确认。</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/c947b99c97ad883027a016170cd273ba_1739762086574.png\" alt=\"在这里插入图片描述\"></p>\n<p>这里需要我们有一点耐心，等待我们的交易通过，届时我们应该就能看到nameToFavoriteNumber会更新，还有people也是，如果我点击nameToFavoriteNumber，输入的是zhangsan，我会得到23，如果点击people，输入参数是0，我会得到favoriteNumber是23，name是zhangsan。</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/8c65be655487ea668efa8cb52413b51c_1739762086574.png\" alt=\"在这里插入图片描述\"></p>\n<p>太棒了！你现在已经成功地把一个合约部署到了实际的测试网上，并且能够在etherscan上看到交易的具体细节。</p>\n<p>现在如果你想看着把它部署到其他网络上是什么样的，你只需要在MetaMask上切换到其他测试网就行了。</p>\n<p>顺便期待一下博主的go语言-区块链学习（三），文章正在编辑中。。。</p>\n<p>Article link： <a href=\"https://tqgoblin.site/post/csdn/%E5%9C%A8%E4%BB%A5%E5%A4%AA%E5%9D%8A%E6%B5%8B%E8%AF%95%E7%BD%91%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%90%88%E7%BA%A6/\">https://tqgoblin.site/post/csdn/在以太坊测试网上部署合约/</a> <div align=left> Author：<a href=\"https://www.tqgoblin.site\"> Stephen </a> </div></p>\n","text":" 在以太坊测试网上部署合约前言在部署合约之前，您需要确保你的操作系统上已经安装了MetaMask，并熟练掌握其使用方法，以及掌握了部分Solidity基础语法知...","permalink":"/post/csdn/在以太坊测试网上部署合约","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"区块链学习","slug":"区块链学习","count":8,"path":"api/categories/区块链学习.json"}],"tags":[{"name":"区块链 学习","slug":"区块链-学习","count":4,"path":"api/tags/区块链-学习.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9C%A8%E4%BB%A5%E5%A4%AA%E5%9D%8A%E6%B5%8B%E8%AF%95%E7%BD%91%E4%B8%8A%E9%83%A8%E7%BD%B2%E5%90%88%E7%BA%A6\"><span class=\"toc-text\">在以太坊测试网上部署合约</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AD%A3%E6%96%87\"><span class=\"toc-text\">正文</span></a></li></ol></li></ol>","author":{"name":"Stephen","slug":"blog-author","avatar":"../img/logo.png","link":"/","description":"Love and Share","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"go语言--区块链学习（三）","uid":"85c9259013736ba6783892461c9c0cc9","slug":"csdn/go语言--区块链学习（三）","date":"2024-04-22T13:49:35.000Z","updated":"2025-02-17T03:14:24.928Z","comments":true,"path":"api/articles/csdn/go语言--区块链学习（三）.json","keywords":"Stephen web3","cover":null,"text":" 温馨跳转链接：模块一：go语言–区块链学习（一）-CSDN博客温馨跳转链接：模块二：go语言–区块链学习（二）-CSDN博客 文章目录 模块三：以太坊 3.1...","permalink":"/post/csdn/go语言--区块链学习（三）","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"区块链学习","slug":"区块链学习","count":8,"path":"api/categories/区块链学习.json"}],"tags":[{"name":"区块链 golang 学习","slug":"区块链-golang-学习","count":1,"path":"api/tags/区块链-golang-学习.json"}],"author":{"name":"Stephen","slug":"blog-author","avatar":"../img/logo.png","link":"/","description":"Love and Share","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Solidity基础（详细易懂！！！）","uid":"1bb20f7814a6924889d5c5d79f293898","slug":"csdn/Solidity基础（详细易懂！！！）","date":"2024-02-21T07:48:31.000Z","updated":"2025-02-17T03:15:46.335Z","comments":true,"path":"api/articles/csdn/Solidity基础（详细易懂！！！）.json","keywords":"Stephen web3","cover":[],"text":" 文章目录 Solidity基础 前言 Remix-Desktop介绍 开始使用Remix 数据类型 函数 可见度标识符 状态变量和局部变量 作用域 gas消耗...","permalink":"/post/csdn/Solidity基础（详细易懂！！！）","photos":[],"count_time":{"symbolsCount":"61k","symbolsTime":"55 mins."},"categories":[{"name":"区块链学习","slug":"区块链学习","count":8,"path":"api/categories/区块链学习.json"}],"tags":[{"name":"区块链 学习","slug":"区块链-学习","count":4,"path":"api/tags/区块链-学习.json"}],"author":{"name":"Stephen","slug":"blog-author","avatar":"../img/logo.png","link":"/","description":"Love and Share","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}