{"title":"golang验证Etherscan上的智能合约","uid":"44f7c35823ef1132fd633487c5c5e40e","slug":"csdn/golang验证Etherscan上的智能合约","date":"2022-07-07T13:33:39.000Z","updated":"2025-02-17T03:38:06.929Z","comments":true,"path":"api/articles/csdn/golang验证Etherscan上的智能合约.json","keywords":"Stephen web3","cover":[],"content":"<link rel=\"stylesheet\" href=\"/owl.css\"><link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><h2 id=\"golang验证Etherscan上的智能合约\"><a href=\"#golang验证Etherscan上的智能合约\" class=\"headerlink\" title=\"golang验证Etherscan上的智能合约\"></a>golang验证Etherscan上的智能合约</h2><p>在阅读此文章前，您需要掌握一定的基础知识，如<a href=\"https://www.scc749.cn/article/evCFnJABErSp3T3ajySB\">golang与以太坊交互</a>，此篇文章是对其的补充，提供利用代码自动验证智能合约，减少不太必要的人工操作，如果由于Etherscan接口的更新，导致代码不适用，请随时与我联系。</p>\n<h3 id=\"为什么要验证智能合约\"><a href=\"#为什么要验证智能合约\" class=\"headerlink\" title=\"为什么要验证智能合约\"></a>为什么要验证智能合约</h3><p>出于多种原因，您可能希望在公共区块浏览器上开源（验证）您的智能合约。</p>\n<p>在Etherscan或其他类似的区块链浏览器上验证智能合约具有以下几个重要的用途：</p>\n<ol>\n<li>透明度和信任：通过验证智能合约，你向社区展示了你的合约代码是公开的、可审查的。这增加了用户和其他开发者对你项目的信任，因为他们可以查看代码，确认合约行为的逻辑和功能。</li>\n<li>安全性审查：验证后的智能合约会吸引更多人的关注，特别是智能合约专家和安全研究人员。他们可以帮助发现潜在的安全漏洞或问题，并提供改进建议。这有助于提升你的合约的安全性和可靠性。</li>\n<li>抵抗黑客攻击：通过让更多人审查你的合约代码，可以提前发现和修复可能存在的漏洞，从而降低黑客攻击的风险。黑客往往会寻找未经审查或有漏洞的智能合约来进行攻击，而经过验证的合约能够减少这种风险。</li>\n<li>开发者社区增长：开源并验证的智能合约能够鼓励更多开发者参与到你的项目中来。他们可以基于你的代码进行二次开发、添加新功能或者将你的合约作为基础构建新的应用程序，从而推动生态系统的发展和扩展。</li>\n</ol>\n<p>总结来说，通过在Etherscan上验证智能合约，你不仅增加了透明度和安全性，还能吸引更多开发者和用户参与到你的区块链项目中来，推动项目的发展和采纳。</p>\n<h3 id=\"如何使用golang去验证合约\"><a href=\"#如何使用golang去验证合约\" class=\"headerlink\" title=\"如何使用golang去验证合约\"></a>如何使用golang去验证合约</h3><p>如果你是通过在线工具如Remix或OpenZeppelin的合约向导部署了你的合约，请考虑使用合约验证页面进行验证。<a href=\"https://etherscan.io/verifyContract\">Verify &amp; Publish Contract Source Code | Etherscan</a></p>\n<p>如果你是通过开发工具如Hardhat、Foundry、Truffle等部署了你的合约，请考虑使用插件来自动化验证过程。<a href=\"https://docs.etherscan.io/contract-verification/plugins\">Contract Verification Plugins | Etherscan</a></p>\n<p>如果你是一名使用golang去开发Web3应用的开发者或学习者，我们可以查看Etherscan提供的api接口，然后根据需要，自己造轮子。<a href=\"https://docs.etherscan.io/api-endpoints/contracts\">Contracts | Etherscan</a></p>\n<p>这里我们找到验证合约所必要的两个api接口，Verify Source Code和Check Source Code Verification Status，意如其名，一个是将合约源代码提交给<a href=\"https://docs.etherscan.io/contract-verification/supported-chains\"><strong>类似</strong></a> Etherscan 的浏览器进行验证，一个是返回合同验证请求的成功或错误状态。</p>\n<p>只要这两个接口都返回成功，我们的智能合约就已经在Etherscan上进行了验证。</p>\n<h3 id=\"获取EtherscanAPI密钥\"><a href=\"#获取EtherscanAPI密钥\" class=\"headerlink\" title=\"获取EtherscanAPI密钥\"></a>获取EtherscanAPI密钥</h3><p>注册登录-&gt;仪表盘-&gt;API-KEYs-&gt;Add-&gt;copy，具体请看链接<a href=\"https://docs.etherscan.io/getting-started/viewing-api-usage-statistics\">Getting an API key | Etherscan</a>。</p>\n<h3 id=\"Verify-Source-Code接口\"><a href=\"#Verify-Source-Code接口\" class=\"headerlink\" title=\"Verify Source Code接口\"></a>Verify Source Code接口</h3><p>将合约源代码提交给<a href=\"https://docs.etherscan.io/contract-verification/supported-chains\"><strong>类似</strong></a> Etherscan 的浏览器进行验证。</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/fd09f3e0219649088821faadf7a938a7_1739762070378.png\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/fe28b5af3374423c837f6c95148e9d88_1739762070378.png\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/e6f877a859f0470486f3fdd47c542998_1739762070378.png\" alt=\"在这里插入图片描述\"></p>\n<p>根据官方提供的api接口详情，我们可以造出以下的代码，但是略有不同，上面表单中没有提供OptimizationUsed这个参数（0没有，1有），但是我在使用postman测试的时候，得到必须添加这个参数的结果，此外，这个接口必须使用POST请求，尽管它更像是GET请求，没有Body，只有Params。</p>\n<div class=\"language-go\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">go</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">package</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">utils</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">encoding/json</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">fmt</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">io</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">math/big</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">net/http</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">net/url</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">reflect</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">type</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">VerifyRequest</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">struct</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ApiKey               </span><span style=\"color: #C792EA\">string</span><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">json:&quot;apiKey&quot;</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #BABED8\">                          </span><span style=\"color: #676E95; font-style: italic\">// API密钥</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ChainId              </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">big</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Int </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">json:&quot;chainId&quot;</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #BABED8\">                         </span><span style=\"color: #676E95; font-style: italic\">// 链ID</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    CodeFormat           </span><span style=\"color: #C792EA\">string</span><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">json:&quot;codeformat&quot;</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #BABED8\">                      </span><span style=\"color: #676E95; font-style: italic\">// 代码格式</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    SourceCode           </span><span style=\"color: #C792EA\">string</span><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">json:&quot;sourceCode&quot;</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #BABED8\">                      </span><span style=\"color: #676E95; font-style: italic\">// 合约源代码</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ConstructorArguments </span><span style=\"color: #C792EA\">string</span><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">json:&quot;constructorArguements,omitempty&quot;</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 构造函数参数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ContractAddress      </span><span style=\"color: #C792EA\">string</span><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">json:&quot;contractaddress&quot;</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #BABED8\">                 </span><span style=\"color: #676E95; font-style: italic\">// 合约地址</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ContractName         </span><span style=\"color: #C792EA\">string</span><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">json:&quot;contractname&quot;</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #BABED8\">                    </span><span style=\"color: #676E95; font-style: italic\">// 合约名称</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    CompilerVersion      </span><span style=\"color: #C792EA\">string</span><span style=\"color: #BABED8\">   </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">json:&quot;compilerversion&quot;</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #BABED8\">                 </span><span style=\"color: #676E95; font-style: italic\">// 编译器版本</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    OptimizationUsed     </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\">      </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">json:&quot;OptimizationUsed&quot;</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #BABED8\">                </span><span style=\"color: #676E95; font-style: italic\">// 是否使用了优化</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">type</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">VerifyResponse</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">struct</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Status  </span><span style=\"color: #C792EA\">string</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">json:&quot;status&quot;</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #BABED8\">  </span><span style=\"color: #676E95; font-style: italic\">// 状态</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Message </span><span style=\"color: #C792EA\">string</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">json:&quot;message&quot;</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 详细信息</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Result  </span><span style=\"color: #C792EA\">string</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">json:&quot;result&quot;</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #BABED8\">  </span><span style=\"color: #676E95; font-style: italic\">// 具体结果</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Verify</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">apiKey </span><span style=\"color: #C792EA\">string</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> chainId </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">big</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Int</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> codeFormat</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> sourceCode</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> constructorArgs</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> contractAddress</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> contractName</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> compilerVersion </span><span style=\"color: #C792EA\">string</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> optimizationUsed </span><span style=\"color: #C792EA\">int</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">error</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 构造请求数据</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    requestData </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> VerifyRequest</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        ApiKey</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\">               apiKey</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        ChainId</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\">              chainId</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        CodeFormat</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\">           codeFormat</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        SourceCode</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\">           sourceCode</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        ConstructorArguments</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> constructorArgs</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        ContractAddress</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\">      contractAddress</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        ContractName</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\">         contractName</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        CompilerVersion</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\">      compilerVersion</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        OptimizationUsed</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\">     optimizationUsed</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 创建一个 Client 实例</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    client </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8\">http</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Client</span><span style=\"color: #89DDFF\">&#123;&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 准备查询参数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    params </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> url</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Values</span><span style=\"color: #89DDFF\">&#123;&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 使用反射获取requestData结构体中的字段和值</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    val </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> reflect</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">ValueOf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">requestData</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 如果是指针类型，则获取其指向的值</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> val</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Kind</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> reflect</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Ptr </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        val </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> val</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Elem</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">for</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #BABED8\"> i </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> val</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">NumField</span><span style=\"color: #89DDFF\">();</span><span style=\"color: #BABED8\"> i</span><span style=\"color: #89DDFF\">++</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        field </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> val</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Type</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">Field</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        value </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> val</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Field</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">i</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">Interface</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #676E95; font-style: italic\">// 获取标签的值</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        tag </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> field</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Tag</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Get</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">json</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> tag </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #676E95; font-style: italic\">// 如果没有标签，默认使用字段名</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            tag </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> field</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Name</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #676E95; font-style: italic\">// 将字段名和值添加到查询参数中</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        params</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Set</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">tag</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Sprint</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">value</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 构建POST请求的URL</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    apiURL </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">https://api.etherscan.io/api?module=contract&amp;action=verifysourcecode&amp;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> params</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Encode</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 创建POST请求</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    req</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> http</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">NewRequest</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">POST</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> apiURL</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Errorf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">创建POST请求失败：</span><span style=\"color: #F07178\">%v</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 发送POST请求到Etherscan API</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    resp</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> client</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Do</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">req</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Errorf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">POST请求失败：</span><span style=\"color: #F07178\">%v</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">defer</span><span style=\"color: #BABED8\"> resp</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Body</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Close</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 读取响应体</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    body</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">ReadAll</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">resp</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Body</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Errorf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">读取响应体失败：</span><span style=\"color: #F07178\">%v</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 解析JSON响应</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">var</span><span style=\"color: #BABED8\"> verifyResponse VerifyResponse</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    err </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> json</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Unmarshal</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">body</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8\">verifyResponse</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Errorf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">解析JSON响应失败：</span><span style=\"color: #F07178\">%v</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 检查验证提交状态</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> verifyResponse</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Status </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">1</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Errorf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">验证提交失败：</span><span style=\"color: #F07178\">%s</span><span style=\"color: #C3E88D\">，</span><span style=\"color: #F07178\">%s</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> verifyResponse</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Message</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> verifyResponse</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Result</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Printf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">验证提交成功：</span><span style=\"color: #F07178\">%s</span><span style=\"color: #C3E88D\">，</span><span style=\"color: #F07178\">%s</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> verifyResponse</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Message</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> verifyResponse</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Result</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p>其实在这里，也可以把verifyResponse.Result返回出去，因为接下来的检查验证会用到它。总之根据自己所需，可以随意更改函数形式，代码的灵活性和趣味性不尽也如此了吧。</p>\n<p>参数列表：</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>类型</th>\n<th>描述</th>\n<th>举例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>apiKey</td>\n<td>string</td>\n<td>Etherscan的Api密钥，注册账户免费获取</td>\n<td><code>**********************************</code></td>\n</tr>\n<tr>\n<td>chainId</td>\n<td>*big.Int</td>\n<td>提交验证的<a href=\"https://docs.etherscan.io/contract-verification/supported-chains\"><strong>链</strong></a>，例如主网<code>1</code></td>\n<td><code>big.NewInt(int64(11155111))</code></td>\n</tr>\n<tr>\n<td>codeFormat</td>\n<td>string</td>\n<td>单个文件，使用<code>solidity-single-file</code>、使用JSON文件<code>solidity-standard-json-input</code></td>\n<td><code>solidity-single-file</code></td>\n</tr>\n<tr>\n<td>sourceCode</td>\n<td>string</td>\n<td>Solidity 源代码</td>\n<td><code>// SPDX-License-Identifier……</code></td>\n</tr>\n<tr>\n<td>constructorArgs</td>\n<td>string</td>\n<td>可选，如果合约使用构造函数参数，则包括</td>\n<td><code>nil</code></td>\n</tr>\n<tr>\n<td>contractAddress</td>\n<td>string</td>\n<td>您的合约部署地址</td>\n<td><code>0x****************************************</code></td>\n</tr>\n<tr>\n<td>contractName</td>\n<td>string</td>\n<td>合同的名称，例如<code>contracts/Verified.sol:Verified</code></td>\n<td><code>Verified</code></td>\n</tr>\n<tr>\n<td>compilerVersion</td>\n<td>string</td>\n<td>使用的<a href=\"https://etherscan.io/solcversions\"><strong>编译器版本</strong></a>，例如<code>v0.8.26+commit.8a97fa7a</code></td>\n<td><code>v0.8.26+commit.8a97fa7a</code></td>\n</tr>\n<tr>\n<td>optimizationUsed</td>\n<td>int</td>\n<td>是否使用了优化，否<code>0</code>，是<code>1</code></td>\n<td><code>0</code></td>\n</tr>\n</tbody></table>\n<p>补充：</p>\n<p>获取solc编译器版本：打开cmd，输入</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #FFCB6B\">solc</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C3E88D\">--version</span></span></code></pre></div><p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/6e32974af15848c29f1e410909f7fcf0_1739762070378.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"Check-Source-Code-Verification-Status接口\"><a href=\"#Check-Source-Code-Verification-Status接口\" class=\"headerlink\" title=\"Check Source Code Verification Status接口\"></a>Check Source Code Verification Status接口</h3><p>返回合同验证请求的成功或错误状态。</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/468b3bf5680b425093fe38dd241d4e0a_1739762070378.png\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/9076960a48b04e13804e828d472f6603_1739762075347.png\" alt=\"在这里插入图片描述\"></p>\n<p>这个接口相对于上一个，就好写很多，只是简单的一个GET请求，我们很容易地写出以下代码。</p>\n<div class=\"language-go\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">go</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">package</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">utils</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">import</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">encoding/json</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">fmt</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">io</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #FFCB6B\">net/http</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">type</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">CheckVerificationStatusRequest</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">struct</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    ApiKey </span><span style=\"color: #C792EA\">string</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">json:&quot;apiKey&quot;</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// API密钥</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Guid   </span><span style=\"color: #C792EA\">string</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">json:&quot;guid&quot;</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #BABED8\">   </span><span style=\"color: #676E95; font-style: italic\">// 从验证请求收到的唯一值</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">type</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">CheckVerificationStatusResponse</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">struct</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Status  </span><span style=\"color: #C792EA\">string</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">json:&quot;status&quot;</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #BABED8\">  </span><span style=\"color: #676E95; font-style: italic\">// 状态</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Message </span><span style=\"color: #C792EA\">string</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">json:&quot;message&quot;</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 详细信息</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    Result  </span><span style=\"color: #C792EA\">string</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">json:&quot;result&quot;</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #BABED8\">  </span><span style=\"color: #676E95; font-style: italic\">// 具体结果</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">func</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">CheckVerificationStatus</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">apiKey</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> guid </span><span style=\"color: #C792EA\">string</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">error</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    requestData </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> CheckVerificationStatusRequest</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        ApiKey</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> apiKey</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        Guid</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\">   guid</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 创建一个 Client 实例</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    client </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8\">http</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Client</span><span style=\"color: #89DDFF\">&#123;&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 构建GET请求的URL</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    apiURL </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">https://api.etherscan.io/api?module=contract&amp;action=checkverifystatus&amp;guid=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> requestData</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Guid </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">&amp;apikey=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> requestData</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">ApiKey</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 创建GET请求</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    req</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> http</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">NewRequest</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">GET</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> apiURL</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Errorf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">创建GET请求失败：</span><span style=\"color: #F07178\">%v</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 发送GET请求到Etherscan API</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    resp</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> client</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Do</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">req</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Errorf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">GET请求失败：</span><span style=\"color: #F07178\">%v</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">defer</span><span style=\"color: #BABED8\"> resp</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Body</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Close</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 读取响应体</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    body</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> io</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">ReadAll</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">resp</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Body</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Errorf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">读取响应体失败：</span><span style=\"color: #F07178\">%v</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 解析JSON响应</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">var</span><span style=\"color: #BABED8\"> checkVerificationStatusResponse CheckVerificationStatusResponse</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    err </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> json</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Unmarshal</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">body</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8\">checkVerificationStatusResponse</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> err </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Errorf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">解析JSON响应失败：</span><span style=\"color: #F07178\">%v</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> err</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 检查验证状态</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> checkVerificationStatusResponse</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Status </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">1</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Errorf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">验证失败：</span><span style=\"color: #F07178\">%s</span><span style=\"color: #C3E88D\">，</span><span style=\"color: #F07178\">%s</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> checkVerificationStatusResponse</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Message</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> checkVerificationStatusResponse</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Result</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    fmt</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Printf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">验证成功：</span><span style=\"color: #F07178\">%s</span><span style=\"color: #C3E88D\">，</span><span style=\"color: #F07178\">%s</span><span style=\"color: #BABED8\">\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> checkVerificationStatusResponse</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Message</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> checkVerificationStatusResponse</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Result</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">nil</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span></code></pre></div><p>通过这个函数，我们可以查询我们提交的验证是否已经通过了。</p>\n<p>参数列表：</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>类型</th>\n<th>描述</th>\n<th>举例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>apiKey</td>\n<td>string</td>\n<td>Etherscan的Api密钥，注册账户免费获取</td>\n<td><code>**********************************</code></td>\n</tr>\n<tr>\n<td>guid</td>\n<td>string</td>\n<td>从验证请求收到的唯一值<code>guid</code></td>\n<td><code>pdresyk3uidtwtcn5qxp3gqyp4ifsughl9hr8xdt3t2iw7acug</code></td>\n</tr>\n</tbody></table>\n<h3 id=\"演示示例及注意事项\"><a href=\"#演示示例及注意事项\" class=\"headerlink\" title=\"演示示例及注意事项\"></a>演示示例及注意事项</h3><p>然后我用我在上一篇博客，也就是文章最开始的链接中的这个样例合约（已经部署在Sepolia上，但未进行验证），进行演示。</p>\n<p>下面是调用Verify()函数的过程，（注意，因为网络问题，所以我对这个函数进行了小小的修改，所以叫VerifyZh()函数，后面会进行说明的），然后我们得到返回的guid标识。</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/fab108ac42db4b22aee496181d007ad2_1739762075347.png\" alt=\"在这里插入图片描述\"></p>\n<p>接着，下面是调用CheckVerificationStatus()函数的过程，（注意，因为网络问题，所以我对这个函数进行了小小的修改，所以叫CheckVerificationStatusZh()函数，后面会进行说明的），然后我们看到我们的验证已经完成了！</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/905615bd350045239aef45824d3a370a_1739762075347.png\" alt=\"在这里插入图片描述\"></p>\n<p>当然也有可能失败，因为验证是需要排队的，等待一段时间，再次查询就好了。</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/b0ebf4bb05544d6597d84bc67b4df8df_1739762075347.png\" alt=\"在这里插入图片描述\"></p>\n<p>然后打开Etherscan，查看我们的合约，可以看到它的Contract上多了一个√，我们点击后，就可以看到我们合约的源代码以及其他信息了。</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/5fe786fc4d22491ab1571009bc876106_1739762075347.png\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/811f959b10c74184871ed12ea9cad5ca_1739762076591.png\" alt=\"在这里插入图片描述\"></p>\n<p>注意</p>\n<p>无法验证合约，有很多原因，请根据报错信息自行摸索，或者在下方留言。</p>\n<p>此外Etherscan很聪明，如果别人已经验证过一个合约，然后你部署了跟他一模一样的字节码，就可能导致你部署的合约不用验证，就已经验证了。</p>\n<h3 id=\"网络问题无法调用Etherscan接口（最重要的步骤）\"><a href=\"#网络问题无法调用Etherscan接口（最重要的步骤）\" class=\"headerlink\" title=\"网络问题无法调用Etherscan接口（最重要的步骤）\"></a>网络问题无法调用Etherscan接口（最重要的步骤）</h3><p>打开魔法软件面板，点击设置，查看代理端口。</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/e1521a11ab3f46dc9ab39fcc0f6dfe66_1739762076591.png\" alt=\"在这里插入图片描述\"></p>\n<p>或者，打开windows设置，点击网络和Internet-&gt;代理-&gt;手动设置代理服务器-&gt;编辑，查看端口。</p>\n<p><img src=\"https://stblogs.oss-cn-chengdu.aliyuncs.com/blog/c7752c66b88741289a5c17d6e0847cf8_1739762076591.png\" alt=\"在这里插入图片描述\"></p>\n<p>然后将之前的代码中的如下代码</p>\n<div class=\"language-go\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">go</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 创建一个 Client 实例</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    client </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8\">http</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Client</span><span style=\"color: #89DDFF\">&#123;&#125;</span></span></code></pre></div><p>替换为（注意端口号！！！）</p>\n<div class=\"language-go\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">go</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 创建一个自定义的 Transport 实例</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    transport </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8\">http</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Transport</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        Proxy</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">func(</span><span style=\"color: #BABED8\">req </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #BABED8\">http</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Request</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(*</span><span style=\"color: #BABED8\">url</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">URL</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">error</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> url</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">Parse</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">http://127.0.0.1:7897</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 设置代理（注意端口号！！！）</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">&#125;,</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #676E95; font-style: italic\">// 创建一个自定义的 Client 实例</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    client </span><span style=\"color: #89DDFF\">:=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&amp;</span><span style=\"color: #BABED8\">http</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">Client</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        Transport</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #BABED8\"> transport</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 设置 Transport</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><p>就可以了，我的加了Zh的函数就是修改了这段代码。</p>\n<p>上述方法适用于大部分因网络问题，无法调用第三方api接口的问题。</p>\n<p>这篇文章到这里就结束了，希望对您有所帮助，欢迎点赞、评论加收藏，您的支持是对我最大的帮助！</p>\n<p>Article link： <a href=\"https://tqgoblin.site/post/csdn/golang%E9%AA%8C%E8%AF%81Etherscan%E4%B8%8A%E7%9A%84%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/\">https://tqgoblin.site/post/csdn/golang验证Etherscan上的智能合约/</a> <div align=left> Author：<a href=\"https://www.tqgoblin.site\"> Stephen </a> </div></p>\n","text":"golang验证Etherscan上的智能合约在阅读此文章前，您需要掌握一定的基础知识，如golang与以太坊交互，此篇文章是对其的补充，提供利用代码自动验证智...","permalink":"/post/csdn/golang验证Etherscan上的智能合约","photos":[],"count_time":{"symbolsCount":"9.6k","symbolsTime":"9 mins."},"categories":[{"name":"区块链学习","slug":"区块链学习","count":8,"path":"api/categories/区块链学习.json"}],"tags":[{"name":"go语言学习 golang 智能合约 开发语言 Etherscan 验证","slug":"go语言学习-golang-智能合约-开发语言-Etherscan-验证","count":1,"path":"api/tags/go语言学习-golang-智能合约-开发语言-Etherscan-验证.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#golang%E9%AA%8C%E8%AF%81Etherscan%E4%B8%8A%E7%9A%84%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6\"><span class=\"toc-text\">golang验证Etherscan上的智能合约</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E9%AA%8C%E8%AF%81%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6\"><span class=\"toc-text\">为什么要验证智能合约</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8golang%E5%8E%BB%E9%AA%8C%E8%AF%81%E5%90%88%E7%BA%A6\"><span class=\"toc-text\">如何使用golang去验证合约</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96EtherscanAPI%E5%AF%86%E9%92%A5\"><span class=\"toc-text\">获取EtherscanAPI密钥</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Verify-Source-Code%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">Verify Source Code接口</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Check-Source-Code-Verification-Status%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">Check Source Code Verification Status接口</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%BC%94%E7%A4%BA%E7%A4%BA%E4%BE%8B%E5%8F%8A%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\"><span class=\"toc-text\">演示示例及注意事项</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BD%91%E7%BB%9C%E9%97%AE%E9%A2%98%E6%97%A0%E6%B3%95%E8%B0%83%E7%94%A8Etherscan%E6%8E%A5%E5%8F%A3%EF%BC%88%E6%9C%80%E9%87%8D%E8%A6%81%E7%9A%84%E6%AD%A5%E9%AA%A4%EF%BC%89\"><span class=\"toc-text\">网络问题无法调用Etherscan接口（最重要的步骤）</span></a></li></ol></li></ol>","author":{"name":"Stephen","slug":"blog-author","avatar":"../img/logo.png","link":"/","description":"Love and Share","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Kafka中怎么保证消息不会丢失和不重复消费？","uid":"80846fe2badad166d0ce9fff99b0e646","slug":"csdn/Kafka中怎么保证消息不会丢失和不重复消费？","date":"2022-10-09T02:53:10.000Z","updated":"2025-02-17T04:22:34.725Z","comments":true,"path":"api/articles/csdn/Kafka中怎么保证消息不会丢失和不重复消费？.json","keywords":"Stephen web3","cover":[],"text":"从两个方面分析：消息推送和消息消费。也就是生产者和消费者两方面。首先我们需要知道topic的概念。 Topic ： 话题，可以理解为一个队列， 生产者和消费者面...","permalink":"/post/csdn/Kafka中怎么保证消息不会丢失和不重复消费？","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"mq","slug":"mq","count":5,"path":"api/categories/mq.json"}],"tags":[{"name":"kafka","slug":"kafka","count":1,"path":"api/tags/kafka.json"}],"author":{"name":"Stephen","slug":"blog-author","avatar":"../img/logo.png","link":"/","description":"Love and Share","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"go语言--区块链学习（三）","uid":"85c9259013736ba6783892461c9c0cc9","slug":"csdn/go语言--区块链学习（三）","date":"2022-04-22T13:49:35.000Z","updated":"2025-02-17T03:38:06.942Z","comments":true,"path":"api/articles/csdn/go语言--区块链学习（三）.json","keywords":"Stephen web3","cover":null,"text":"模块三：以太坊想要深入学习智能合约的小伙伴，一定不要错过的视频： javascript版：（32 小时最全课程）区块链，智能合约 & 全栈 Web3 开发_哔哩...","permalink":"/post/csdn/go语言--区块链学习（三）","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"区块链学习","slug":"区块链学习","count":8,"path":"api/categories/区块链学习.json"}],"tags":[{"name":"区块链 golang 学习","slug":"区块链-golang-学习","count":1,"path":"api/tags/区块链-golang-学习.json"}],"author":{"name":"Stephen","slug":"blog-author","avatar":"../img/logo.png","link":"/","description":"Love and Share","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}